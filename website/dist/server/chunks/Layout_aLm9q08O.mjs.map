{"version":3,"file":"Layout_aLm9q08O.mjs","sources":["../../../src/layouts/Aside.astro","../../../src/services/util.ts","../../../src/services/api.ts","../../../src/services/app.ts","../../../src/services/downloads.ts","../../../src/services/scan.ts","../../../src/services/ws.ts","../../../src/components/ChangePlaybackTargetModal/ChangePlaybackTargetModal.tsx","../../../src/services/silence-player.ts","../../../src/services/player.ts","../../../src/services/formatting.ts","../../../src/components/Artist/Artist.tsx","../../../src/components/Album/Album.tsx","../../../src/components/Playlist/Playlist.tsx","../../../src/components/Volume/Volume.tsx","../../../src/components/Visualization/Visualization.tsx","../../../src/components/Player/Player.tsx","../../../src/layouts/Layout.astro"],"sourcesContent":["---\nconst search = Object.fromEntries(new URLSearchParams(Astro.url.searchParams));\n---\n\n<navigation-sidebar data-turbo-permanent id=\"navigation-sidebar\">\n    <aside\n        class={`navigation-bar-container${\n            search.navToggled === 'true' ? ' toggled' : ' default'\n        }`}\n    >\n        <div class=\"navigation-bar\">\n            <div class=\"navigation-bar-header\">\n                <a href=\"/\" class=\"navigation-bar-header-home-link\">\n                    <img\n                        class=\"navigation-bar-header-home-link-logo-icon\"\n                        src=\"/img/icon128.png\"\n                    />\n                    <h1 class=\"navigation-bar-header-home-link-text\">\n                        MoosicBox\n                    </h1>\n                </a>\n                <div class=\"navigation-bar-header-action-links\">\n                    <a\n                        class=\"settings-link\"\n                        href=\"/settings\"\n                        aria-describedby=\"settings-link-description\"\n                    >\n                        <img\n                            class=\"settings-gear-icon\"\n                            src=\"/img/settings-gear-white.svg\"\n                            alt=\"View MoosicBox Settings\"\n                        />\n                    </a>\n                    <div id=\"settings-link-description\" style=\"display:none\">\n                        View MoosicBox Settings\n                    </div>\n                    <button\n                        type=\"button\"\n                        class=\"toggle-expand-button\"\n                        aria-describedby=\"toggle-expand-button-link-description\"\n                    >\n                        <img\n                            class=\"collapse-navigation-bar\"\n                            src=\"/img/chevron-left-white.svg\"\n                            alt=\"Collapse navigation\"\n                        />\n                        <img\n                            class=\"expand-navigation-bar\"\n                            src=\"/img/chevron-right-white.svg\"\n                            alt=\"Expand navigation\"\n                        />\n                    </button>\n                    <div\n                        id=\"toggle-expand-button-link-description\"\n                        style=\"display:none\"\n                    >\n                        Toggle navigation bar collapsed\n                    </div>\n                </div>\n            </div>\n            <ul>\n                <li>\n                    <a href=\"/\">Home</a>\n                </li>\n                <li>\n                    <a href=\"/downloads\">Downloads</a>\n                </li>\n            </ul>\n            <h1 class=\"my-collection-header\">My Collection</h1>\n            <ul>\n                <li>\n                    <a href=\"/albums\">Albums</a>\n                </li>\n                <li>\n                    <a href=\"/artists\">Artists</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"mobile-toggle-expand-button\">\n            <img\n                class=\"mobile-expand-navigation-bar\"\n                src=\"/img/chevron-left.svg\"\n            />\n        </div>\n    </aside>\n</navigation-sidebar>\n\n<script>\n    import { getQueryParam, isMobile, setQueryParam } from '~/services/util';\n\n    class NavbarAside extends HTMLElement {\n        container = this.querySelector('.navigation-bar-container')!;\n        toggleButton = this.querySelector('.toggle-expand-button')!;\n        mobileToggleButton = this.querySelector(\n            '.mobile-toggle-expand-button',\n        )!;\n\n        constructor() {\n            super();\n\n            if (isMobile()) {\n                this.querySelectorAll('a').forEach((e) => {\n                    e.addEventListener('click', () => this.toggle());\n                });\n            }\n\n            this.mobileToggleButton.addEventListener('click', () =>\n                this.toggle(),\n            );\n            this.toggleButton.addEventListener('click', () => this.toggle());\n        }\n\n        toggle(toggled?: boolean | undefined) {\n            if (typeof toggled === 'undefined') {\n                toggled = !this.container.classList.contains('toggled');\n            }\n\n            this.container.classList.toggle('toggled', toggled);\n            this.container.classList.toggle('default', !toggled);\n\n            const mainContent = document.querySelector('.main-content')!;\n\n            setQueryParam('navToggled', toggled.toString());\n\n            mainContent.classList.toggle('toggled', toggled);\n            mainContent.classList.toggle('default', !toggled);\n            setQueryParam('navToggled', toggled.toString());\n        }\n    }\n\n    customElements.define('navigation-sidebar', NavbarAside);\n\n    function initClasses() {\n        const toggled = document\n            .querySelector('.navigation-bar-container')!\n            .classList.contains('toggled');\n        const mainContent = document.querySelector('.main-content')!;\n        const param = getQueryParam('navToggled');\n\n        if (param && param !== toggled.toString()) {\n            setQueryParam('navToggled', toggled.toString());\n        }\n\n        mainContent.classList.toggle('toggled', toggled);\n        mainContent.classList.toggle('default', !toggled);\n    }\n\n    window.addEventListener('turbo:render', initClasses, false);\n\n    initClasses();\n</script>\n","import { isServer } from 'solid-js/web';\nimport type { Entries } from './types';\nimport { createSignal, onCleanup, onMount } from 'solid-js';\nimport { atom } from 'nanostores';\nimport type { WritableAtom } from 'nanostores';\nimport { persistentAtom } from '@nanostores/persistent';\n\ntype ListenerMapping<T> = {\n    baseListener: (value: T) => void;\n    listener: (value: T, prevValue: T) => void;\n};\n\nexport class ClientAtom<T> {\n    private _atom: WritableAtom<T>;\n    private _initial: T;\n    private _prevValue: T;\n    private _name: string | undefined;\n    private _listeners: ListenerMapping<T>[] = [];\n\n    constructor(initial: T, name?: string | undefined) {\n        this._initial = initial;\n        this._name = name;\n        if (name) {\n            this._atom = persistentAtom(name, initial, {\n                encode: JSON.stringify,\n                decode: JSON.parse,\n            });\n        } else {\n            this._atom = atom(initial);\n        }\n\n        this._prevValue = this.get();\n    }\n\n    get name(): string | undefined {\n        return this._name;\n    }\n\n    get initial(): T {\n        return this._initial;\n    }\n\n    get(): T {\n        return this._atom.get();\n    }\n\n    set(value: T) {\n        this._atom.set(value);\n        this._prevValue = value;\n    }\n\n    listen(listener: (value: T, prevValue: T) => void) {\n        const mapping: ListenerMapping<T> = {\n            baseListener: (v: T) => listener(v, this._prevValue),\n            listener,\n        };\n        this._atom.listen(mapping.baseListener);\n        this._listeners.push(mapping);\n    }\n\n    off(listener: (value: T, prevValue: T) => void) {\n        const index = this._listeners.findIndex((x) => x.listener === listener);\n        if (index !== -1) {\n            this._listeners.splice(index, 1);\n            this._atom.off();\n            this._listeners.forEach((mapping) => {\n                this._atom.listen(mapping.baseListener);\n            });\n        }\n    }\n}\n\nexport function clientAtom<T>(\n    initial: T,\n    name?: string | undefined,\n): ClientAtom<T> {\n    return new ClientAtom<T>(initial, name);\n}\n\nexport function clientSignal<T>(\n    atom: ClientAtom<T>,\n): [() => T, (value: T) => void] {\n    let init = true;\n\n    const [get, set] = createSignal<T>(atom.get(), {\n        equals(a, b) {\n            if (init) {\n                init = false;\n                return false;\n            }\n            return a === b;\n        },\n    });\n\n    const listener = (value: T) => {\n        set(value as Parameters<typeof set>[0]);\n    };\n\n    onMount(() => {\n        set(atom.get() as Parameters<typeof set>[0]);\n        atom.listen(listener);\n    });\n    onCleanup(() => {\n        atom.off(listener);\n    });\n\n    return [\n        () => {\n            const wasInit = init;\n            const value = get();\n\n            if (wasInit) {\n                return atom.initial;\n            } else {\n                return value;\n            }\n        },\n        (value: T) => {\n            atom.set(value);\n        },\n    ];\n}\n\ntype BaseCallbackType = (\n    ...args: any // eslint-disable-line @typescript-eslint/no-explicit-any\n) => boolean | void | Promise<boolean | void>;\nexport function createListener<CallbackType extends BaseCallbackType>(): {\n    on: (callback: CallbackType) => CallbackType;\n    onFirst: (callback: CallbackType) => CallbackType;\n    off: (callback: CallbackType) => void;\n    listeners: CallbackType[];\n    trigger: CallbackType;\n} {\n    let listeners: CallbackType[] = [];\n    function on(callback: CallbackType): CallbackType {\n        listeners.push(callback);\n        return callback;\n    }\n    function onFirst(callback: CallbackType): CallbackType {\n        listeners.unshift(callback);\n        return callback;\n    }\n    function off(callback: CallbackType): void {\n        listeners = listeners.filter((c) => c !== callback);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const trigger = (...args: any) => {\n        for (const listener of listeners) {\n            if (listener(...args) === false) {\n                break;\n            }\n        }\n    };\n\n    return { on, onFirst, off, listeners, trigger: trigger as CallbackType };\n}\n\nexport function orderedEntries<T extends Parameters<typeof Object.entries>[0]>(\n    value: T,\n    order: (keyof T)[],\n): Entries<T> {\n    const updates = Object.entries(value) as Entries<T>;\n\n    updates.sort(([key1], [key2]) => {\n        let first = order.indexOf(key1 as keyof T);\n        let second = order.indexOf(key2 as keyof T);\n        first = first === -1 ? order.length : first;\n        second = second === -1 ? order.length : second;\n\n        return first - second;\n    });\n\n    return updates;\n}\n\nexport class QueryParams {\n    private params: [string, string][];\n\n    public constructor(\n        init?: Record<string, string | undefined> | QueryParams | string,\n    ) {\n        this.params = [];\n\n        if (typeof init === 'string') {\n            if (init[0] === '?') {\n                init = init.substring(1);\n            }\n\n            if (init.trim().length > 0) {\n                init.split('&')\n                    .map((pair) => pair.split('='))\n                    .forEach(([key, value]) => {\n                        this.params.push([key!, value!]);\n                    });\n            }\n        } else if (init instanceof QueryParams) {\n            this.params.push(...init.params);\n        } else if (init) {\n            Object.entries(init).forEach(([key, value]) => {\n                if (typeof value === 'undefined') return;\n                this.params.push([key, value]);\n            });\n        }\n    }\n\n    public get size(): number {\n        return this.params.length;\n    }\n\n    public has(key: string): boolean {\n        return !!this.params.find(([k, _value]) => k === key);\n    }\n\n    public get(key: string): string | undefined {\n        const value = this.params.find(([k, _value]) => k === key);\n\n        if (value) {\n            return value[1];\n        }\n\n        return undefined;\n    }\n\n    public set(key: string, value: string) {\n        const existing = this.params.find(([k, _value]) => k === key);\n\n        if (existing) {\n            existing[1] = value;\n        } else {\n            this.params.push([key, value]);\n        }\n    }\n\n    public delete(key: string) {\n        this.params = this.params.filter(([k, _value]) => k !== key);\n    }\n\n    public forEach(func: (key: string, value: string) => void) {\n        this.params.forEach(([key, value]) => func(key, value));\n    }\n\n    public toString(): string {\n        return `${this.params\n            .map(\n                ([key, value]) =>\n                    `${encodeURIComponent(key)}=${encodeURIComponent(value)}`,\n            )\n            .join('&')}`;\n    }\n}\n\nexport function getQueryParam(key: string) {\n    const url = new URL(window.location.href);\n\n    return url.searchParams.get(key);\n}\n\nexport function setQueryParam(key: string, value: string | undefined) {\n    const url = new URL(window.location.href);\n\n    if (typeof value === 'undefined') {\n        url.searchParams.delete(key);\n    } else {\n        if (url.searchParams.get(key) === value) {\n            console.debug('Query param', key, 'is already set');\n            return;\n        }\n        url.searchParams.set(key, value);\n    }\n\n    console.debug('Replacing url state with', url.toString());\n\n    window.history.replaceState({}, '', url);\n    window.Turbo.navigator.history.replace(url);\n}\n\nexport function historyBack() {\n    window.history.back();\n}\n\nexport function isMobile() {\n    if (isServer) return false;\n\n    return isUserAgentMobile(\n        navigator.userAgent || (('opera' in window && window.opera) as string),\n    );\n}\n\nexport function isUserAgentMobile(userAgent: string | null | undefined) {\n    if (!userAgent) return false;\n\n    return (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n            userAgent,\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n            userAgent.substring(0, 4),\n        )\n    );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function areEqualShallow(a: any, b: any) {\n    for (const key in a) {\n        if (!(key in b) || a[key] !== b[key]) {\n            return false;\n        }\n    }\n    for (const key in b) {\n        if (!(key in a) || a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction circularStringify(obj: object): string {\n    const getCircularReplacer = () => {\n        const seen = new WeakSet();\n        return (_key: string, value: unknown) => {\n            if (typeof value === 'object' && value !== null) {\n                if (seen.has(value)) {\n                    return '[[circular]]';\n                }\n                seen.add(value);\n            }\n            return value;\n        };\n    };\n\n    return JSON.stringify(obj, getCircularReplacer());\n}\n\nexport function objToStr(obj: unknown): string {\n    if (typeof obj === 'string') {\n        return obj;\n    } else if (typeof obj === 'undefined') {\n        return 'undefined';\n    } else if (obj === null) {\n        return 'null';\n    } else if (typeof obj === 'object') {\n        return circularStringify(obj);\n    } else {\n        return obj.toString();\n    }\n}\n\nexport const trace = console.trace;\n\nexport function throwExpression(errorMessage: string): never {\n    throw new Error(errorMessage);\n}\n\nexport function deepEqual<T>(x: T, y: T) {\n    if (x === y) {\n        return true;\n    } else if (\n        typeof x == 'object' &&\n        x != null &&\n        typeof y == 'object' &&\n        y != null\n    ) {\n        if (Object.keys(x).length != Object.keys(y).length) return false;\n\n        for (const prop in x) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (y.hasOwnProperty(prop)) {\n                if (!deepEqual(x[prop], y[prop])) return false;\n            } else return false;\n        }\n\n        return true;\n    } else return false;\n}\n\nexport function onlyUnique<T>(value: T, index: number, array: T[]): boolean {\n    return array.indexOf(value) === index;\n}\n","import { createSignal } from 'solid-js';\nimport type { Setter } from 'solid-js';\nimport {\n    QueryParams,\n    clientAtom,\n    createListener,\n    objToStr,\n    throwExpression,\n} from './util';\nimport { makePersisted } from '@solid-primitives/storage';\nexport type Artist =\n    | Api.LibraryArtist\n    | Api.TidalArtist\n    | Api.QobuzArtist\n    | Api.YtArtist;\nexport type ArtistType = Artist['type'];\n\nexport type Album =\n    | Api.LibraryAlbum\n    | Api.TidalAlbum\n    | Api.QobuzAlbum\n    | Api.YtAlbum;\nexport type AlbumType = Album['type'];\n\nexport type Track =\n    | Api.LibraryTrack\n    | Api.TidalTrack\n    | Api.QobuzTrack\n    | Api.YtTrack;\nexport type TrackType = Track['type'];\n\nexport type ScanOrigin = 'LOCAL' | 'TIDAL' | 'QOBUZ' | 'YT';\nexport type ApiSource = 'LIBRARY' | 'TIDAL' | 'QOBUZ' | 'YT';\nexport type Id = string | number;\n\ntype GenericTrack = Track;\n\nexport function trackId(\n    track: Track | number | undefined,\n): string | number | undefined {\n    if (!track) return undefined;\n    if (typeof track === 'number' || typeof track === 'string') return track;\n    return 'trackId' in track\n        ? track.trackId\n        : 'id' in track\n          ? track.id\n          : undefined;\n}\n\nexport function toSessionPlaylistTrack(\n    track: Track,\n): Api.UpdateSessionPlaylistTrack {\n    if (track.type === 'LIBRARY') {\n        return {\n            id: `${track.trackId}`,\n            type: track.type,\n            data: JSON.stringify(track),\n        };\n    } else {\n        return {\n            id: `${track.id}`,\n            type: track.type,\n            data: JSON.stringify(track),\n        };\n    }\n}\n\nexport namespace Api {\n    const onSignatureTokenUpdatedListeners =\n        createListener<(url: string) => void>();\n    export const onSignatureTokenUpdated = onSignatureTokenUpdatedListeners.on;\n    export const offSignatureTokenUpdated =\n        onSignatureTokenUpdatedListeners.off;\n    const [_signatureToken, _setSignatureToken] = makePersisted(\n        createSignal('api.v2.signatureToken'),\n        {\n            name: 'signatureToken',\n        },\n    );\n    export function signatureToken(): ReturnType<typeof _signatureToken> {\n        return _signatureToken();\n    }\n    export function setSignatureToken(url: string): void {\n        if (url === _signatureToken()) {\n            return;\n        }\n        _setSignatureToken(url);\n\n        onSignatureTokenUpdatedListeners.trigger(url);\n    }\n\n    export type GlobalSearchResultType = 'ARTIST' | 'ALBUM' | 'TRACK';\n    export type GlobalSearchResult = (\n        | GlobalArtistSearchResult\n        | GlobalAlbumSearchResult\n        | GlobalTrackSearchResult\n    ) & { type: GlobalSearchResultType };\n\n    export interface GlobalArtistSearchResult {\n        type: 'ARTIST';\n        artistId: string | number;\n        title: string;\n        containsCover: boolean;\n        blur: boolean;\n    }\n\n    export interface GlobalAlbumSearchResult {\n        type: 'ALBUM';\n        artistId: string | number;\n        artist: string;\n        albumId: string | number;\n        title: string;\n        containsCover: boolean;\n        blur: boolean;\n        dateReleased: string;\n        dateAdded: string;\n        versions: AlbumVersionQuality[];\n    }\n\n    export interface GlobalTrackSearchResult {\n        type: 'TRACK';\n        artistId: string | number;\n        artist: string;\n        albumId: string | number;\n        album: string;\n        trackId: string | number;\n        title: string;\n        containsCover: boolean;\n        blur: boolean;\n        dateReleased: string;\n        dateAdded: string;\n        format: PlaybackQuality['format'];\n        bitDepth: number;\n        audioBitrate: number;\n        overallBitrate: number;\n        sampleRate: number;\n        channels: number;\n        source: TrackSource;\n    }\n\n    export enum PlayerType {\n        HOWLER = 'HOWLER',\n    }\n\n    export interface Player {\n        playerId: number;\n        audioOutputId: string;\n        name: string;\n    }\n\n    export interface Connection {\n        connectionId: string;\n        name: string;\n        alive: boolean;\n        players: Player[];\n    }\n\n    export interface LibraryArtist {\n        artistId: number;\n        title: string;\n        containsCover: boolean;\n        blur: boolean;\n        tidalId?: number;\n        qobuzId?: number;\n        type: 'LIBRARY';\n    }\n\n    export enum TrackSource {\n        LOCAL = 'LOCAL',\n        TIDAL = 'TIDAL',\n        QOBUZ = 'QOBUZ',\n        YT = 'YT',\n    }\n\n    export interface AlbumVersionQuality {\n        format: PlaybackQuality['format'] | null;\n        bitDepth: number | null;\n        sampleRate: number | null;\n        channels: number | null;\n        source: TrackSource;\n    }\n\n    export interface LibraryAlbum {\n        albumId: number;\n        title: string;\n        artist: string;\n        artistId: number;\n        containsCover: boolean;\n        blur: boolean;\n        dateReleased: string;\n        dateAdded: string;\n        versions: AlbumVersionQuality[];\n        tidalId?: number;\n        qobuzId?: string;\n        ytId?: string;\n        tidalArtistId?: number;\n        qobuzArtistId?: number;\n        ytArtistId?: string;\n        type: 'LIBRARY';\n    }\n\n    export interface LibraryTrack {\n        trackId: number;\n        number: number;\n        title: string;\n        duration: number;\n        album: string;\n        albumId: number;\n        dateReleased: string;\n        artist: string;\n        artistId: number;\n        containsCover: boolean;\n        blur: boolean;\n        bytes: number;\n        format: PlaybackQuality['format'];\n        bitDepth: number;\n        audioBitrate: number;\n        overallBitrate: number;\n        sampleRate: number;\n        channels: number;\n        type: 'LIBRARY';\n        source: ApiSource;\n    }\n\n    export interface AlbumVersion {\n        tracks: Api.LibraryTrack[];\n        format: PlaybackQuality['format'] | null;\n        bitDepth: number | null;\n        audioBitrate: number | null;\n        overallBitrate: number | null;\n        sampleRate: number | null;\n        channels: number | null;\n        source: TrackSource;\n    }\n\n    export const AudioFormat = {\n        AAC: 'AAC',\n        FLAC: 'FLAC',\n        MP3: 'MP3',\n        OPUS: 'OPUS',\n        SOURCE: 'SOURCE',\n    } as const;\n\n    export interface PlaybackQuality {\n        format: keyof typeof AudioFormat;\n    }\n\n    export interface UpdatePlaybackSession {\n        sessionId: number;\n        name?: string;\n        active?: boolean;\n        playing?: boolean;\n        position?: number;\n        seek?: number;\n        volume?: number;\n        playbackTarget?: PlaybackTarget;\n        playlist?: UpdatePlaybackSessionPlaylist;\n    }\n\n    export interface UpdatePlaybackSessionPlaylist {\n        sessionPlaylistId: number;\n        tracks: UpdateSessionPlaylistTrack[];\n    }\n\n    export interface UpdateSessionPlaylistTrack {\n        id: string;\n        type: TrackType;\n        data?: string;\n    }\n\n    export interface AudioZone {\n        id: number;\n        name: string;\n        players: Api.Player[];\n    }\n\n    export interface UpdateAudioZone {\n        id: number;\n        name?: string;\n        players?: number[];\n    }\n\n    export interface AudioZonePlaybackTarget {\n        type: 'AUDIO_ZONE';\n        audioZoneId: number;\n    }\n\n    export interface ConnectionOutputPlaybackTarget {\n        type: 'CONNECTION_OUTPUT';\n        connectionId: string;\n        outputId: string;\n    }\n\n    export type PlaybackTarget =\n        | AudioZonePlaybackTarget\n        | ConnectionOutputPlaybackTarget;\n\n    export interface PlaybackSession {\n        sessionId: number;\n        playbackTarget: PlaybackTarget;\n        name: string;\n        active: boolean;\n        playing: boolean;\n        position?: number;\n        seek?: number;\n        volume?: number;\n        playlist: PlaybackSessionPlaylist;\n        quality?: PlaybackQuality;\n    }\n\n    export interface PlaybackSessionPlaylist {\n        sessionPlaylistId: number;\n        tracks: GenericTrack[];\n    }\n\n    export type ArtistSort = 'Name' | 'Name-Desc';\n\n    export type ArtistsRequest = {\n        sources?: AlbumSource[] | undefined;\n        sort?: ArtistSort | undefined;\n        filters?: ArtistFilters | undefined;\n    };\n\n    export type ArtistFilters = {\n        search?: string | undefined;\n    };\n\n    export type AlbumSource = 'Local' | 'Tidal' | 'Qobuz';\n    export type AlbumSort =\n        | 'Artist'\n        | 'Artist-Desc'\n        | 'Name'\n        | 'Name-Desc'\n        | 'Release-Date'\n        | 'Release-Date-Desc'\n        | 'Date-Added'\n        | 'Date-Added-Desc';\n\n    export type AlbumsRequest = {\n        artistId?: number | undefined;\n        tidalArtistId?: number | undefined;\n        qobuzArtistId?: number | undefined;\n        sources?: AlbumSource[] | undefined;\n        sort?: AlbumSort | undefined;\n        filters?: AlbumFilters | undefined;\n        offset?: number | undefined;\n        limit?: number | undefined;\n    };\n\n    export type AlbumFilters = {\n        search?: string | undefined;\n    };\n\n    export function getPath(path: string): string {\n        path = path[0] === '/' ? path.substring(1) : path;\n        const containsQuery = path.includes('?');\n        const params = [];\n        const con = getConnection();\n\n        const clientId = con.clientId;\n        if (con.clientId) {\n            params.push(`clientId=${encodeURIComponent(clientId)}`);\n        }\n        const signatureToken = Api.signatureToken();\n        if (signatureToken) {\n            params.push(`signature=${encodeURIComponent(signatureToken)}`);\n        }\n        if (con.staticToken) {\n            params.push(`authorization=${encodeURIComponent(con.staticToken)}`);\n        }\n\n        const query = `${containsQuery ? '&' : '?'}${params.join('&')}`;\n\n        return `${con.apiUrl}/${path}${query}`;\n    }\n\n    export type QobuzPagingResponse<T> = {\n        items: T[];\n        hasMore: boolean;\n    };\n\n    type BasePagingResponse<T> = {\n        items: T[];\n        count: number;\n        offset: number;\n        limit: number;\n    };\n\n    export type PagingResponseWithTotal<T> = BasePagingResponse<T> & {\n        total: number;\n        hasMore: boolean;\n    };\n\n    export type PagingResponseWithHasMore<T> = BasePagingResponse<T> & {\n        hasMore: boolean;\n    };\n\n    export type PagingResponse<T> =\n        | PagingResponseWithTotal<T>\n        | PagingResponseWithHasMore<T>;\n\n    export interface TidalArtist {\n        id: number;\n        title: string;\n        containsCover: boolean;\n        blur: boolean;\n        type: 'TIDAL';\n    }\n\n    export interface TidalAlbum {\n        id: number;\n        title: string;\n        artist: string;\n        artistId: number;\n        containsCover: boolean;\n        explicit: boolean;\n        copyright?: string | undefined;\n        dateReleased: string;\n        numberOfTracks: number;\n        audioQuality: 'LOSSLESS' | 'HIRES';\n        mediaMetadataTags: TidalMediaMetadataTag[];\n        blur: boolean;\n        type: 'TIDAL';\n    }\n\n    export type TidalAlbumType = 'LP' | 'EPS_AND_SINGLES' | 'COMPILATIONS';\n    export type TidalMediaMetadataTag =\n        | 'LOSSLESS'\n        | 'HIRES_LOSSLESS'\n        | 'MQA'\n        | 'DOLBY_ATMOS';\n\n    export interface TidalTrack {\n        id: number;\n        number: number;\n        title: string;\n        artist: string;\n        artistId: number;\n        containsCover: boolean;\n        explicit: boolean;\n        album: string;\n        albumId: number;\n        duration: number;\n        copyright: string;\n        numberOfTracks: number;\n        audioQuality: 'LOSSLESS' | 'HIRES';\n        mediaMetadataTags: TidalMediaMetadataTag[];\n        type: 'TIDAL';\n        source: ApiSource;\n    }\n\n    export interface QobuzArtist {\n        id: number;\n        title: string;\n        containsCover: boolean;\n        blur: boolean;\n        type: 'QOBUZ';\n    }\n\n    export interface QobuzAlbum {\n        id: string;\n        title: string;\n        artist: string;\n        artistId: number;\n        containsCover: boolean;\n        parentalWarning: boolean;\n        dateReleased: string;\n        numberOfTracks: number;\n        blur: boolean;\n        type: 'QOBUZ';\n    }\n\n    export type QobuzAlbumType = 'LP' | 'EPS_AND_SINGLES' | 'COMPILATIONS';\n\n    export interface QobuzTrack {\n        id: number;\n        number: number;\n        title: string;\n        artist: string;\n        artistId: number;\n        containsCover: boolean;\n        parentalWarning: boolean;\n        album: string;\n        albumId: number;\n        duration: number;\n        copyright: string;\n        numberOfTracks: number;\n        audioQuality: 'LOSSLESS' | 'HIRES';\n        mediaMetadataTags: ('LOSSLESS' | 'HIRES_LOSSLESS' | 'MQA')[];\n        type: 'QOBUZ';\n        source: ApiSource;\n    }\n\n    export interface YtArtist {\n        id: string;\n        title: string;\n        containsCover: boolean;\n        blur: boolean;\n        type: 'YT';\n    }\n\n    export interface YtAlbum {\n        id: string;\n        title: string;\n        artist: string;\n        artistId: string;\n        containsCover: boolean;\n        dateReleased: string;\n        numberOfTracks: number;\n        blur: boolean;\n        type: 'YT';\n    }\n\n    export interface YtTrack {\n        id: string;\n        number: number;\n        title: string;\n        artist: string;\n        artistId: string;\n        containsCover: boolean;\n        parentalWarning: boolean;\n        album: string;\n        albumId: number;\n        duration: number;\n        copyright: string;\n        numberOfTracks: number;\n        audioQuality: 'LOSSLESS' | 'HIRES';\n        mediaMetadataTags: ('LOSSLESS' | 'HIRES_LOSSLESS' | 'MQA')[];\n        type: 'YT';\n        source: ApiSource;\n    }\n\n    export type DownloadTaskState =\n        | 'PENDING'\n        | 'PAUSED'\n        | 'CANCELLED'\n        | 'STARTED'\n        | 'ERROR'\n        | 'FINISHED';\n\n    export type DownloadItemType = 'TRACK' | 'ALBUM_COVER' | 'ARTIST_COVER';\n    export type TrackDownloadItem = {\n        id: number;\n        type: 'TRACK';\n        artistId: number;\n        albumId: number;\n        trackId: number;\n        title: string;\n        source: DownloadApiSource;\n        quality: TrackAudioQuality;\n        containsCover: boolean;\n    };\n    export type AlbumCoverDownloadItem = {\n        type: 'ALBUM_COVER';\n        artistId: number;\n        artist: string;\n        albumId: number;\n        title: string;\n        source: DownloadApiSource;\n        containsCover: boolean;\n    };\n    export type ArtistCoverDownloadItem = {\n        type: 'ARTIST_COVER';\n        artistId: number;\n        albumId: number;\n        title: string;\n        source: DownloadApiSource;\n        containsCover: boolean;\n    };\n    export type DownloadItem =\n        | TrackDownloadItem\n        | AlbumCoverDownloadItem\n        | ArtistCoverDownloadItem;\n\n    export const TrackAudioQuality = {\n        Low: 'LOW', // MP3 320\n        FlacLossless: 'FLAC_LOSSLESS', // FLAC 16 bit 44.1kHz\n        FlacHiRes: 'FLAC_HI_RES', // FLAC 24 bit <= 96kHz\n        FlacHighestRes: 'FLAC_HIGHEST_RES', // FLAC 24 bit > 96kHz <= 192kHz\n    } as const;\n    export type TrackAudioQuality =\n        (typeof TrackAudioQuality)[keyof typeof TrackAudioQuality];\n\n    export type DownloadApiSource = 'TIDAL' | 'QOBUZ' | 'YT';\n\n    export interface DownloadTask {\n        id: number;\n        state: DownloadTaskState;\n        item: DownloadItem;\n        filePath: string;\n        progress: number;\n        bytes: number;\n        totalBytes: number;\n        speed?: number;\n    }\n}\n\nexport interface Connection {\n    id: number;\n    name: string;\n    apiUrl: string;\n    clientId: string;\n    token: string;\n    staticToken: string;\n    players?: Api.Player[];\n}\n\nexport function setActiveConnection(id: number) {\n    const cons = connections.get();\n    const existing = cons.find((x) => x.id === id);\n    if (!existing) throw new Error(`Invalid connection id: ${id}`);\n    setConnection(id, existing);\n}\n\nexport function setConnection(id: number, values: Partial<Connection>) {\n    const con = connection.get();\n    const updated: Connection = {\n        id,\n        name: values.name ?? con?.name ?? '',\n        apiUrl: values.apiUrl ?? con?.apiUrl ?? '',\n        clientId: values.clientId ?? con?.clientId ?? '',\n        token: values.token ?? con?.token ?? '',\n        staticToken: values.staticToken ?? con?.staticToken ?? '',\n    };\n    connection.set(updated);\n    const updatedConnections = connections.get();\n    const existingI = updatedConnections.findIndex((x) => x.id === updated.id);\n    if (existingI !== -1) {\n        updatedConnections[existingI] = updated;\n    } else {\n        updatedConnections.push(updated);\n    }\n    connections.set([...updatedConnections]);\n}\n\nexport const connections = clientAtom<Connection[]>([], 'api.v2.connections');\nconst $connections = () => connections.get();\n\nexport const connection = clientAtom<Connection | null>(\n    $connections()[0] ?? null,\n    'api.v2.connection',\n);\nconst $connection = () => connection.get();\n\nlet connectionId = 1;\n\n$connections()?.forEach((x) => {\n    if (x.id >= connectionId) {\n        connectionId = x.id + 1;\n    }\n});\n\nexport function getNewConnectionId(): number {\n    return connectionId++;\n}\n\nexport interface ApiType {\n    getArtist(\n        artistId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryArtist>;\n    getArtistCover(\n        artist: Artist | Album | Track | undefined,\n        width: number,\n        height: number,\n    ): string;\n    getArtistSourceCover(artist: Artist | Album | Track | undefined): string;\n    getAlbum(\n        id: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryAlbum>;\n    getAlbums(\n        request: Api.AlbumsRequest | undefined,\n        signal?: AbortSignal | null,\n    ): Promise<Api.PagingResponseWithTotal<Api.LibraryAlbum>>;\n    getAllAlbums(\n        request: Api.AlbumsRequest | undefined,\n        onAlbums?: (\n            albums: Api.LibraryAlbum[],\n            allAlbums: Api.LibraryAlbum[],\n            index: number,\n        ) => void,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryAlbum[]>;\n    getAlbumArtwork(\n        album: Album | Track | undefined,\n        width: number,\n        height: number,\n        signal?: AbortSignal | null,\n    ): string;\n    getAlbumSourceArtwork(\n        album: Album | Track | undefined,\n        signal?: AbortSignal | null,\n    ): string;\n    getAlbumTracks(\n        albumId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryTrack[]>;\n    getAlbumVersions(\n        albumId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.AlbumVersion[]>;\n    getTracks(\n        trackIds: number[],\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryTrack[]>;\n    getArtists(\n        request: Api.ArtistsRequest | undefined,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryArtist[]>;\n    fetchSignatureToken(\n        signal?: AbortSignal | null,\n    ): Promise<string | undefined>;\n    refetchSignatureToken(signal?: AbortSignal | null): Promise<void>;\n    validateSignatureToken(signal?: AbortSignal | null): Promise<void>;\n    validateSignatureTokenAndClient(\n        signature: string,\n        signal?: AbortSignal | null,\n    ): Promise<{ valid?: boolean; notFound?: boolean }>;\n    magicToken(\n        magicToken: string,\n        signal?: AbortSignal | null,\n    ): Promise<{ clientId: string; accessToken: string } | false>;\n    globalSearch(\n        query: string,\n        offset?: number,\n        limit?: number,\n        signal?: AbortSignal | null,\n    ): Promise<{ position: number; results: Api.GlobalSearchResult[] }>;\n    searchExternalMusicApi(\n        query: string,\n        api: string,\n        offset?: number,\n        limit?: number,\n        signal?: AbortSignal | null,\n    ): Promise<{ position: number; results: Api.GlobalSearchResult[] }>;\n    searchAll(\n        query: string,\n        offset?: number,\n        limit?: number,\n        onResults?: (\n            results: Api.GlobalSearchResult[],\n            allResults: Api.GlobalSearchResult[],\n            source: ApiSource,\n        ) => void,\n        signal?: AbortSignal | null,\n    ): Promise<Api.GlobalSearchResult[]>;\n    getArtistFromTidalArtistId(\n        tidalArtistId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryArtist>;\n    getArtistFromQobuzArtistId(\n        qobuzArtistId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryArtist>;\n    getArtistFromTidalAlbumId(\n        tidalAlbumId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryArtist>;\n    getTidalArtist(\n        tidalArtistId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.TidalArtist>;\n    getQobuzArtist(\n        qobuzArtistId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.QobuzArtist>;\n    getAllTidalArtistAlbums(\n        tidalArtistId: number,\n        setter?: Setter<Api.TidalAlbum[] | undefined>,\n        types?: Api.TidalAlbumType[],\n        signal?: AbortSignal | null,\n    ): Promise<{\n        lps: Api.TidalAlbum[];\n        epsAndSingles: Api.TidalAlbum[];\n        compilations: Api.TidalAlbum[];\n    }>;\n    getAllQobuzArtistAlbums(\n        qobuzArtistId: number,\n        setter?: Setter<Api.QobuzAlbum[] | undefined>,\n        types?: Api.QobuzAlbumType[],\n        signal?: AbortSignal | null,\n    ): Promise<{\n        lps: Api.QobuzAlbum[];\n        epsAndSingles: Api.QobuzAlbum[];\n        compilations: Api.QobuzAlbum[];\n    }>;\n    getTidalArtistAlbums(\n        tidalArtistId: number,\n        albumType?: Api.TidalAlbumType,\n        signal?: AbortSignal | null,\n    ): Promise<Api.PagingResponse<Api.TidalAlbum>>;\n    getQobuzArtistAlbums(\n        qobuzArtistId: number,\n        albumType?: Api.QobuzAlbumType,\n        signal?: AbortSignal | null,\n    ): Promise<Api.QobuzPagingResponse<Api.QobuzAlbum>>;\n    getAlbumFromTidalAlbumId(\n        tidalAlbumId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryAlbum>;\n    getAlbumFromQobuzAlbumId(\n        qobuzAlbumId: string,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryAlbum>;\n    getLibraryAlbumsFromTidalArtistId(\n        tidalArtistId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryAlbum[]>;\n    getLibraryAlbumsFromQobuzArtistId(\n        qobuzArtistId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryAlbum[]>;\n    getTidalAlbum(\n        tidalAlbumId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.TidalAlbum>;\n    getQobuzAlbum(\n        qobuzAlbumId: string,\n        signal?: AbortSignal | null,\n    ): Promise<Api.QobuzAlbum>;\n    getTidalAlbumTracks(\n        tidalAlbumId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.PagingResponse<Api.TidalTrack>>;\n    getQobuzAlbumTracks(\n        qobuzAlbumId: string,\n        signal?: AbortSignal | null,\n    ): Promise<Api.PagingResponse<Api.QobuzTrack>>;\n    getYtAlbumTracks(\n        ytAlbumId: string,\n        signal?: AbortSignal | null,\n    ): Promise<Api.PagingResponse<Api.YtTrack>>;\n    getTidalTrack(\n        tidalTrackId: number,\n        signal?: AbortSignal | null,\n    ): Promise<Api.TidalTrack>;\n    getTrackUrlForSource(\n        trackId: Id,\n        source: ApiSource,\n        audioQuality: Api.TrackAudioQuality,\n        signal?: AbortSignal | null,\n    ): Promise<string>;\n    addAlbumToLibrary(\n        albumId: {\n            tidalAlbumId?: number;\n            qobuzAlbumId?: string;\n        },\n        signal?: AbortSignal | null,\n    ): Promise<void>;\n    removeAlbumFromLibrary(\n        albumId: {\n            tidalAlbumId?: number;\n            qobuzAlbumId?: string;\n        },\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryAlbum>;\n    refavoriteAlbum(\n        albumId: {\n            tidalAlbumId?: number;\n            qobuzAlbumId?: string;\n        },\n        signal?: AbortSignal | null,\n    ): Promise<Api.LibraryAlbum>;\n    retryDownload(taskId: number, signal?: AbortSignal | null): Promise<void>;\n    download(\n        items: {\n            trackId?: string | number;\n            trackIds?: (string | number)[];\n            albumId?: string | number;\n            albumIds?: (string | number)[];\n        },\n        source: Api.DownloadApiSource,\n        signal?: AbortSignal | null,\n    ): Promise<void>;\n    getDownloadTasks(\n        signal?: AbortSignal | null,\n    ): Promise<Api.PagingResponseWithTotal<Api.DownloadTask>>;\n    getTrackVisualization(\n        track: Track | number,\n        source: ApiSource,\n        max: number,\n        signal?: AbortSignal | null,\n    ): Promise<number[]>;\n    getAudioZones(\n        signal?: AbortSignal | null,\n    ): Promise<Api.PagingResponseWithTotal<Api.AudioZone>>;\n    createAudioZone(\n        name: string,\n        signal?: AbortSignal | null,\n    ): Promise<Api.AudioZone>;\n    updateAudioZone(\n        update: Api.UpdateAudioZone,\n        signal?: AbortSignal | null,\n    ): Promise<Api.AudioZone>;\n    deleteAudioZone(id: number, signal?: AbortSignal | null): Promise<void>;\n    runScan(origins: ScanOrigin[], signal?: AbortSignal | null): Promise<void>;\n    startScan(\n        origins: ScanOrigin[],\n        signal?: AbortSignal | null,\n    ): Promise<void>;\n    enableScanOrigin(\n        origin: ScanOrigin,\n        signal?: AbortSignal | null,\n    ): Promise<void>;\n    addScanPath(path: string, signal?: AbortSignal | null): Promise<void>;\n}\n\nexport function getConnection(): Connection {\n    return $connection() ?? throwExpression('No connection selected');\n}\n\nasync function getArtist(\n    artistId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryArtist> {\n    const con = getConnection();\n\n    const query = new QueryParams({\n        artistId: `${artistId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/artist?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nfunction getAlbumArtwork(\n    album: Album | Track | undefined,\n    width: number,\n    height: number,\n): string {\n    if (!album) return '/img/album.svg';\n\n    const albumType = album.type;\n    const query = new QueryParams({\n        source: albumType,\n        artistId: album.artistId?.toString(),\n    });\n\n    switch (albumType) {\n        case 'LIBRARY':\n            if (album.containsCover) {\n                return Api.getPath(\n                    `files/albums/${album.albumId}/${width}x${height}?${query}`,\n                );\n            }\n            break;\n\n        case 'TIDAL':\n            if (album.containsCover) {\n                if ('albumId' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.albumId}/${width}x${height}?${query}`,\n                    );\n                } else if ('id' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.id}/${width}x${height}?${query}`,\n                    );\n                }\n            }\n            break;\n\n        case 'QOBUZ':\n            if (album.containsCover) {\n                if ('albumId' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.albumId}/${width}x${height}?${query}`,\n                    );\n                } else if ('id' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.id}/${width}x${height}?${query}`,\n                    );\n                }\n            }\n            break;\n\n        case 'YT':\n            if (album.containsCover) {\n                if ('albumId' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.albumId}/${width}x${height}?${query}`,\n                    );\n                } else if ('id' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.id}/${width}x${height}?${query}`,\n                    );\n                }\n            }\n            break;\n\n        default:\n            albumType satisfies never;\n    }\n\n    return '/img/album.svg';\n}\n\nfunction getAlbumSourceArtwork(album: Album | Track | undefined): string {\n    if (!album) return '/img/album.svg';\n\n    const albumType = album.type;\n    const query = new QueryParams({\n        source: albumType,\n        artistId: album.artistId.toString(),\n    });\n\n    switch (albumType) {\n        case 'LIBRARY':\n            if (album.containsCover) {\n                return Api.getPath(\n                    `files/albums/${album.albumId}/source?${query}`,\n                );\n            }\n            break;\n\n        case 'TIDAL':\n            if (album.containsCover) {\n                if ('albumId' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.albumId}/source?${query}`,\n                    );\n                } else if ('id' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.id}/source?${query}`,\n                    );\n                }\n            }\n            break;\n\n        case 'QOBUZ':\n            if (album.containsCover) {\n                if ('albumId' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.albumId}/source?${query}`,\n                    );\n                } else if ('id' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.id}/source?${query}`,\n                    );\n                }\n            }\n            break;\n\n        case 'YT':\n            if (album.containsCover) {\n                if ('albumId' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.albumId}/source?${query}`,\n                    );\n                } else if ('id' in album) {\n                    return Api.getPath(\n                        `files/albums/${album.id}/source?${query}`,\n                    );\n                }\n            }\n            break;\n\n        default:\n            albumType satisfies never;\n    }\n\n    return '/img/album.svg';\n}\n\nasync function getAlbum(\n    id: number,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryAlbum> {\n    const con = getConnection();\n\n    const query = new QueryParams({\n        albumId: `${id}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/album?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getAlbums(\n    albumsRequest: Api.AlbumsRequest | undefined = undefined,\n    signal?: AbortSignal | null,\n): Promise<Api.PagingResponseWithTotal<Api.LibraryAlbum>> {\n    const con = getConnection();\n    const query = new QueryParams({\n        artistId: albumsRequest?.artistId?.toString(),\n        tidalArtistId: albumsRequest?.tidalArtistId?.toString(),\n        qobuzArtistId: albumsRequest?.qobuzArtistId?.toString(),\n        offset: `${albumsRequest?.offset ?? 0}`,\n        limit: `${albumsRequest?.limit ?? 100}`,\n    });\n    if (albumsRequest?.sources)\n        query.set('sources', albumsRequest.sources.join(','));\n    if (albumsRequest?.sort) query.set('sort', albumsRequest.sort);\n    if (albumsRequest?.filters?.search)\n        query.set('search', albumsRequest.filters.search);\n\n    return await requestJson(`${con.apiUrl}/menu/albums?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getAllAlbums(\n    albumsRequest: Api.AlbumsRequest | undefined = undefined,\n    onAlbums?: (\n        albums: Api.LibraryAlbum[],\n        allAlbums: Api.LibraryAlbum[],\n        index: number,\n    ) => void,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryAlbum[]> {\n    let offset = albumsRequest?.offset ?? 0;\n    let limit = albumsRequest?.limit ?? 100;\n\n    albumsRequest = albumsRequest ?? { offset, limit };\n\n    const page = await getAlbums(albumsRequest, signal);\n\n    let items = page.items;\n\n    onAlbums?.(page.items, items, 0);\n\n    if (signal?.aborted || !page.hasMore) return items;\n\n    offset = limit;\n    limit = Math.min(Math.max(100, Math.ceil((page.total - limit) / 6)), 1000);\n\n    const requests = [];\n\n    do {\n        requests.push({ ...albumsRequest, offset, limit });\n        offset += limit;\n    } while (offset < page.total);\n\n    const output = [items, ...requests.map(() => [])];\n\n    await Promise.all(\n        requests.map(async (request, i) => {\n            const page = await getAlbums(request, signal);\n\n            output[i + 1] = page.items;\n\n            items = output.flat();\n\n            onAlbums?.(page.items, items, i + 1);\n\n            return page;\n        }),\n    );\n\n    return items;\n}\n\nfunction getArtistCover(\n    artist: Artist | Album | Track | undefined,\n    width: number,\n    height: number,\n): string {\n    if (!artist) return '/img/album.svg';\n\n    const artistType = artist.type;\n    const query = new QueryParams({\n        source: artistType,\n    });\n\n    switch (artistType) {\n        case 'LIBRARY':\n            if (artist.containsCover) {\n                return Api.getPath(\n                    `files/artists/${artist.artistId}/${width}x${height}?${query}`,\n                );\n            }\n            break;\n\n        case 'TIDAL':\n            if (artist.containsCover) {\n                if ('artistId' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.artistId}/${width}x${height}?${query}`,\n                    );\n                } else if ('id' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.id}/${width}x${height}?${query}`,\n                    );\n                }\n            }\n            break;\n\n        case 'QOBUZ':\n            if (artist.containsCover) {\n                if ('artistId' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.artistId}/${width}x${height}?${query}`,\n                    );\n                } else if ('id' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.id}/${width}x${height}?${query}`,\n                    );\n                }\n            }\n            break;\n\n        case 'YT':\n            if (artist.containsCover) {\n                if ('artistId' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.artistId}/${width}x${height}?${query}`,\n                    );\n                } else if ('id' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.id}/${width}x${height}?${query}`,\n                    );\n                }\n            }\n            break;\n\n        default:\n            artistType satisfies never;\n    }\n\n    return '/img/album.svg';\n}\n\nfunction getArtistSourceCover(\n    artist: Artist | Album | Track | undefined,\n): string {\n    if (!artist) return '/img/album.svg';\n\n    const artistType = artist.type;\n    const query = new QueryParams({\n        source: artistType,\n    });\n\n    switch (artistType) {\n        case 'LIBRARY':\n            if (artist.containsCover) {\n                return Api.getPath(\n                    `files/artists/${artist.artistId}/source?${query}`,\n                );\n            }\n            break;\n\n        case 'TIDAL':\n            if (artist.containsCover) {\n                if ('artistId' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.artistId}/source?${query}`,\n                    );\n                } else if ('id' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.id}/source?${query}`,\n                    );\n                }\n            }\n            break;\n\n        case 'QOBUZ':\n            if (artist.containsCover) {\n                if ('artistId' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.artistId}/source?${query}`,\n                    );\n                } else if ('id' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.id}/source?${query}`,\n                    );\n                }\n            }\n            break;\n\n        case 'YT':\n            if (artist.containsCover) {\n                if ('artistId' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.artistId}/source?${query}`,\n                    );\n                } else if ('id' in artist) {\n                    return Api.getPath(\n                        `files/artists/${artist.id}/source?${query}`,\n                    );\n                }\n            }\n            break;\n\n        default:\n            artistType satisfies never;\n    }\n\n    return '/img/album.svg';\n}\n\nasync function getAlbumTracks(\n    albumId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryTrack[]> {\n    const con = getConnection();\n    return await requestJson(\n        `${con.apiUrl}/menu/album/tracks?albumId=${albumId}`,\n        {\n            method: 'GET',\n            credentials: 'include',\n            signal: signal ?? null,\n        },\n    );\n}\n\nasync function getAlbumVersions(\n    albumId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.AlbumVersion[]> {\n    const con = getConnection();\n    return await requestJson(\n        `${con.apiUrl}/menu/album/versions?albumId=${albumId}`,\n        {\n            method: 'GET',\n            credentials: 'include',\n            signal: signal ?? null,\n        },\n    );\n}\n\nasync function getTracks(\n    trackIds: number[],\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryTrack[]> {\n    const con = getConnection();\n    return await requestJson(\n        `${con.apiUrl}/menu/tracks?trackIds=${trackIds.join(',')}`,\n        {\n            method: 'GET',\n            credentials: 'include',\n            signal: signal ?? null,\n        },\n    );\n}\n\nasync function getArtists(\n    artistsRequest: Api.ArtistsRequest | undefined = undefined,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryArtist[]> {\n    const con = getConnection();\n    const query = new QueryParams();\n    if (artistsRequest?.sources)\n        query.set('sources', artistsRequest.sources.join(','));\n    if (artistsRequest?.sort) query.set('sort', artistsRequest.sort);\n    if (artistsRequest?.filters?.search)\n        query.set('search', artistsRequest.filters.search);\n\n    return await requestJson(`${con.apiUrl}/menu/artists?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function fetchSignatureToken(\n    signal?: AbortSignal | null,\n): Promise<string | undefined> {\n    const con = getConnection();\n    const { token } = await requestJson<{ token: string }>(\n        `${con.apiUrl}/auth/signature-token`,\n        {\n            credentials: 'include',\n            method: 'POST',\n            signal: signal ?? null,\n        },\n    );\n\n    return token;\n}\n\nconst [nonTunnelApis, setNonTunnelApis] = makePersisted(\n    createSignal<string[]>([]),\n    {\n        name: 'nonTunnelApis',\n    },\n);\n\nasync function validateSignatureTokenAndClient(\n    signature: string,\n    signal?: AbortSignal | null,\n): Promise<{ valid?: boolean; notFound?: boolean }> {\n    const con = getConnection();\n    const apis = nonTunnelApis();\n\n    if (apis.includes(con.apiUrl)) {\n        return { notFound: true };\n    }\n\n    try {\n        const { valid } = await requestJson<{ valid: boolean }>(\n            `${con.apiUrl}/auth/validate-signature-token?signature=${signature}`,\n            {\n                credentials: 'include',\n                method: 'POST',\n                signal: signal ?? null,\n            },\n        );\n\n        return { valid: !!valid };\n    } catch (e) {\n        if (e instanceof RequestError) {\n            if (e.response.status === 404) {\n                setNonTunnelApis([...apis, con.apiUrl]);\n                return { notFound: true };\n            }\n        }\n\n        return { valid: false };\n    }\n}\n\nasync function refetchSignatureToken(): Promise<void> {\n    console.debug('Refetching signature token');\n    const token = await api.fetchSignatureToken();\n\n    if (token) {\n        Api.setSignatureToken(token);\n    } else {\n        console.error('Failed to fetch signature token');\n    }\n}\n\nasync function validateSignatureToken(): Promise<void> {\n    const con = getConnection();\n    if (!con.token) return;\n\n    const existing = Api.signatureToken();\n\n    if (!existing) {\n        await api.refetchSignatureToken();\n\n        return;\n    }\n\n    const { valid, notFound } =\n        await api.validateSignatureTokenAndClient(existing);\n\n    if (notFound) {\n        console.debug('Not hitting tunnel server');\n        return;\n    }\n\n    if (!valid) {\n        await api.refetchSignatureToken();\n    }\n}\n\nasync function magicToken(\n    magicToken: string,\n    signal?: AbortSignal | null,\n): Promise<{ clientId: string; accessToken: string } | false> {\n    const con = getConnection();\n    try {\n        return await requestJson(\n            `${con.apiUrl}/auth/magic-token?magicToken=${magicToken}`,\n            {\n                credentials: 'include',\n                signal: signal ?? null,\n            },\n        );\n    } catch {\n        return false;\n    }\n}\n\nasync function globalSearch(\n    query: string,\n    offset?: number,\n    limit?: number,\n    signal?: AbortSignal | null,\n): Promise<{ position: number; results: Api.GlobalSearchResult[] }> {\n    const con = getConnection();\n    const queryParams = new QueryParams({\n        query,\n        offset: offset?.toString() ?? undefined,\n        limit: limit?.toString() ?? undefined,\n    });\n    return await requestJson(\n        `${con.apiUrl}/search/global-search?${queryParams.toString()}`,\n        {\n            credentials: 'include',\n            signal: signal ?? null,\n        },\n    );\n}\n\nasync function searchExternalMusicApi(\n    query: string,\n    api: string,\n    offset?: number,\n    limit?: number,\n    signal?: AbortSignal | null,\n): Promise<{ position: number; results: Api.GlobalSearchResult[] }> {\n    const con = getConnection();\n    const queryParams = new QueryParams({\n        query,\n        offset: offset?.toString() ?? undefined,\n        limit: limit?.toString() ?? undefined,\n    });\n    return await requestJson(\n        `${con.apiUrl}/${api}/search?${queryParams.toString()}`,\n        {\n            credentials: 'include',\n            signal: signal ?? null,\n        },\n    );\n}\n\nasync function searchAll(\n    query: string,\n    offset?: number,\n    limit?: number,\n    onResults?: (\n        results: Api.GlobalSearchResult[],\n        allResults: Api.GlobalSearchResult[],\n        source: ApiSource,\n    ) => void,\n    signal?: AbortSignal | null,\n): Promise<Api.GlobalSearchResult[]> {\n    const allResults: Api.GlobalSearchResult[] = [];\n    await Promise.all([\n        (async () => {\n            const results = (await globalSearch(query, offset, limit, signal))\n                .results;\n            allResults.push(...allResults);\n            onResults?.(results, allResults, 'LIBRARY');\n        })(),\n        (async () => {\n            const results = (\n                await searchExternalMusicApi(\n                    query,\n                    'tidal',\n                    offset,\n                    limit,\n                    signal,\n                )\n            ).results;\n            allResults.push(...allResults);\n            onResults?.(results, allResults, 'TIDAL');\n        })(),\n        (async () => {\n            const results = (\n                await searchExternalMusicApi(\n                    query,\n                    'qobuz',\n                    offset,\n                    limit,\n                    signal,\n                )\n            ).results;\n            allResults.push(...allResults);\n            onResults?.(results, allResults, 'QOBUZ');\n        })(),\n        (async () => {\n            const results = (\n                await searchExternalMusicApi(query, 'yt', offset, limit, signal)\n            ).results;\n            allResults.push(...allResults);\n            onResults?.(results, allResults, 'YT');\n        })(),\n    ]);\n\n    return allResults;\n}\n\nasync function getArtistFromTidalArtistId(\n    tidalArtistId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryArtist> {\n    const con = getConnection();\n    const query = new QueryParams({\n        tidalArtistId: `${tidalArtistId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/artist?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getArtistFromQobuzArtistId(\n    qobuzArtistId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryArtist> {\n    const con = getConnection();\n    const query = new QueryParams({\n        qobuzArtistId: `${qobuzArtistId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/artist?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getArtistFromTidalAlbumId(\n    tidalAlbumId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryArtist> {\n    const con = getConnection();\n    const query = new QueryParams({\n        tidalAlbumId: `${tidalAlbumId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/artist?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getTidalArtist(\n    tidalArtistId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.TidalArtist> {\n    const con = getConnection();\n    const query = new QueryParams({\n        artistId: `${tidalArtistId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/tidal/artists?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getQobuzArtist(\n    qobuzArtistId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.QobuzArtist> {\n    const con = getConnection();\n    const query = new QueryParams({\n        artistId: `${qobuzArtistId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/qobuz/artists?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nexport function sortAlbumsByDateDesc<T extends Album>(albums: T[]): T[] {\n    return albums.toSorted((a, b) => {\n        if (!a.dateReleased) return 1;\n        if (!b.dateReleased) return -1;\n\n        return b.dateReleased.localeCompare(a.dateReleased);\n    });\n}\n\nasync function getAllTidalArtistAlbums(\n    tidalArtistId: number,\n    setter?: Setter<Api.TidalAlbum[] | undefined>,\n    types?: Api.TidalAlbumType[],\n    signal?: AbortSignal | null,\n): Promise<{\n    lps: Api.TidalAlbum[];\n    epsAndSingles: Api.TidalAlbum[];\n    compilations: Api.TidalAlbum[];\n}> {\n    const albums: Awaited<ReturnType<typeof getAllTidalArtistAlbums>> = {\n        lps: [],\n        epsAndSingles: [],\n        compilations: [],\n    };\n\n    const promises = [];\n\n    if (!types || types.find((t) => t === 'LP')) {\n        promises.push(\n            (async () => {\n                const page = await api.getTidalArtistAlbums(\n                    tidalArtistId,\n                    'LP',\n                    signal ?? null,\n                );\n\n                albums.lps = page.items;\n\n                if (setter) {\n                    const { lps, epsAndSingles, compilations } = albums;\n                    setter(\n                        sortAlbumsByDateDesc([\n                            ...lps,\n                            ...epsAndSingles,\n                            ...compilations,\n                        ]),\n                    );\n                }\n            })(),\n        );\n    }\n    if (!types || types.find((t) => t === 'EPS_AND_SINGLES')) {\n        promises.push(\n            (async () => {\n                const page = await api.getTidalArtistAlbums(\n                    tidalArtistId,\n                    'EPS_AND_SINGLES',\n                    signal ?? null,\n                );\n\n                if (setter) {\n                    albums.epsAndSingles = page.items;\n\n                    const { lps, epsAndSingles, compilations } = albums;\n                    setter(\n                        sortAlbumsByDateDesc([\n                            ...lps,\n                            ...epsAndSingles,\n                            ...compilations,\n                        ]),\n                    );\n                }\n            })(),\n        );\n    }\n    if (!types || types.find((t) => t === 'COMPILATIONS')) {\n        promises.push(\n            (async () => {\n                const page = await api.getTidalArtistAlbums(\n                    tidalArtistId,\n                    'COMPILATIONS',\n                    signal ?? null,\n                );\n\n                if (setter) {\n                    albums.compilations = page.items;\n\n                    const { lps, epsAndSingles, compilations } = albums;\n                    setter(\n                        sortAlbumsByDateDesc([\n                            ...lps,\n                            ...epsAndSingles,\n                            ...compilations,\n                        ]),\n                    );\n                }\n            })(),\n        );\n    }\n\n    await Promise.all(promises);\n\n    return albums;\n}\n\nasync function getAllQobuzArtistAlbums(\n    qobuzArtistId: number,\n    setter?: Setter<Api.QobuzAlbum[] | undefined>,\n    types?: Api.QobuzAlbumType[],\n    signal?: AbortSignal | null,\n): Promise<{\n    lps: Api.QobuzAlbum[];\n    epsAndSingles: Api.QobuzAlbum[];\n    compilations: Api.QobuzAlbum[];\n}> {\n    const albums: Awaited<ReturnType<typeof getAllQobuzArtistAlbums>> = {\n        lps: [],\n        epsAndSingles: [],\n        compilations: [],\n    };\n\n    const promises = [];\n\n    if (!types || types.find((t) => t === 'LP')) {\n        promises.push(\n            (async () => {\n                const page = await api.getQobuzArtistAlbums(\n                    qobuzArtistId,\n                    'LP',\n                    signal ?? null,\n                );\n\n                albums.lps = page.items;\n\n                if (setter) {\n                    const { lps, epsAndSingles, compilations } = albums;\n                    setter(\n                        sortAlbumsByDateDesc([\n                            ...lps,\n                            ...epsAndSingles,\n                            ...compilations,\n                        ]),\n                    );\n                }\n            })(),\n        );\n    }\n    if (!types || types.find((t) => t === 'EPS_AND_SINGLES')) {\n        promises.push(\n            (async () => {\n                const page = await api.getQobuzArtistAlbums(\n                    qobuzArtistId,\n                    'EPS_AND_SINGLES',\n                    signal ?? null,\n                );\n\n                if (setter) {\n                    albums.epsAndSingles = page.items;\n\n                    const { lps, epsAndSingles, compilations } = albums;\n                    setter(\n                        sortAlbumsByDateDesc([\n                            ...lps,\n                            ...epsAndSingles,\n                            ...compilations,\n                        ]),\n                    );\n                }\n            })(),\n        );\n    }\n    if (!types || types.find((t) => t === 'COMPILATIONS')) {\n        promises.push(\n            (async () => {\n                const page = await api.getQobuzArtistAlbums(\n                    qobuzArtistId,\n                    'COMPILATIONS',\n                    signal ?? null,\n                );\n\n                if (setter) {\n                    albums.compilations = page.items;\n\n                    const { lps, epsAndSingles, compilations } = albums;\n                    setter(\n                        sortAlbumsByDateDesc([\n                            ...lps,\n                            ...epsAndSingles,\n                            ...compilations,\n                        ]),\n                    );\n                }\n            })(),\n        );\n    }\n\n    await Promise.all(promises);\n\n    return albums;\n}\n\nasync function getTidalArtistAlbums(\n    tidalArtistId: number,\n    albumType?: Api.TidalAlbumType,\n    signal?: AbortSignal | null,\n): Promise<Api.PagingResponse<Api.TidalAlbum>> {\n    const con = getConnection();\n    const query = new QueryParams({\n        artistId: `${tidalArtistId}`,\n    });\n\n    if (albumType) {\n        query.set('albumType', albumType);\n    }\n\n    return await requestJson(`${con.apiUrl}/tidal/artists/albums?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getQobuzArtistAlbums(\n    qobuzArtistId: number,\n    albumType?: Api.QobuzAlbumType,\n    signal?: AbortSignal | null,\n): Promise<Api.QobuzPagingResponse<Api.QobuzAlbum>> {\n    const con = getConnection();\n    const query = new QueryParams({\n        artistId: `${qobuzArtistId}`,\n    });\n\n    if (albumType) {\n        query.set('releaseType', albumType);\n    }\n\n    return await requestJson(`${con.apiUrl}/qobuz/artists/albums?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getAlbumFromTidalAlbumId(\n    tidalAlbumId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryAlbum> {\n    const con = getConnection();\n    const query = new QueryParams({\n        tidalAlbumId: `${tidalAlbumId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/album?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getAlbumFromQobuzAlbumId(\n    qobuzAlbumId: string,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryAlbum> {\n    const con = getConnection();\n    const query = new QueryParams({\n        qobuzAlbumId: `${qobuzAlbumId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/album?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getLibraryAlbumsFromTidalArtistId(\n    tidalArtistId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryAlbum[]> {\n    const con = getConnection();\n    const query = new QueryParams({\n        tidalArtistId: `${tidalArtistId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/albums?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getLibraryAlbumsFromQobuzArtistId(\n    qobuzArtistId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryAlbum[]> {\n    const con = getConnection();\n    const query = new QueryParams({\n        qobuzArtistId: `${qobuzArtistId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/albums?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getTidalAlbum(\n    tidalAlbumId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.TidalAlbum> {\n    const con = getConnection();\n    const query = new QueryParams({\n        albumId: `${tidalAlbumId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/tidal/albums?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getQobuzAlbum(\n    qobuzAlbumId: string,\n    signal?: AbortSignal | null,\n): Promise<Api.QobuzAlbum> {\n    const con = getConnection();\n    const query = new QueryParams({\n        albumId: `${qobuzAlbumId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/qobuz/albums?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getTidalAlbumTracks(\n    tidalAlbumId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.PagingResponse<Api.TidalTrack>> {\n    const con = getConnection();\n    const query = new QueryParams({\n        albumId: `${tidalAlbumId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/tidal/albums/tracks?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getQobuzAlbumTracks(\n    qobuzAlbumId: string,\n    signal?: AbortSignal | null,\n): Promise<Api.PagingResponse<Api.QobuzTrack>> {\n    const con = getConnection();\n    const query = new QueryParams({\n        albumId: `${qobuzAlbumId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/qobuz/albums/tracks?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getYtAlbumTracks(\n    ytAlbumId: string,\n    signal?: AbortSignal | null,\n): Promise<Api.PagingResponse<Api.YtTrack>> {\n    const con = getConnection();\n    const query = new QueryParams({\n        albumId: `${ytAlbumId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/yt/albums/tracks?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getTidalTrack(\n    tidalTrackId: number,\n    signal?: AbortSignal | null,\n): Promise<Api.TidalTrack> {\n    const con = getConnection();\n    const query = new QueryParams({\n        trackId: `${tidalTrackId}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/tidal/track?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getTrackUrlForSource(\n    trackId: Id,\n    source: ApiSource,\n    audioQuality: Api.TrackAudioQuality,\n    signal?: AbortSignal | null,\n): Promise<string> {\n    const con = getConnection();\n    const query = new QueryParams({\n        audioQuality,\n        trackId: `${trackId}`,\n        source: `${source}`,\n    });\n\n    const urls = await requestJson<string[]>(\n        `${con.apiUrl}/files/tracks/url?${query}`,\n        {\n            credentials: 'include',\n            signal: signal ?? null,\n        },\n    );\n\n    return urls[0]!;\n}\n\nasync function addAlbumToLibrary(\n    albumId: {\n        tidalAlbumId?: number;\n        qobuzAlbumId?: string;\n    },\n    signal?: AbortSignal | null,\n): Promise<void> {\n    const con = getConnection();\n    const query = new QueryParams({\n        albumId: albumId.tidalAlbumId?.toString() ?? albumId.qobuzAlbumId,\n        source: albumId.tidalAlbumId\n            ? 'TIDAL'\n            : albumId.qobuzAlbumId\n              ? 'QOBUZ'\n              : undefined,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/album?${query}`, {\n        method: 'POST',\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function removeAlbumFromLibrary(\n    albumId: {\n        tidalAlbumId?: number;\n        qobuzAlbumId?: string;\n    },\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryAlbum> {\n    const con = getConnection();\n    const query = new QueryParams({\n        albumId: albumId.tidalAlbumId?.toString() ?? albumId.qobuzAlbumId,\n        source: albumId.tidalAlbumId\n            ? 'TIDAL'\n            : albumId.qobuzAlbumId\n              ? 'QOBUZ'\n              : undefined,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/album?${query}`, {\n        method: 'DELETE',\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function refavoriteAlbum(\n    albumId: {\n        tidalAlbumId?: number;\n        qobuzAlbumId?: string;\n    },\n    signal?: AbortSignal | null,\n): Promise<Api.LibraryAlbum> {\n    const con = getConnection();\n    const query = new QueryParams({\n        albumId: albumId.tidalAlbumId?.toString() ?? albumId.qobuzAlbumId,\n        source: albumId.tidalAlbumId\n            ? 'TIDAL'\n            : albumId.qobuzAlbumId\n              ? 'QOBUZ'\n              : undefined,\n    });\n\n    return await requestJson(`${con.apiUrl}/menu/album/re-favorite?${query}`, {\n        method: 'POST',\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function retryDownload(\n    taskId: number,\n    signal?: AbortSignal | null,\n): Promise<void> {\n    const con = getConnection();\n    const query = new QueryParams({\n        taskId: `${taskId}`,\n    });\n\n    return await requestJson(\n        `${con.apiUrl}/downloader/retry-download?${query}`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            signal: signal ?? null,\n        },\n    );\n}\n\nasync function download(\n    items: {\n        trackId?: string | number;\n        trackIds?: (string | number)[];\n        albumId?: string | number;\n        albumIds?: (string | number)[];\n    },\n    source: Api.DownloadApiSource,\n    signal?: AbortSignal | null,\n): Promise<void> {\n    const con = getConnection();\n    const query = new QueryParams({\n        trackId: items.trackId ? `${items.trackId}` : undefined,\n        trackIds: items.trackIds ? `${items.trackIds.join(',')}` : undefined,\n        albumId: items.albumId ? `${items.albumId}` : undefined,\n        albumIds: items.albumIds ? `${items.albumIds.join(',')}` : undefined,\n        source: `${source}`,\n    });\n\n    return await requestJson(`${con.apiUrl}/downloader/download?${query}`, {\n        method: 'POST',\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getDownloadTasks(\n    signal?: AbortSignal | null,\n): Promise<Api.PagingResponseWithTotal<Api.DownloadTask>> {\n    const con = getConnection();\n    return await requestJson(`${con.apiUrl}/downloader/download-tasks`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function getTrackVisualization(\n    track: Track | number,\n    source: ApiSource,\n    max: number,\n    signal?: AbortSignal | null,\n): Promise<number[]> {\n    const con = getConnection();\n    const query = new QueryParams({\n        trackId: `${trackId(track)}`,\n        max: `${Math.ceil(max)}`,\n        source: `${source}`,\n    });\n\n    return await requestJson(\n        `${con.apiUrl}/files/track/visualization?${query}`,\n        {\n            credentials: 'include',\n            signal: signal ?? null,\n        },\n    );\n}\n\nasync function getAudioZones(\n    signal?: AbortSignal | null,\n): Promise<Api.PagingResponseWithTotal<Api.AudioZone>> {\n    const con = getConnection();\n    const query = new QueryParams({ offset: `0`, limit: `100` });\n\n    return await requestJson(`${con.apiUrl}/audio-zone?${query}`, {\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function createAudioZone(\n    name: string,\n    signal?: AbortSignal | null,\n): Promise<Api.AudioZone> {\n    const con = getConnection();\n    const query = new QueryParams({ name });\n\n    return await requestJson(`${con.apiUrl}/audio-zone?${query}`, {\n        method: 'POST',\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function updateAudioZone(\n    update: Api.UpdateAudioZone,\n    signal?: AbortSignal | null,\n): Promise<Api.AudioZone> {\n    const con = getConnection();\n\n    return await requestJson(`${con.apiUrl}/audio-zone`, {\n        method: 'PATCH',\n        body: JSON.stringify(update),\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function deleteAudioZone(\n    id: number,\n    signal?: AbortSignal | null,\n): Promise<void> {\n    const con = getConnection();\n    const query = new QueryParams({ id: `${id}` });\n\n    return await requestJson(`${con.apiUrl}/audio-zone?${query}`, {\n        method: 'DELETE',\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function runScan(\n    origins: ScanOrigin[],\n    signal?: AbortSignal | null,\n): Promise<void> {\n    const con = getConnection();\n    const query = new QueryParams({ origins: `${origins.join(',')}` });\n\n    return await requestJson(`${con.apiUrl}/scan/run-scan?${query}`, {\n        method: 'POST',\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function startScan(\n    origins: ScanOrigin[],\n    signal?: AbortSignal | null,\n): Promise<void> {\n    const con = getConnection();\n    const query = new QueryParams({ origins: `${origins.join(',')}` });\n\n    return await requestJson(`${con.apiUrl}/scan/start-scan?${query}`, {\n        method: 'POST',\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function enableScanOrigin(\n    origin: ScanOrigin,\n    signal?: AbortSignal | null,\n): Promise<void> {\n    const con = getConnection();\n    const query = new QueryParams({ origin: `${origin}` });\n\n    return await requestJson(`${con.apiUrl}/scan/scan-origins?${query}`, {\n        method: 'POST',\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nasync function addScanPath(\n    path: string,\n    signal?: AbortSignal | null,\n): Promise<void> {\n    const con = getConnection();\n    const query = new QueryParams({ path: `${path}` });\n\n    return await requestJson(`${con.apiUrl}/scan/scan-paths?${query}`, {\n        method: 'POST',\n        credentials: 'include',\n        signal: signal ?? null,\n    });\n}\n\nclass RequestError extends Error {\n    constructor(public response: Response) {\n        let message = `Request failed: ${response.status}`;\n\n        if (response.statusText) {\n            message += ` (${response.statusText})`;\n        }\n\n        if (response.url) {\n            message += ` (url='${response.url}')`;\n        }\n\n        if (typeof response.redirected !== 'undefined') {\n            message += ` (redirected=${response.redirected})`;\n        }\n\n        if (response.headers) {\n            message += ` (headers=${objToStr(response.headers)})`;\n        }\n\n        if (response.type) {\n            message += ` (type=${response.type})`;\n        }\n\n        super(message);\n    }\n}\n\nasync function requestJson<T>(\n    url: string,\n    options: Parameters<typeof fetch>[1],\n): Promise<T> {\n    const con = getConnection();\n\n    if (url[url.length - 1] === '?') url = url.substring(0, url.length - 1);\n\n    const params = new QueryParams();\n    const clientId = con.clientId;\n\n    if (clientId) {\n        params.set('clientId', clientId);\n    }\n\n    if (params.size > 0) {\n        if (url.indexOf('?') > 0) {\n            url += `&${params}`;\n        } else {\n            url += `?${params}`;\n        }\n    }\n\n    const token = con.staticToken || con.token;\n    const headers = {\n        'Content-Type': 'application/json',\n        ...(options?.headers ?? {}),\n    } as { [key: string]: string };\n\n    if (token && !headers.Authorization) {\n        headers.Authorization = token;\n    }\n\n    options = {\n        ...options,\n        headers,\n    };\n\n    const response = await fetch(url, options);\n\n    if (!response.ok) {\n        throw new RequestError(response);\n    }\n\n    return await response.json();\n}\n\nexport function cancellable<T>(func: (signal: AbortSignal) => Promise<T>): {\n    data: Promise<T>;\n    controller: AbortController;\n    signal: AbortSignal;\n} {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    return { data: func(signal), controller, signal };\n}\n\nconst abortControllers: { [id: string]: AbortController } = {};\n\nexport async function once<T>(\n    id: string,\n    func: (signal: AbortSignal) => Promise<T>,\n): Promise<T> {\n    const controller = abortControllers[id];\n\n    if (controller) {\n        controller.abort();\n    }\n\n    const resp = cancellable(func);\n    abortControllers[id] = resp.controller;\n\n    let data: T;\n\n    try {\n        data = await resp.data;\n    } catch (e) {\n        throw e;\n    } finally {\n        delete abortControllers[id];\n    }\n\n    return data;\n}\n\nexport const api: ApiType = {\n    getArtist,\n    getArtistCover,\n    getArtistSourceCover,\n    getAlbum,\n    getAlbums,\n    getAllAlbums,\n    getAlbumArtwork,\n    getAlbumSourceArtwork,\n    getAlbumTracks,\n    getAlbumVersions,\n    getTracks,\n    getArtists,\n    fetchSignatureToken,\n    refetchSignatureToken,\n    validateSignatureTokenAndClient,\n    validateSignatureToken,\n    magicToken,\n    globalSearch,\n    searchExternalMusicApi,\n    searchAll,\n    getArtistFromTidalArtistId,\n    getArtistFromQobuzArtistId,\n    getArtistFromTidalAlbumId,\n    getAlbumFromTidalAlbumId,\n    getAlbumFromQobuzAlbumId,\n    getTidalArtist,\n    getQobuzArtist,\n    getAllTidalArtistAlbums,\n    getAllQobuzArtistAlbums,\n    getTidalArtistAlbums,\n    getQobuzArtistAlbums,\n    getLibraryAlbumsFromTidalArtistId,\n    getLibraryAlbumsFromQobuzArtistId,\n    getTidalAlbum,\n    getQobuzAlbum,\n    getTidalAlbumTracks,\n    getQobuzAlbumTracks,\n    getYtAlbumTracks,\n    getTidalTrack,\n    getTrackUrlForSource,\n    addAlbumToLibrary,\n    removeAlbumFromLibrary,\n    refavoriteAlbum,\n    getDownloadTasks,\n    getTrackVisualization,\n    retryDownload,\n    download,\n    getAudioZones,\n    createAudioZone,\n    updateAudioZone,\n    deleteAudioZone,\n    runScan,\n    startScan,\n    enableScanOrigin,\n    addScanPath,\n};\n","import { isServer } from 'solid-js/web';\nimport { Api, api, connection } from './api';\nimport { createSignal } from 'solid-js';\nimport { createStore, produce } from 'solid-js/store';\nimport { clientAtom } from './util';\nimport {\n    currentPlaybackTarget,\n    setCurrentPlaybackTarget,\n    setPlayerState,\n} from './player';\n\nexport const navigationBarExpanded = clientAtom<boolean>(\n    true,\n    'navigationBarExpanded',\n);\nexport const showAudioZones = clientAtom(false);\nexport const showPlaybackSessions = clientAtom(false);\nexport const showPlaybackQuality = clientAtom(false);\nexport const showChangePlaybackTargetModal = clientAtom(false);\nexport const showScanStatusBanner = clientAtom(false);\n\ntype StartupCallback = () => void | Promise<void>;\n\ndeclare global {\n    interface Window {\n        startupCallbacks: StartupCallback[];\n        startedUp: boolean;\n    }\n\n    var startupCallbacks: StartupCallback[];\n    // eslint-disable-next-line no-var\n    var startedUp: boolean;\n}\n\nif (isServer) global.startupCallbacks = global.startupCallbacks ?? [];\nelse window.startupCallbacks = window.startupCallbacks ?? [];\n\nfunction getStartupCallbacks(): StartupCallback[] {\n    if (isServer) {\n        const x = globalThis.startupCallbacks;\n        if (!x) globalThis.startupCallbacks = [];\n        return globalThis.startupCallbacks;\n    } else {\n        const x = window.startupCallbacks;\n        if (!x) window.startupCallbacks = [];\n        return window.startupCallbacks;\n    }\n}\n\nif (isServer) global.startedUp = global.startedUp ?? false;\nelse window.startedUp = window.startedUp ?? false;\n\nfunction isStartedUp(): boolean {\n    return (isServer ? globalThis.startedUp : window.startedUp) === true;\n}\n\nfunction setStartedUp(value: boolean) {\n    if (isServer) {\n        globalThis.startedUp = value;\n    } else {\n        window.startedUp = value;\n    }\n}\n\nexport function onStartupFirst(func: StartupCallback) {\n    if (isStartedUp()) {\n        func();\n        return;\n    }\n    getStartupCallbacks().unshift(func);\n}\n\nexport async function onStartup(func: StartupCallback) {\n    if (isStartedUp()) {\n        try {\n            await func();\n        } catch (e) {\n            console.error('Startup error:', e);\n        }\n        return;\n    }\n    getStartupCallbacks().push(func);\n}\n\nexport async function triggerStartup() {\n    if (isStartedUp()) return;\n    setStartedUp(true);\n\n    for (const func of getStartupCallbacks()) {\n        try {\n            await func();\n        } catch (e) {\n            console.error('Startup error:', e);\n        }\n    }\n}\n\ninterface AppState {\n    connections: Api.Connection[];\n    connection: Api.Connection | undefined;\n}\n\nexport const [appState, setAppState] = createStore<AppState>({\n    connections: [],\n    connection: undefined,\n});\n\nexport const [currentArtistSearch, setCurrentArtistSearch] = createSignal<{\n    query: string;\n    results: Api.LibraryArtist[];\n}>();\n\nexport const [currentAlbumSearch, setCurrentAlbumSearch] = createSignal<{\n    query: string;\n    results: Api.LibraryAlbum[];\n}>();\n\nconnection.listen((con, prev) => {\n    if (!con) return;\n    if (con.token !== prev?.token || con.clientId !== prev?.clientId) {\n        api.refetchSignatureToken();\n    }\n});\nonStartup(async () => {\n    const con = connection.get();\n\n    if (con && con.token && con.clientId) {\n        try {\n            await api.validateSignatureToken();\n        } catch (e) {\n            console.debug('Failed to validateSignatureToken:', e);\n        }\n    }\n});\nonStartup(async () => {\n    const zones = await api.getAudioZones();\n\n    setPlayerState(\n        produce((state) => {\n            state.audioZones = zones.items;\n\n            const current = currentPlaybackTarget();\n\n            if (current?.type === 'AUDIO_ZONE') {\n                const existing = state.audioZones.find(\n                    (x) => x.id === current.audioZoneId,\n                );\n\n                if (existing) {\n                    state.currentAudioZone = existing;\n                }\n            }\n\n            if (!state.currentAudioZone && !currentPlaybackTarget()) {\n                state.currentAudioZone = state.audioZones[0];\n                if (state.currentAudioZone) {\n                    setCurrentPlaybackTarget({\n                        type: 'AUDIO_ZONE',\n                        audioZoneId: state.currentAudioZone.id,\n                    });\n                }\n            }\n        }),\n    );\n});\n","import { createStore, produce } from 'solid-js/store';\nimport { Api, api } from './api';\nimport { createListener } from './util';\nimport { onStartup } from './app';\n\nexport type DownloadEventType =\n    | BytesReadDownloadEvent['type']\n    | SizeDownloadEvent['type']\n    | SpeedDownloadEvent['type']\n    | StateDownloadEvent['type'];\n\nexport type BytesReadDownloadEvent = {\n    taskId: number;\n    read: number;\n    total: number;\n    type: 'BYTES_READ';\n};\n\nexport type SizeDownloadEvent = {\n    taskId: number;\n    bytes?: number;\n    type: 'SIZE';\n};\n\nexport type SpeedDownloadEvent = {\n    taskId: number;\n    bytesPerSecond: number;\n    type: 'SPEED';\n};\n\nexport type StateDownloadEvent = {\n    taskId: number;\n    state: Api.DownloadTaskState;\n    type: 'STATE';\n};\n\nexport type DownloadEvent = (\n    | BytesReadDownloadEvent\n    | SizeDownloadEvent\n    | SpeedDownloadEvent\n    | StateDownloadEvent\n) & { type: DownloadEventType };\n\nexport const onDownloadEventListener =\n    createListener<(value: DownloadEvent) => boolean | void>();\nexport const onDownloadEvent = onDownloadEventListener.on;\nexport const offDownloadEvent = onDownloadEventListener.off;\n\ninterface DownloadsState {\n    tasks: Api.DownloadTask[];\n    currentTasks: Api.DownloadTask[];\n    historyTasks: Api.DownloadTask[];\n}\n\nexport const [downloadsState, setDownloadsState] = createStore<DownloadsState>({\n    tasks: [],\n    currentTasks: [],\n    historyTasks: [],\n});\n\nfunction handleDownloadEvent(event: DownloadEvent) {\n    const eventType = event.type;\n\n    switch (eventType) {\n        case 'SIZE':\n            setDownloadsState(\n                produce((state) => {\n                    const task = state.tasks.find(\n                        (task) => task.id === event.taskId,\n                    );\n                    if (task) {\n                        task.totalBytes = event.bytes ?? task.totalBytes;\n                    }\n                }),\n            );\n            break;\n        case 'BYTES_READ':\n            setDownloadsState(\n                produce((state) => {\n                    const task = state.tasks.find(\n                        (task) => task.id === event.taskId,\n                    );\n                    if (task) {\n                        task.bytes = event.total;\n                        task.progress = (event.total / task.totalBytes) * 100;\n                    }\n                }),\n            );\n            break;\n        case 'SPEED':\n            setDownloadsState(\n                produce((state) => {\n                    const task = state.tasks.find(\n                        (task) => task.id === event.taskId,\n                    );\n                    if (task) {\n                        task.speed = event.bytesPerSecond;\n                    }\n                }),\n            );\n            break;\n        case 'STATE':\n            setDownloadsState(\n                produce((state) => {\n                    const task = state.tasks.find(\n                        (task) => task.id === event.taskId,\n                    );\n                    if (task) {\n                        const prevState = task.state;\n                        task.state = event.state;\n\n                        if (isCurrent(task.state) && !isCurrent(prevState)) {\n                            const index = state.historyTasks.indexOf(task);\n                            if (index !== -1) {\n                                state.historyTasks.splice(index, 1);\n                            }\n                            state.currentTasks.unshift(task);\n                        } else if (\n                            !isCurrent(task.state) &&\n                            isCurrent(prevState)\n                        ) {\n                            const index = state.currentTasks.indexOf(task);\n                            if (index !== -1) {\n                                state.currentTasks.splice(index, 1);\n                            }\n                            state.historyTasks.unshift(task);\n                        }\n\n                        if (task.state === 'FINISHED') {\n                            task.progress = 100;\n                        }\n                    }\n                }),\n            );\n            break;\n        default:\n            eventType satisfies never;\n            throw new Error(`Invalid DownloadEvent type: '${eventType}'`);\n    }\n}\n\nonDownloadEvent(handleDownloadEvent);\n\nfunction isCurrent(state: Api.DownloadTaskState): boolean {\n    return state === 'STARTED' || state === 'PAUSED' || state === 'PENDING';\n}\n\nfunction isHistorical(state: Api.DownloadTaskState): boolean {\n    return !isCurrent(state);\n}\n\nonStartup(async () => {\n    const tasks = await api.getDownloadTasks();\n\n    const current = tasks.items.filter(({ state }) => isCurrent(state));\n    const history = tasks.items.filter(({ state }) => isHistorical(state));\n\n    setDownloadsState(\n        produce((state) => {\n            state.tasks = tasks.items;\n            state.currentTasks = current;\n            state.historyTasks = history;\n        }),\n    );\n});\n","import { createStore, produce } from 'solid-js/store';\nimport { ScanOrigin } from './api';\nimport { createListener, deepEqual } from './util';\nimport { onStartup, showScanStatusBanner } from './app';\n\nexport type ScanEventType =\n    | FinishedScanEvent['type']\n    | CountScanEvent['type']\n    | ScannedScanEvent['type'];\n\nexport type FinishedScanEvent = {\n    task: ScanTask;\n    scanned: number;\n    total: number;\n    type: 'FINISHED';\n};\n\nexport type CountScanEvent = {\n    task: ScanTask;\n    scanned: number;\n    total: number;\n    type: 'COUNT';\n};\n\nexport type ScannedScanEvent = {\n    task: ScanTask;\n    scanned: number;\n    total: number;\n    type: 'SCANNED';\n};\n\nexport type ScanEvent = (\n    | FinishedScanEvent\n    | CountScanEvent\n    | ScannedScanEvent\n) & { type: ScanEventType };\n\nexport type ScanTask = LocalScanTask['type'] | ApiScanTask['type'];\n\nexport type LocalScanTask = {\n    paths: string[];\n    type: 'LOCAL';\n};\n\nexport type ApiScanTask = {\n    paths: ScanOrigin;\n    type: 'API';\n};\n\nexport const onScanEventListener =\n    createListener<(value: ScanEvent) => boolean | void>();\nexport const onScanEvent = onScanEventListener.on;\nexport const offScanEvent = onScanEventListener.off;\n\ninterface ScansState {\n    tasks: {\n        task: ScanTask;\n        scanned: number;\n        total: number;\n    }[];\n}\n\nexport const [scanState, setScansState] = createStore<ScansState>({\n    tasks: [],\n});\n\nfunction handleScanEvent(event: ScanEvent) {\n    const eventType = event.type;\n\n    switch (eventType) {\n        case 'FINISHED':\n            setScansState(\n                produce((state) => {\n                    const task = state.tasks.find((task) =>\n                        deepEqual(task.task, event.task),\n                    );\n                    if (task) {\n                        task.scanned = event.scanned;\n                        task.total = event.total;\n                    }\n                }),\n            );\n            setTimeout(() => {\n                setScansState(\n                    produce((state) => {\n                        state.tasks = state.tasks.filter(\n                            (task) => !deepEqual(task.task, event.task),\n                        );\n                    }),\n                );\n\n                if (scanState.tasks.length === 0) {\n                    showScanStatusBanner.set(false);\n                }\n            }, 5000);\n            break;\n        case 'COUNT':\n            setScansState(\n                produce((state) => {\n                    const task = state.tasks.find((task) =>\n                        deepEqual(task.task, event.task),\n                    );\n                    if (task) {\n                        task.scanned = event.scanned;\n                        task.total = event.total;\n                    } else {\n                        state.tasks.push({\n                            task: event.task,\n                            scanned: event.scanned,\n                            total: event.total,\n                        });\n                    }\n                }),\n            );\n            showScanStatusBanner.set(true);\n            break;\n        case 'SCANNED':\n            setScansState(\n                produce((state) => {\n                    const task = state.tasks.find((task) =>\n                        deepEqual(task.task, event.task),\n                    );\n                    if (task) {\n                        task.scanned = event.scanned;\n                        task.total = event.total;\n                    } else {\n                        state.tasks.push({\n                            task: event.task,\n                            scanned: event.scanned,\n                            total: event.total,\n                        });\n                    }\n                }),\n            );\n            showScanStatusBanner.set(true);\n            break;\n        default:\n            eventType satisfies never;\n            throw new Error(`Invalid ScanEvent type: '${eventType}'`);\n    }\n}\n\nonScanEvent(handleScanEvent);\n\nonStartup(async () => {\n    setScansState(\n        produce((state) => {\n            state.tasks = [];\n        }),\n    );\n});\n","import * as player from './player';\nimport { produce } from 'solid-js/store';\nimport { Api, connection, toSessionPlaylistTrack } from './api';\nimport type { Track } from './api';\nimport { setAppState } from './app';\nimport type { PartialUpdateSession } from './types';\nimport { clientAtom, createListener, objToStr } from './util';\nimport { onDownloadEventListener } from './downloads';\nimport type { DownloadEvent } from './downloads';\nimport { onScanEventListener, ScanEvent } from './scan';\n\nconnection.listen((con) => {\n    if (!con) return;\n\n    updateWsUrl(\n        con.apiUrl,\n        con.clientId,\n        Api.signatureToken(),\n        con.staticToken,\n    );\n    if (con.token && !Api.signatureToken()) {\n        console.debug('Waiting for signature token');\n        return;\n    }\n    wsService.reconnect();\n});\nApi.onSignatureTokenUpdated((signatureToken) => {\n    const con = connection.get();\n    if (!con) return;\n\n    updateWsUrl(con.apiUrl, con.clientId, signatureToken, con.staticToken);\n    if (con.token && !signatureToken) {\n        console.debug('Waiting for signature token');\n        return;\n    }\n    wsService.reconnect();\n});\n\nfunction updateWsUrl(\n    apiUrl: string,\n    clientId: string | undefined,\n    signatureToken: string | undefined,\n    staticToken: string | undefined,\n) {\n    if (!apiUrl?.startsWith('http')) return;\n\n    const params = [];\n    if (clientId) {\n        params.push(`clientId=${encodeURIComponent(clientId)}`);\n    }\n    if (signatureToken) {\n        params.push(`signature=${encodeURIComponent(signatureToken)}`);\n    }\n    if (staticToken) {\n        params.push(`authorization=${encodeURIComponent(staticToken)}`);\n    }\n    wsUrl = `ws${apiUrl.slice(4)}/ws${\n        params.length > 0 ? `?${params.join('&')}` : ''\n    }`;\n}\n\nlet ws: WebSocket;\nlet wsUrl: string;\nexport let connectionPromise: Promise<WebSocket>;\n\nexport const connectionId = clientAtom<string>('', 'ws.v1.connectionId');\nconst $connectionId = () => connectionId.get();\n\nexport const connectionName = clientAtom<string>(\n    'New Connection',\n    'ws.v1.connectionName',\n);\n\nexport const onConnectListener =\n    createListener<\n        (value: string) => boolean | void | Promise<boolean | void>\n    >();\nexport const onConnect = onConnectListener.on;\nexport const offConnect = onConnectListener.off;\n\nonConnect((id) => {\n    if (!$connectionId()) {\n        connectionId.set(id);\n    }\n    wsService.getSessions();\n});\n\nexport enum InboundMessageType {\n    CONNECTION_ID = 'CONNECTION_ID',\n    SESSIONS = 'SESSIONS',\n    SESSION_UPDATED = 'SESSION_UPDATED',\n    CONNECTIONS = 'CONNECTIONS',\n    SET_SEEK = 'SET_SEEK',\n    DOWNLOAD_EVENT = 'DOWNLOAD_EVENT',\n    SCAN_EVENT = 'SCAN_EVENT',\n}\n\nexport enum OutboundMessageType {\n    PING = 'PING',\n    GET_CONNECTION_ID = 'GET_CONNECTION_ID',\n    PLAYBACK_ACTION = 'PLAYBACK_ACTION',\n    GET_SESSIONS = 'GET_SESSIONS',\n    CREATE_SESSION = 'CREATE_SESSION',\n    UPDATE_SESSION = 'UPDATE_SESSION',\n    DELETE_SESSION = 'DELETE_SESSION',\n    REGISTER_CONNECTION = 'REGISTER_CONNECTION',\n    REGISTER_PLAYERS = 'REGISTER_PLAYERS',\n    CREATE_AUDIO_ZONE = 'CREATE_AUDIO_ZONE',\n    SET_SEEK = 'SET_SEEK',\n}\n\nexport interface ConnectionIdMessage extends InboundMessage {\n    connectionId: string;\n    type: InboundMessageType.CONNECTION_ID;\n}\n\nexport interface SessionsMessage extends InboundMessage {\n    type: InboundMessageType.SESSIONS;\n    payload: Api.PlaybackSession[];\n}\n\nexport interface ConnectionsMessage extends InboundMessage {\n    type: InboundMessageType.CONNECTIONS;\n    payload: Api.Connection[];\n}\n\nexport interface SessionUpdatedMessage extends InboundMessage {\n    type: InboundMessageType.SESSION_UPDATED;\n    payload: PartialUpdateSession;\n}\n\nexport interface SetSeek {\n    sessionId: number;\n    playbackTarget: Api.PlaybackTarget;\n    seek: number;\n}\n\nexport interface SetSeekInboundMessage extends InboundMessage {\n    type: InboundMessageType.SET_SEEK;\n    payload: SetSeek;\n}\n\nexport interface DownloadEventInboundMessage extends InboundMessage {\n    type: InboundMessageType.DOWNLOAD_EVENT;\n    payload: DownloadEvent;\n}\n\nexport interface ScanEventInboundMessage extends InboundMessage {\n    type: InboundMessageType.SCAN_EVENT;\n    payload: ScanEvent;\n}\n\nexport interface GetConnectionIdMessage extends OutboundMessage {\n    type: OutboundMessageType.GET_CONNECTION_ID;\n}\n\nexport interface PingMessage extends OutboundMessage {\n    type: OutboundMessageType.PING;\n}\n\nexport type RegisterConnection = Omit<Api.Connection, 'players' | 'alive'> & {\n    players: RegisterPlayer[];\n};\nexport interface RegisterConnectionMessage extends OutboundMessage {\n    type: OutboundMessageType.REGISTER_CONNECTION;\n    payload: RegisterConnection;\n}\n\nexport type RegisterPlayer = Omit<Api.Player, 'playerId'>;\nexport interface RegisterPlayersMessage extends OutboundMessage {\n    type: OutboundMessageType.REGISTER_PLAYERS;\n    payload: RegisterPlayer[];\n}\n\nexport enum PlaybackAction {\n    PLAY = 'PLAY',\n    PAUSE = 'PAUSE',\n    STOP = 'STOP',\n    NEXT_TRACK = 'NEXT_TRACK',\n    PREVIOUS_TRACK = 'PREVIOUS_TRACK',\n}\n\nexport interface PlaybackActionMessage extends OutboundMessage {\n    type: OutboundMessageType.PLAYBACK_ACTION;\n    payload: {\n        action: PlaybackAction;\n    };\n}\n\nexport interface GetSessionsMessage extends OutboundMessage {\n    type: OutboundMessageType.GET_SESSIONS;\n}\n\nexport interface CreateAudioZoneMessage extends OutboundMessage {\n    type: OutboundMessageType.CREATE_AUDIO_ZONE;\n    payload: CreateAudioZoneRequest;\n}\n\nexport interface CreateAudioZoneRequest {\n    name: string;\n}\n\nexport interface CreateSessionRequest {\n    name: string;\n    playlist: CreateSessionPlaylistRequest;\n    playbackTarget: Api.PlaybackTarget | undefined;\n}\n\nexport interface CreateSessionPlaylistRequest {\n    tracks: Track[];\n}\n\nexport interface CreateSession {\n    name: string;\n    playlist: CreateSessionPlaylist;\n}\n\nexport interface CreateSessionPlaylist {\n    tracks: Api.UpdateSessionPlaylistTrack[];\n}\n\nexport interface CreateSessionMessage extends OutboundMessage {\n    type: OutboundMessageType.CREATE_SESSION;\n    payload: CreateSession;\n}\n\nexport interface UpdateSessionMessage extends OutboundMessage {\n    type: OutboundMessageType.UPDATE_SESSION;\n    payload: Api.UpdatePlaybackSession;\n}\n\nexport interface DeleteSessionMessage extends OutboundMessage {\n    type: OutboundMessageType.DELETE_SESSION;\n    payload: { sessionId: number };\n}\n\nexport interface InboundMessage {\n    type: InboundMessageType;\n}\n\nexport interface OutboundMessage {\n    type: OutboundMessageType;\n}\n\nexport const onMessageListener =\n    createListener<\n        (\n            message: InboundMessage,\n        ) => boolean | void | Promise<boolean> | Promise<void>\n    >();\nexport const onMessage = onMessageListener.on;\nexport const onMessageFirst = onMessageListener.onFirst;\nexport const offMessage = onMessageListener.off;\n\nonMessageFirst((data) => {\n    console.debug('Received ws message', data);\n    switch (data.type) {\n        case InboundMessageType.CONNECTION_ID: {\n            const message = data as ConnectionIdMessage;\n            onConnectListener.trigger(message.connectionId);\n            break;\n        }\n        case InboundMessageType.SESSIONS: {\n            const message = data as SessionsMessage;\n            player.setPlayerState(\n                produce((state) => {\n                    state.playbackSessions = message.payload;\n                    const existing = message.payload.find(\n                        (p) =>\n                            p.sessionId ===\n                            state.currentPlaybackSession?.sessionId,\n                    );\n                    if (existing) {\n                        player.updateSession(state, existing);\n                    } else if (\n                        typeof player.currentPlaybackSessionId() === 'number'\n                    ) {\n                        const session =\n                            message.payload.find(\n                                (s) =>\n                                    s.sessionId ===\n                                    player.currentPlaybackSessionId(),\n                            ) ?? message.payload[0];\n                        if (session) {\n                            player.updateSession(state, session, true);\n                        }\n                    } else {\n                        player.updateSession(state, message.payload[0]!, true);\n                    }\n                }),\n            );\n            break;\n        }\n        case InboundMessageType.CONNECTIONS: {\n            const message = data as ConnectionsMessage;\n            setAppState(\n                produce((state) => {\n                    state.connections = message.payload;\n                    state.connection = state.connections.find(\n                        (c) => c.connectionId === connectionId.get(),\n                    );\n                }),\n            );\n            break;\n        }\n        case InboundMessageType.SET_SEEK: {\n            const message = data as SetSeekInboundMessage;\n            if (\n                message.payload.sessionId ===\n                player.playerState.currentPlaybackSession?.sessionId\n            ) {\n                player.seek(message.payload.seek);\n            }\n            break;\n        }\n        case InboundMessageType.DOWNLOAD_EVENT: {\n            const message = data as DownloadEventInboundMessage;\n            onDownloadEventListener.trigger(message.payload);\n            break;\n        }\n        case InboundMessageType.SCAN_EVENT: {\n            const message = data as ScanEventInboundMessage;\n            onScanEventListener.trigger(message.payload);\n            break;\n        }\n        case InboundMessageType.SESSION_UPDATED: {\n            const message = data as SessionUpdatedMessage;\n\n            const session = message.payload;\n\n            player.setPlayerState(\n                produce((state) => {\n                    player.updateSessionPartial(state, session);\n                }),\n            );\n            player.sessionUpdated(session);\n\n            break;\n        }\n    }\n});\n\nconst MAX_CONNECTION_RETRY_COUNT: number = -1;\nconst CONNECTION_RETRY_DEBOUNCE = 5000;\n\nconst wsContext: {\n    lastConnectionAttemptTime: number;\n    messageBuffer: OutboundMessage[];\n} = {\n    lastConnectionAttemptTime: 0,\n    messageBuffer: [],\n};\n\nexport const wsService = {\n    ping() {\n        this.send<PingMessage>({ type: OutboundMessageType.PING });\n    },\n\n    getConnectionId() {\n        this.send<GetConnectionIdMessage>({\n            type: OutboundMessageType.GET_CONNECTION_ID,\n        });\n    },\n\n    registerConnection(connection: RegisterConnection) {\n        this.send<RegisterConnectionMessage>({\n            type: OutboundMessageType.REGISTER_CONNECTION,\n            payload: connection,\n        });\n    },\n\n    registerPlayers(players: RegisterPlayer[]) {\n        this.send<RegisterPlayersMessage>({\n            type: OutboundMessageType.REGISTER_PLAYERS,\n            payload: players,\n        });\n    },\n\n    playbackAction(action: PlaybackAction) {\n        this.send<PlaybackActionMessage>({\n            type: OutboundMessageType.PLAYBACK_ACTION,\n            payload: {\n                action,\n            },\n        });\n    },\n\n    createAudioZone(audioZone: CreateAudioZoneRequest) {\n        this.send<CreateAudioZoneMessage>({\n            type: OutboundMessageType.CREATE_AUDIO_ZONE,\n            payload: {\n                ...audioZone,\n            },\n        });\n    },\n\n    getSessions() {\n        this.send<GetSessionsMessage>({\n            type: OutboundMessageType.GET_SESSIONS,\n        });\n    },\n\n    activateSession(sessionId: number) {\n        this.updateSession({ sessionId, active: true });\n    },\n\n    createSession(session: CreateSessionRequest) {\n        this.send<CreateSessionMessage>({\n            type: OutboundMessageType.CREATE_SESSION,\n            payload: {\n                ...session,\n                playlist: {\n                    ...session.playlist,\n                    tracks: session.playlist.tracks.map(toSessionPlaylistTrack),\n                },\n            },\n        });\n    },\n\n    updateSession(session: Api.UpdatePlaybackSession) {\n        const payload: Api.UpdatePlaybackSession = {\n            ...session,\n            playlist: undefined,\n        } as unknown as Api.UpdatePlaybackSession;\n\n        if (session.playlist) {\n            payload.playlist = {\n                ...session.playlist,\n            };\n        } else {\n            delete payload.playlist;\n        }\n\n        this.send<UpdateSessionMessage>({\n            type: OutboundMessageType.UPDATE_SESSION,\n            payload,\n        });\n    },\n\n    deleteSession(sessionId: number) {\n        this.send<DeleteSessionMessage>({\n            type: OutboundMessageType.DELETE_SESSION,\n            payload: {\n                sessionId,\n            },\n        });\n    },\n\n    send<T extends OutboundMessage>(value: T) {\n        if (ws) {\n            console.debug('Sending WebSocket message', value);\n            ws.send(JSON.stringify(value));\n        } else {\n            console.debug('Adding WebSocket message to buffer', value);\n            wsContext.messageBuffer.push(value);\n        }\n    },\n\n    newClient(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            console.log('connecting to ', wsUrl);\n            const client = new WebSocket(wsUrl);\n\n            let pingInterval: NodeJS.Timeout | undefined;\n            let opened = false;\n\n            client.addEventListener('error', (e: Event) => {\n                console.error('WebSocket client error', e);\n                if (!opened) {\n                    client.close();\n                    reject();\n                }\n            });\n\n            client.addEventListener('open', (_e: Event) => {\n                const wasOpened = opened;\n                opened = true;\n                if (!wasOpened) {\n                    pingInterval = setInterval(\n                        () => {\n                            if (!opened) return clearInterval(pingInterval);\n\n                            this.ping();\n                        },\n                        9 * 60 * 1000,\n                    );\n\n                    ws = client;\n\n                    while (wsContext.messageBuffer.length > 0) {\n                        const value = wsContext.messageBuffer.shift();\n                        console.debug(\n                            'Sending buffered WebSocket message',\n                            value,\n                        );\n                        ws.send(JSON.stringify(value));\n                    }\n\n                    this.getConnectionId();\n                    resolve();\n                }\n            });\n\n            client.addEventListener(\n                'message',\n                (event: MessageEvent<string>) => {\n                    const data = JSON.parse(event.data) as InboundMessage;\n                    onMessageListener.trigger(data);\n                },\n            );\n\n            client.addEventListener('close', async () => {\n                if (opened) {\n                    console.debug('Closed WebSocket connection');\n                    opened = false;\n                    client.close();\n                    clearInterval(pingInterval);\n\n                    const now = Date.now();\n                    if (wsContext.lastConnectionAttemptTime + 5000 > now) {\n                        console.debug(\n                            `Debouncing connection retry attempt. Waiting ${CONNECTION_RETRY_DEBOUNCE}ms`,\n                        );\n                        await this.sleep(CONNECTION_RETRY_DEBOUNCE);\n                    }\n                    wsContext.lastConnectionAttemptTime = now;\n                    await this.attemptConnection();\n                } else {\n                    reject();\n                }\n            });\n        });\n    },\n\n    async sleep(ms: number): Promise<void> {\n        return new Promise((resolve) => {\n            setTimeout(resolve, ms);\n        });\n    },\n\n    async attemptConnection(): Promise<void> {\n        let attemptNumber = 0;\n\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            console.debug(\n                `Attempting connection${\n                    attemptNumber > 0 ? `, Attempt ${attemptNumber + 1}` : ''\n                }`,\n            );\n\n            try {\n                await this.newClient();\n\n                console.debug('Successfully connected client');\n\n                return;\n            } catch (e: unknown) {\n                if (\n                    attemptNumber++ === MAX_CONNECTION_RETRY_COUNT &&\n                    MAX_CONNECTION_RETRY_COUNT !== -1\n                ) {\n                    break;\n                }\n\n                console.error(\n                    `WebSocket connection failed at '${wsUrl}':`,\n                    objToStr(e),\n                );\n                console.debug(\n                    `Failed to connect. Waiting ${CONNECTION_RETRY_DEBOUNCE}ms`,\n                );\n                await this.sleep(CONNECTION_RETRY_DEBOUNCE);\n            }\n        }\n\n        throw new Error('Failed to establish connection to websocket server');\n    },\n\n    reconnect(): Promise<void> {\n        if (ws) ws.close();\n\n        return this.attemptConnection();\n    },\n};\n","import './change-playback-target-modal.css';\nimport Modal from '../Modal';\nimport { showChangePlaybackTargetModal } from '~/services/app';\nimport { clientSignal } from '~/services/util';\n\nlet responsePromiseResolves: ((yes: boolean) => void)[] = [];\n\nexport async function responsePromise(): Promise<boolean> {\n    return new Promise((resolve) => {\n        responsePromiseResolves.push(resolve);\n    });\n}\n\nexport default function changePlaybackTargetModalFunc() {\n    const [$showChangePlaybackTargetModal] = clientSignal(\n        showChangePlaybackTargetModal,\n    );\n\n    return (\n        <div data-turbo-permanent id=\"change-playback-target-modal\">\n            <Modal\n                show={() => $showChangePlaybackTargetModal()}\n                onClose={() => showChangePlaybackTargetModal.set(false)}\n            >\n                <div class=\"change-playback-target-modal-container\">\n                    <div class=\"change-playback-target-modal-header\">\n                        <h1>Confirm</h1>\n                        <div\n                            class=\"change-playback-target-modal-close\"\n                            onClick={(e) => {\n                                showChangePlaybackTargetModal.set(false);\n                                e.stopImmediatePropagation();\n                            }}\n                        >\n                            <img\n                                class=\"cross-icon\"\n                                src=\"/img/cross-white.svg\"\n                                alt=\"Close change playback target modal\"\n                            />\n                        </div>\n                    </div>\n                    <div class=\"change-playback-target-modal-content\">\n                        Change playback target?\n                        <button\n                            class=\"remove-button-styles change-playback-target-modal-confirmation-button\"\n                            type=\"button\"\n                            onClick={(e) => {\n                                responsePromiseResolves.forEach((x) => x(true));\n                                responsePromiseResolves = [];\n                                showChangePlaybackTargetModal.set(false);\n                                e.stopImmediatePropagation();\n                            }}\n                        >\n                            yes\n                        </button>\n                        <button\n                            class=\"remove-button-styles change-playback-target-modal-confirmation-button\"\n                            type=\"button\"\n                            onClick={(e) => {\n                                responsePromiseResolves.forEach((x) =>\n                                    x(false),\n                                );\n                                responsePromiseResolves = [];\n                                showChangePlaybackTargetModal.set(false);\n                                e.stopImmediatePropagation();\n                            }}\n                        >\n                            no\n                        </button>\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n","import { QueryParams } from './util';\nimport { Api, getConnection } from './api';\n\nlet tryingToPlay = false;\nlet audio: HTMLAudioElement | undefined;\n\nfunction initSilence() {\n    console.debug('initSilence');\n    const query = new QueryParams({\n        duration: `${5}`,\n        format: Api.AudioFormat.MP3,\n    });\n\n    const con = getConnection();\n    const clientIdParam = con.clientId;\n    const signatureToken = Api.signatureToken();\n\n    if (con.clientId && signatureToken) {\n        query.set('clientId', clientIdParam);\n        query.set('signature', signatureToken);\n    }\n    if (con.staticToken) {\n        query.set('authorization', con.staticToken);\n    }\n\n    const url = `${con.apiUrl}/files/silence?${query}`;\n\n    audio = new Audio(url);\n\n    // audio.addEventListener('timeupdate', (e) => {\n    //     console.log(e.timeStamp, audio.currentTime);\n    // });\n\n    audio.loop = true;\n    audio.play();\n    audio.addEventListener('error', (e) => {\n        console.error('Failed to start audio:', e.error);\n        tryingToPlay = false;\n        audio = undefined;\n    });\n}\n\nexport function isSilencePlaying(): boolean {\n    return tryingToPlay || audio?.paused === false;\n}\n\nexport function startSilence() {\n    console.debug('startSilence');\n    if (isSilencePlaying()) {\n        console.debug('startSilence: already playing');\n        return;\n    }\n    tryingToPlay = true;\n    initSilence();\n}\n\nexport function stopSilence() {\n    console.debug('stopSilence');\n    tryingToPlay = false;\n    if (!isSilencePlaying()) {\n        console.debug('stopSilence: already not playing');\n        return;\n    }\n}\n","import { createSignal } from 'solid-js';\nimport { Howl } from 'howler';\nimport { makePersisted } from '@solid-primitives/storage';\nimport { isServer } from 'solid-js/web';\nimport {\n    type Album,\n    Api,\n    type Track,\n    api,\n    toSessionPlaylistTrack,\n} from './api';\nimport { createStore, produce } from 'solid-js/store';\nimport { createListener, deepEqual, orderedEntries } from './util';\nimport { type PartialBy, type PartialUpdateSession } from './types';\nimport { wsService } from './ws';\nimport { appState, showChangePlaybackTargetModal } from './app';\nimport { responsePromise } from '~/components/ChangePlaybackTargetModal/ChangePlaybackTargetModal';\nimport { isSilencePlaying, startSilence, stopSilence } from './silence-player';\n\nexport type TrackListenerCallback = (\n    track: Api.LibraryTrack,\n    position: number,\n) => void;\n\ninterface PlayerState {\n    playing: boolean;\n    currentPlaybackSession?: Api.PlaybackSession | undefined;\n    playbackSessions: Api.PlaybackSession[];\n    currentAudioZone?: Api.AudioZone | undefined;\n    audioZones: Api.AudioZone[];\n    currentTrack?: Track | undefined;\n}\n\nexport const [playerState, setPlayerState] = createStore<PlayerState>({\n    playing: false,\n    currentPlaybackSession: undefined,\n    playbackSessions: [],\n    currentAudioZone: undefined,\n    audioZones: [],\n    currentTrack: undefined,\n});\n\nexport const [_playbackQuality, _setPlaybackQuality] = makePersisted(\n    createSignal<Api.PlaybackQuality>(\n        { format: Api.AudioFormat.SOURCE },\n        { equals: false },\n    ),\n    {\n        name: `player.v1.playbackQuality`,\n    },\n);\nconst onPlaybackQualityChangedListener =\n    createListener<\n        (\n            value: ReturnType<typeof _playbackQuality>,\n            old: ReturnType<typeof _playbackQuality>,\n        ) => boolean | void | Promise<boolean | void>\n    >();\nexport const onPlaybackQualityChanged = onPlaybackQualityChangedListener.on;\nexport const offPlaybackQualityChanged = onPlaybackQualityChangedListener.off;\nexport const playbackQuality = _playbackQuality;\nexport const setPlaybackQuality = (\n    value: Parameters<typeof _setPlaybackQuality>[0],\n    trigger = true,\n) => {\n    const old = _playbackQuality();\n    if (typeof value === 'function') {\n        value = value(old);\n    }\n    _setPlaybackQuality(value);\n    if (trigger && value !== old) {\n        onPlaybackQualityChangedListener.trigger(value, old);\n    }\n    updatePlayback({ quality: value });\n};\n\nexport const [_currentPlaybackTarget, _setCurrentPlaybackTarget] =\n    makePersisted(\n        createSignal<Api.PlaybackTarget | undefined>(undefined, {\n            equals: false,\n        }),\n        {\n            name: `player.v1.currentPlaybackTarget`,\n        },\n    );\nconst onCurrentPlaybackTargetChangedListener =\n    createListener<\n        (\n            value: ReturnType<typeof _currentPlaybackTarget>,\n            old: ReturnType<typeof _currentPlaybackTarget>,\n        ) => boolean | void | Promise<boolean | void>\n    >();\nexport const onCurrentPlaybackTargetChanged =\n    onCurrentPlaybackTargetChangedListener.on;\nexport const offCurrentPlaybackTargetChanged =\n    onCurrentPlaybackTargetChangedListener.off;\nexport const currentPlaybackTarget = _currentPlaybackTarget;\nexport const setCurrentPlaybackTarget = (\n    value: Parameters<typeof _setCurrentPlaybackTarget>[0],\n    trigger = true,\n) => {\n    const old = _currentPlaybackTarget();\n    if (typeof value === 'function') {\n        value = value(old);\n    }\n    _setCurrentPlaybackTarget(value);\n    if (trigger && value !== old) {\n        onCurrentPlaybackTargetChangedListener.trigger(value, old);\n    }\n    updatePlayback({});\n};\n\nexport const [currentPlaybackSessionId, setCurrentPlaybackSessionId] =\n    makePersisted(\n        createSignal<number | undefined>(undefined, { equals: false }),\n        {\n            name: `player.v1.currentPlaybackSessionId`,\n        },\n    );\n\nexport const [sound, setSound] = createSignal<Howl>();\n\nconst onVolumeChangedListener =\n    createListener<(value: number, old: number) => boolean | void>();\nexport const onVolumeChanged = onVolumeChangedListener.on;\nexport const offVolumeChanged = onVolumeChangedListener.off;\n\nexport function setVolume(volume: number) {\n    console.debug('Setting volume to', volume);\n    updatePlayback({ volume });\n}\n\nexport const [_currentSeek, _setCurrentSeek] = makePersisted(\n    createSignal<number | undefined>(undefined, { equals: false }),\n    {\n        name: `player.v1.currentSeek`,\n    },\n);\nconst onCurrentSeekChangedListener =\n    createListener<\n        (\n            value: ReturnType<typeof _currentSeek>,\n            old: ReturnType<typeof _currentSeek>,\n        ) => boolean | void\n    >();\nexport const onCurrentSeekChanged = onCurrentSeekChangedListener.on;\nexport const offCurrentSeekChanged = onCurrentSeekChangedListener.off;\nexport const currentSeek = _currentSeek;\nexport const setCurrentSeek = (\n    value: Parameters<typeof _setCurrentSeek>[0],\n    trigger = true,\n) => {\n    const old = _currentSeek();\n    if (typeof value === 'function') {\n        value = value(old);\n    }\n    _setCurrentSeek(value);\n    if (trigger && value !== old) {\n        onCurrentSeekChangedListener.trigger(value, old);\n    }\n};\n\nexport const [_currentTrackLength, _setCurrentTrackLength] = makePersisted(\n    createSignal<number>(0, { equals: false }),\n    {\n        name: `player.v1.currentTrackLength`,\n    },\n);\nconst onCurrentTrackLengthChangedListener =\n    createListener<\n        (\n            value: ReturnType<typeof _currentTrackLength>,\n            old: ReturnType<typeof _currentTrackLength>,\n        ) => boolean | void\n    >();\nexport const onCurrentTrackLengthChanged =\n    onCurrentTrackLengthChangedListener.on;\nexport const offCurrentTrackLengthChanged =\n    onCurrentTrackLengthChangedListener.off;\nexport const currentTrackLength = _currentTrackLength;\nexport const setCurrentTrackLength = (\n    value: Parameters<typeof _setCurrentTrackLength>[0],\n    trigger = true,\n) => {\n    const old = _currentTrackLength();\n    if (typeof value === 'function') {\n        value = value(old);\n    }\n    _setCurrentTrackLength(value);\n    if (trigger && value !== old) {\n        onCurrentTrackLengthChangedListener.trigger(value, old);\n    }\n};\n\nexport const [currentAlbum, setCurrentAlbum] = makePersisted(\n    createSignal<Album | Track | undefined>(undefined, {\n        equals: false,\n    }),\n    {\n        name: `player.v2.currentAlbum`,\n    },\n);\n\nexport const [_playlistPosition, _setPlaylistPosition] = makePersisted(\n    createSignal<number | undefined>(undefined, { equals: false }),\n    { name: `player.v1.playlistPosition` },\n);\nconst onPlaylistPositionChangedListener =\n    createListener<\n        (\n            value: ReturnType<typeof _playlistPosition>,\n            old: ReturnType<typeof _playlistPosition>,\n        ) => boolean | void\n    >();\nexport const onPlaylistPositionChanged = onPlaylistPositionChangedListener.on;\nexport const offPlaylistPositionChanged = onPlaylistPositionChangedListener.off;\nexport const playlistPosition = _playlistPosition;\nexport const setPlaylistPosition = (\n    value: Parameters<typeof _setPlaylistPosition>[0],\n    trigger = true,\n) => {\n    const old = _playlistPosition();\n    if (typeof value === 'function') {\n        value = value(old);\n    }\n    _setPlaylistPosition(value);\n    if (trigger && value !== old) {\n        onPlaylistPositionChangedListener.trigger(value, old);\n    }\n};\n\nconst [_playlist, _setPlaylist] = makePersisted(\n    createSignal<Track[]>([], { equals: false }),\n    { name: `player.v1.playlist` },\n);\nconst onPlaylistChangedListener =\n    createListener<\n        (\n            value: ReturnType<typeof _playlist>,\n            old: ReturnType<typeof _playlist>,\n        ) => boolean | void\n    >();\nexport const onPlaylistChanged = onPlaylistChangedListener.on;\nexport const offPlaylistChanged = onPlaylistChangedListener.off;\nexport const playlist = _playlist;\nexport const setPlaylist = (\n    value: Parameters<typeof _setPlaylist>[0],\n    trigger = true,\n) => {\n    const old = _playlist();\n    if (typeof value === 'function') {\n        value = value(old);\n    }\n    _setPlaylist(value);\n    if (trigger) {\n        onPlaylistChangedListener.trigger(value, old);\n    }\n};\n\nexport interface PlayerType {\n    id: number;\n    activate?(): boolean | void | Promise<boolean | void>;\n    deactivate?(): boolean | void | Promise<boolean | void>;\n    updatePlayback(\n        update: PlaybackUpdate,\n    ): boolean | void | Promise<boolean | void>;\n}\n\nconst playListener = createListener<() => void>();\nexport const onPlay = playListener.on;\nexport const offPlay = playListener.off;\n\nexport function isMasterPlayer(zone: Api.AudioZone | undefined): boolean {\n    const activeZonePlayers = getActiveZonePlayers(zone);\n\n    console.debug(\n        'isMasterPlayer:',\n        'zone:',\n        zone,\n        'players:',\n        players,\n        'activeZonePlayers:',\n        activeZonePlayers,\n    );\n\n    if (activeZonePlayers.length === 0) {\n        console.debug('isMasterPlayer: no active zone players');\n        return false;\n    }\n\n    const first = activeZonePlayers[0];\n\n    if (zone?.players.findIndex((p) => p.playerId === first?.id) !== 0) {\n        console.debug('isMasterPlayer: player is not first');\n        return false;\n    }\n\n    console.debug('isMasterPlayer: player is master');\n    return true;\n}\n\nexport function getActiveZonePlayers(\n    zone: Api.AudioZone | undefined,\n): PlayerType[] {\n    console.debug('getActiveZonePlayers: zone =', zone, 'players =', players);\n    return (\n        players.filter((p) => zone?.players.some((x) => p.id === x.playerId)) ??\n        []\n    );\n}\n\nexport function isActiveConnectionPlayer(\n    playbackTarget: Api.ConnectionOutputPlaybackTarget,\n): boolean {\n    const players = getActiveConnectionPlayers(\n        appState.connection,\n        playbackTarget,\n    );\n\n    return players.length === 1;\n}\n\nexport function getActiveConnectionPlayers(\n    connection: Api.Connection | undefined,\n    playbackTarget: Api.ConnectionOutputPlaybackTarget,\n): PlayerType[] {\n    console.debug(\n        'getActiveConnectionPlayers: connection =',\n        connection,\n        'players =',\n        players,\n    );\n\n    if (connection?.connectionId !== playbackTarget.connectionId) {\n        return [];\n    }\n\n    return (\n        players.filter((p) =>\n            connection?.players.some(\n                (x) =>\n                    p.id === x.playerId &&\n                    x.audioOutputId === playbackTarget.outputId,\n            ),\n        ) ?? []\n    );\n}\n\nexport async function play() {\n    console.debug('Play called');\n    await updatePlayback({ playing: true });\n}\n\nconst seekListener = createListener<(seek: number, manual: boolean) => void>();\nexport const onSeek = seekListener.on;\nexport const offSeek = seekListener.off;\n\nexport async function seek(seek: number, manual = false) {\n    console.debug('Seek called');\n    if (typeof seek === 'number' && manual) {\n        console.debug(`Setting seek to ${seek}`);\n        await updatePlayback({ play: playing(), seek });\n    }\n    seekListener.trigger(seek, manual);\n}\n\nconst pauseListener = createListener<() => void>();\nexport const onPause = pauseListener.on;\nexport const offPause = pauseListener.off;\n\nexport async function pause() {\n    console.debug('Pause called');\n    await updatePlayback({ playing: false });\n}\n\nconst prevTrackListener = createListener<TrackListenerCallback>();\nexport const onPreviousTrack = prevTrackListener.on;\nexport const offPreviousTrack = prevTrackListener.off;\n\nexport async function previousTrack(): Promise<boolean> {\n    if (playlistPosition() === 0) {\n        console.debug('Setting track position to 0');\n        seek(0, true);\n    } else if ((currentSeek() ?? 0) < 5) {\n        console.debug('Playing previous track');\n\n        const position = playlistPosition() ?? 0;\n\n        await updatePlayback({\n            play: true,\n            seek: 0,\n            position: position > 0 ? position - 1 : position,\n        });\n    } else {\n        console.debug('Setting track position to 0');\n        seek(0, true);\n    }\n    return false;\n}\n\nconst nextTrackListener = createListener<TrackListenerCallback>();\nexport const onNextTrack = nextTrackListener.on;\nexport const offNextTrack = nextTrackListener.off;\n\nexport async function nextTrack(): Promise<boolean> {\n    if (\n        typeof playlistPosition() === 'number' &&\n        playlistPosition()! < playlist()!.length - 1\n    ) {\n        console.debug('Playing next track');\n\n        const position = playlistPosition() ?? 0;\n\n        await updatePlayback({\n            play: true,\n            seek: 0,\n            position: position + 1,\n        });\n    } else {\n        console.debug('No next track to play');\n        stop();\n    }\n\n    return false;\n}\n\nconst stopListener = createListener<() => void>();\nexport const onStop = stopListener.on;\nexport const offStop = stopListener.off;\n\nexport async function stop() {\n    await updatePlayback({ stop: false });\n}\n\nconst playAlbumListener = createListener<() => void>();\nexport const onPlayAlbum = playAlbumListener.on;\nexport const offPlayAlbum = playAlbumListener.off;\n\nexport async function playAlbum(album: Album | Track) {\n    console.debug('playAlbum', album);\n    setCurrentAlbum(album);\n\n    const albumType = 'type' in album ? album.type : 'TRACK';\n\n    switch (albumType) {\n        case 'LIBRARY': {\n            album = album as Api.LibraryAlbum;\n            const versions = await api.getAlbumVersions(album.albumId);\n            const tracks = versions[0]!.tracks;\n            await playPlaylist(tracks);\n            break;\n        }\n        case 'TRACK': {\n            album = album as Api.LibraryTrack;\n            const versions = await api.getAlbumVersions(album.albumId);\n            const tracks = versions[0]!.tracks;\n            await playPlaylist(tracks);\n            break;\n        }\n        case 'TIDAL': {\n            album = album as Api.TidalAlbum;\n            const page = await api.getTidalAlbumTracks(album.id);\n            const tracks = page.items;\n            await playPlaylist(tracks);\n            break;\n        }\n        case 'QOBUZ': {\n            album = album as Api.QobuzAlbum;\n            const page = await api.getQobuzAlbumTracks(album.id);\n            const tracks = page.items;\n            await playPlaylist(tracks);\n            break;\n        }\n        case 'YT': {\n            album = album as Api.YtAlbum;\n            const page = await api.getYtAlbumTracks(album.id);\n            const tracks = page.items;\n            await playPlaylist(tracks);\n            break;\n        }\n        default:\n            albumType satisfies never;\n            throw new Error(`Invalid album type '${albumType}'`);\n    }\n}\n\nconst playPlaylistListener = createListener<() => void>();\nexport const onPlayPlaylist = playPlaylistListener.on;\nexport const offPlayPlaylist = playPlaylistListener.off;\n\nexport async function playPlaylist(tracks: Track[]) {\n    console.debug('playPlaylist', tracks);\n    const firstTrack = tracks[0];\n    setCurrentAlbum(firstTrack);\n\n    await updatePlayback({\n        play: true,\n        position: 0,\n        seek: 0,\n        tracks,\n        quality: playbackQuality(),\n    });\n}\n\nconst addAlbumToQueueListener = createListener<() => void>();\nexport const onAddAlbumToQueue = addAlbumToQueueListener.on;\nexport const offAddAlbumToQueue = addAlbumToQueueListener.off;\n\nexport async function addAlbumToQueue(album: Album | Track) {\n    console.debug('addAlbumToQueue', album);\n\n    const albumType = 'type' in album ? album.type : 'TRACK';\n\n    switch (albumType) {\n        case 'LIBRARY': {\n            album = album as Api.LibraryAlbum;\n            const versions = await api.getAlbumVersions(album.albumId);\n            const tracks = versions[0]!.tracks;\n            return addTracksToQueue(tracks);\n        }\n        case 'TRACK': {\n            album = album as Api.LibraryTrack;\n            const versions = await api.getAlbumVersions(album.albumId);\n            const tracks = versions[0]!.tracks;\n            return addTracksToQueue(tracks);\n        }\n        case 'TIDAL': {\n            album = album as Api.TidalAlbum;\n            const page = await api.getTidalAlbumTracks(album.id);\n            const tracks = page.items;\n            return addTracksToQueue(tracks);\n        }\n        case 'QOBUZ': {\n            album = album as Api.QobuzAlbum;\n            const page = await api.getQobuzAlbumTracks(album.id);\n            const tracks = page.items;\n            return addTracksToQueue(tracks);\n        }\n        case 'YT': {\n            album = album as Api.YtAlbum;\n            const page = await api.getYtAlbumTracks(album.id);\n            const tracks = page.items;\n            return addTracksToQueue(tracks);\n        }\n        default:\n            albumType satisfies never;\n            throw new Error(`Invalid album type '${albumType}'`);\n    }\n}\n\nexport async function addTracksToQueue(tracks: Track[]) {\n    console.debug('addTracksToQueue', tracks);\n    updatePlayback({\n        tracks: [...playlist(), ...tracks],\n    });\n}\n\nexport function removeTrackFromPlaylist(index: number) {\n    console.debug('Removing track from playlist', index);\n\n    const update: Parameters<typeof updatePlayback>[0] = {\n        tracks: [...playlist()!.filter((_, i) => i !== index)],\n    };\n\n    const currentPosition = playlistPosition()!;\n\n    if (index < currentPosition) {\n        update.position = currentPosition - 1;\n    } else if (index === currentPosition) {\n        update.seek = 0;\n        update.play = true;\n    }\n\n    updatePlayback(update);\n}\n\nexport function playFromPlaylistPosition(index: number) {\n    console.debug('Playing from playlist position', index);\n    updatePlayback({ play: true, position: index, seek: 0 });\n}\n\nexport const players: PlayerType[] = [];\n\nexport function containsPlayer(id: number): boolean {\n    return players.some((p) => p.id === id);\n}\n\nexport function registerPlayer(player: PlayerType) {\n    if (players.find((p) => p.id === player.id)) {\n        console.debug('Player already registered', player);\n        return;\n    }\n    console.debug('Registering player', player);\n\n    players.push(player);\n}\n\nexport function sessionUpdated(update: PartialUpdateSession) {\n    const playbackTarget = update.playbackTarget;\n    const playbackTargetType = playbackTarget.type;\n\n    switch (playbackTargetType) {\n        case 'AUDIO_ZONE':\n            {\n                if (\n                    !isMasterPlayer(\n                        playerState.audioZones.find(\n                            (z) => z.id === playbackTarget.audioZoneId,\n                        ),\n                    )\n                ) {\n                    handlePlaybackUpdate(update);\n                    console.debug('Not master player. Returning');\n                    return;\n                }\n            }\n            break;\n        case 'CONNECTION_OUTPUT':\n            if (!isActiveConnectionPlayer(playbackTarget)) {\n                handlePlaybackUpdate(update);\n                console.debug('Not active connection player. Returning');\n                return;\n            }\n            break;\n        default:\n            playbackTargetType satisfies never;\n            throw new Error(\n                `Invalid playbackTargetType: '${playbackTargetType}'`,\n            );\n    }\n\n    const sessionId = update.sessionId;\n\n    const playbackUpdate: PlaybackUpdate = {\n        sessionId,\n        playbackTarget,\n    };\n\n    for (const [key, value] of orderedEntries(update, [\n        'play',\n        'stop',\n        'playing',\n        'playlist',\n        'position',\n        'seek',\n        'volume',\n    ])) {\n        if (typeof value === 'undefined') continue;\n\n        switch (key) {\n            case 'play':\n                playbackUpdate.play = value;\n                break;\n            case 'stop':\n                playbackUpdate.stop = value;\n                break;\n            case 'playing':\n                playbackUpdate.playing = value;\n                break;\n            case 'playlist':\n                playbackUpdate.tracks = value?.tracks;\n                break;\n            case 'position':\n                playbackUpdate.position = value;\n                break;\n            case 'seek':\n                playbackUpdate.seek = value;\n                break;\n            case 'volume':\n                playbackUpdate.volume = value;\n                break;\n            case 'quality':\n                playbackUpdate.quality = value;\n                break;\n            case 'active':\n            case 'name':\n            case 'sessionId':\n            case 'playbackTarget':\n                break;\n            default:\n                key satisfies never;\n        }\n    }\n\n    updatePlayback(playbackUpdate, false);\n}\n\nasync function confirmChangePlaybackTarget() {\n    showChangePlaybackTargetModal.set(true);\n\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve) => {\n        resolve(await responsePromise());\n    });\n}\n\nexport type PlaybackUpdate = {\n    sessionId: number;\n    playbackTarget: Api.PlaybackTarget;\n    play?: boolean;\n    stop?: boolean;\n    playing?: boolean;\n    quality?: Api.PlaybackQuality;\n    position?: number;\n    seek?: number;\n    volume?: number;\n    tracks?: Track[];\n};\n\nasync function updatePlayback(\n    update: Omit<PlaybackUpdate, 'sessionId' | 'playbackTarget'>,\n    updateSession = true,\n) {\n    if (!update.quality) {\n        update.quality = playbackQuality();\n    }\n\n    const playbackUpdate = update as PlaybackUpdate;\n    const sessionId = playbackUpdate.sessionId ?? currentPlaybackSessionId();\n    const session = playerState.playbackSessions.find(\n        (x) => x.sessionId === sessionId,\n    );\n    let playbackTarget = playbackUpdate.playbackTarget;\n    const currentTarget = currentPlaybackTarget();\n    let useDefaultPlaybackTarget = false;\n\n    if (session) {\n        playbackTarget = session.playbackTarget;\n\n        if (\n            currentTarget &&\n            !deepEqual(currentTarget, session.playbackTarget) &&\n            !session.playing &&\n            (update.playing || update.play) &&\n            (await confirmChangePlaybackTarget())\n        ) {\n            useDefaultPlaybackTarget = true;\n        }\n    }\n\n    if (useDefaultPlaybackTarget) {\n        if (currentTarget) {\n            playbackTarget = currentTarget;\n        }\n    }\n\n    if (updateSession) {\n        const sessionUpdate: Parameters<typeof updatePlaybackSession>[1] = {\n            sessionId,\n            playbackTarget,\n        };\n\n        for (const [key, value] of orderedEntries(update, [\n            'play',\n            'playing',\n            'position',\n            'seek',\n            'volume',\n            'tracks',\n            'quality',\n        ])) {\n            if (typeof value === 'undefined') continue;\n\n            switch (key) {\n                case 'play':\n                    sessionUpdate.play = value;\n                    if (update.play) {\n                        sessionUpdate.playing = true;\n                    }\n                    break;\n                case 'stop':\n                    sessionUpdate.stop = value;\n                    break;\n                case 'playing':\n                    sessionUpdate.playing = value;\n                    break;\n                case 'position':\n                    sessionUpdate.position = value;\n                    break;\n                case 'seek':\n                    sessionUpdate.seek = value;\n                    break;\n                case 'volume':\n                    sessionUpdate.volume = value;\n                    break;\n                case 'tracks':\n                    sessionUpdate.playlist = {\n                        tracks: value,\n                    };\n                    break;\n                case 'quality':\n                    sessionUpdate.quality = value;\n                    break;\n                default:\n                    key satisfies never;\n            }\n        }\n\n        updatePlaybackSession(sessionId, sessionUpdate);\n    }\n\n    const activePlayers = [];\n    const playbackTargetType = playbackTarget.type;\n\n    switch (playbackTargetType) {\n        case 'AUDIO_ZONE':\n            activePlayers.push(\n                ...getActiveZonePlayers(\n                    playerState.audioZones.find(\n                        ({ id }) => id === playbackTarget.audioZoneId,\n                    ),\n                ),\n            );\n            break;\n        case 'CONNECTION_OUTPUT':\n            activePlayers.push(\n                ...getActiveConnectionPlayers(\n                    appState.connection,\n                    playbackTarget,\n                ),\n            );\n            break;\n        default:\n            playbackTargetType satisfies never;\n            throw new Error(\n                `Invalid playbackTargetType: '${playbackTargetType}'`,\n            );\n    }\n\n    console.debug('activePlayers:', activePlayers);\n\n    await updateActivePlayers(activePlayers, {\n        ...update,\n        sessionId,\n        playbackTarget,\n    });\n}\n\nasync function updateActivePlayers(\n    activePlayers: PlayerType[],\n    update: PlaybackUpdate,\n) {\n    if (activePlayers.length === 0) {\n        handlePlaybackUpdate(update);\n    } else {\n        stopSilence();\n    }\n\n    await Promise.all(\n        activePlayers.map((activePlayer) =>\n            activePlayer.updatePlayback(update),\n        ),\n    );\n}\n\nfunction handlePlaybackUpdate(update: PlaybackUpdate) {\n    for (const [key, value] of orderedEntries(update, [\n        'stop',\n        'volume',\n        'seek',\n        'play',\n        'tracks',\n        'position',\n        'playing',\n        'quality',\n    ])) {\n        if (typeof value === 'undefined') continue;\n\n        switch (key) {\n            case 'stop':\n                if (update.play || update.playing) continue;\n                if (navigator.mediaSession) {\n                    navigator.mediaSession.playbackState = 'paused';\n                }\n                break;\n            case 'playing':\n                if (update.play) continue;\n                if (navigator.mediaSession) {\n                    navigator.mediaSession.playbackState = update.playing\n                        ? 'playing'\n                        : 'paused';\n                }\n                if (update.playing) {\n                    return startSilence();\n                }\n                break;\n            case 'play':\n                if (!isSilencePlaying()) {\n                    return startSilence();\n                }\n                if (navigator.mediaSession) {\n                    navigator.mediaSession.playbackState = 'playing';\n                }\n                break;\n            case 'seek':\n                if (typeof update.seek === 'number') {\n                    navigator.mediaSession?.setPositionState({\n                        position: update.seek,\n                        duration: currentTrackLength(),\n                    });\n                }\n                break;\n            case 'volume':\n            case 'quality':\n            case 'tracks':\n            case 'position':\n            case 'sessionId':\n            case 'playbackTarget':\n                break;\n            default:\n                key satisfies never;\n        }\n    }\n\n    const session = playerState.playbackSessions.find(\n        (session) => session.sessionId === update.sessionId,\n    );\n\n    if (session?.playing) {\n        if (!isSilencePlaying()) {\n            return startSilence();\n        }\n    }\n}\n\nfunction updatePlaybackSession(\n    id: number,\n    request: Omit<PartialBy<PartialUpdateSession, 'playlist'>, 'playlist'> & {\n        playlist?: PartialBy<\n            Omit<Api.UpdatePlaybackSessionPlaylist, 'tracks'>,\n            'sessionPlaylistId'\n        > & { tracks: Track[] };\n    },\n) {\n    console.debug('updatePlaybackSession:', id, request);\n    setPlayerState(\n        produce((state) => {\n            const current = state.currentPlaybackSession;\n            const session =\n                current?.sessionId === id\n                    ? current\n                    : state.playbackSessions.find((s) => s.sessionId === id);\n            if (session) {\n                const { playlist } = session;\n                if (playlist && request.playlist) {\n                    request.playlist.sessionPlaylistId =\n                        playlist.sessionPlaylistId;\n                }\n                updateSessionPartial(state, request as PartialUpdateSession);\n\n                const updatePlaybackSession: Api.UpdatePlaybackSession = {\n                    ...request,\n                    playlist: undefined,\n                } as unknown as Api.UpdatePlaybackSession;\n\n                if (request.playlist) {\n                    updatePlaybackSession.playlist = {\n                        ...request.playlist,\n                        sessionPlaylistId: request.playlist.sessionPlaylistId!,\n                        tracks: request.playlist.tracks.map(\n                            toSessionPlaylistTrack,\n                        ),\n                    };\n\n                    console.debug(\n                        'updatePlaybackSession: playlist:',\n                        updatePlaybackSession.playlist,\n                    );\n                } else {\n                    delete updatePlaybackSession.playlist;\n                }\n\n                wsService.updateSession(updatePlaybackSession);\n            }\n        }),\n    );\n}\n\nconst onCurrentPlaybackSessionChangedListener =\n    createListener<\n        (\n            value: PlayerState['currentPlaybackSession'],\n            old: PlayerState['currentPlaybackSession'],\n        ) => boolean | void\n    >();\nexport const onCurrentPlaybackSessionChanged =\n    onCurrentPlaybackSessionChangedListener.on;\nexport const offCurrentPlaybackSessionChanged =\n    onCurrentPlaybackSessionChangedListener.off;\n\nconst onUpdateSessionPartialListener =\n    createListener<(value: PartialUpdateSession) => boolean | void>();\nexport const onUpdateSessionPartial = onUpdateSessionPartialListener.on;\nexport const offUpdateSessionPartial = onUpdateSessionPartialListener.off;\n\nexport function updateSessionPartial(\n    state: PlayerState,\n    session: PartialUpdateSession,\n) {\n    state.playbackSessions.forEach((s) => {\n        if (s.sessionId === session.sessionId) {\n            Object.assign(s, session);\n        }\n    });\n\n    if (state.currentPlaybackSession?.sessionId === session.sessionId) {\n        Object.assign(state.currentPlaybackSession, session);\n\n        let updatedPlaylist = false;\n\n        if (typeof session.seek !== 'undefined') {\n            _setCurrentSeek(session.seek);\n        }\n        if (typeof session.position !== 'undefined') {\n            _setPlaylistPosition(session.position);\n            updatedPlaylist = true;\n        }\n        if (typeof session.playlist !== 'undefined') {\n            _setPlaylist(session.playlist.tracks);\n            updatedPlaylist = true;\n        }\n\n        if (updatedPlaylist) {\n            if (typeof playlistPosition() === 'number') {\n                const track =\n                    state.currentPlaybackSession.playlist.tracks[\n                        playlistPosition()!\n                    ];\n\n                if (track) {\n                    state.currentTrack = track;\n                    setCurrentTrackLength(Math.round(track.duration));\n                }\n            } else {\n                state.currentTrack = undefined;\n                setCurrentTrackLength(0);\n            }\n        }\n    }\n\n    onUpdateSessionPartialListener.trigger(session);\n}\n\nexport function updateSession(\n    state: PlayerState,\n    session: Api.PlaybackSession,\n    setAsCurrent = false,\n) {\n    state.playbackSessions.forEach((s) => {\n        if (s.sessionId === session.sessionId) {\n            Object.assign(s, session);\n        }\n    });\n\n    if (\n        setAsCurrent ||\n        session.sessionId === state.currentPlaybackSession?.sessionId\n    ) {\n        const old = state.currentPlaybackSession;\n        state.currentPlaybackSession = session;\n        setCurrentPlaybackSessionId(session.sessionId);\n\n        console.debug('session changed to', session, 'from', old);\n\n        _setPlaylist(session.playlist.tracks);\n        _setCurrentSeek(session.seek);\n        _setPlaylistPosition(\n            session.playlist.tracks.length > 0 ? session.position : undefined,\n        );\n\n        if (typeof playlistPosition() === 'number') {\n            const track = session.playlist.tracks[playlistPosition()!];\n\n            if (track) {\n                state.currentTrack = track;\n                setCurrentTrackLength(Math.round(track.duration));\n            }\n        } else {\n            state.currentTrack = undefined;\n            setCurrentTrackLength(0);\n        }\n\n        onCurrentPlaybackSessionChangedListener.trigger(session, old);\n    }\n}\n\nonCurrentSeekChanged((value, old) => {\n    console.debug('current seek changed from', old, 'to', value);\n    if (typeof value === 'number') {\n        navigator.mediaSession?.setPositionState({\n            position: value,\n            duration: currentTrackLength(),\n        });\n    }\n    const activeZonePlayer = playerState.audioZones.some((zone) =>\n        isMasterPlayer(zone),\n    );\n    const playbackTarget = currentPlaybackTarget();\n    if (\n        activeZonePlayer ||\n        (playbackTarget?.type === 'CONNECTION_OUTPUT' &&\n            isActiveConnectionPlayer(playbackTarget))\n    ) {\n        updatePlayback({ seek: value ?? 0 });\n    }\n});\n\nonUpdateSessionPartial((session) => {\n    if (playerState.currentPlaybackSession?.sessionId !== session.sessionId) {\n        return;\n    }\n\n    if (typeof session.seek !== 'undefined') {\n        _setCurrentSeek(session.seek);\n    }\n});\n\nexport function playing(): boolean {\n    return playerState.currentPlaybackSession?.playing ?? false;\n}\n\nif (!isServer) {\n    if (navigator?.mediaSession) {\n        onCurrentPlaybackSessionChanged((value) => {\n            navigator.mediaSession.playbackState = value?.playing\n                ? 'playing'\n                : 'paused';\n            console.debug(\n                'updated playback state to',\n                navigator.mediaSession.playbackState,\n            );\n        });\n        navigator.mediaSession.setActionHandler('play', () => {\n            console.log('mediaSession: play');\n            play();\n        });\n        navigator.mediaSession.setActionHandler('pause', () => {\n            console.log('mediaSession: pause');\n            if (navigator.mediaSession.playbackState === 'playing') {\n                pause();\n            } else {\n                play();\n            }\n        });\n        navigator.mediaSession.setActionHandler('stop', () => {\n            console.log('mediaSession: stop');\n            stop();\n        });\n        navigator.mediaSession.setActionHandler('nexttrack', () => {\n            console.log('mediaSession: nexttrack');\n            nextTrack();\n        });\n        navigator.mediaSession.setActionHandler('previoustrack', () => {\n            console.log('mediaSession: previoustrack');\n            previousTrack();\n        });\n    }\n\n    document.body.onkeydown = function (e) {\n        const target = e.target as HTMLElement;\n\n        if (\n            !(target instanceof HTMLInputElement) &&\n            (e.key == ' ' || e.code == 'Space')\n        ) {\n            if (playerState.currentPlaybackSession?.playing || playing()) {\n                pause();\n            } else {\n                play();\n            }\n            e.preventDefault();\n        }\n    };\n}\n","import { format, parseISO } from 'date-fns';\nimport { Api, type ApiSource } from './api';\n\nfunction zeroPad(num: number, places: number) {\n    return String(num).padStart(places, '0');\n}\n\nexport function toTime(value: number) {\n    const seconds = Math.round(value);\n\n    const minutes = ~~(seconds / 60);\n    const minutesAndSeconds = `${minutes % 60}:${zeroPad(seconds % 60, 2)}`;\n\n    if (minutes >= 60) {\n        const pad = minutes % 60 < 10 ? '0' : '';\n        return `${~~(minutes / 60)}:${pad}${minutesAndSeconds}`;\n    }\n\n    return minutesAndSeconds;\n}\n\nexport function displayDate(date: string, dateFormat: string): string {\n    if (!date) return '';\n    return format(parseISO(date), dateFormat);\n}\n\nexport function displayAlbumVersionQuality(\n    version: Api.AlbumVersionQuality,\n): string {\n    let str = '';\n\n    switch (version.source) {\n        case Api.TrackSource.LOCAL:\n            break;\n        case Api.TrackSource.TIDAL:\n            str += 'Tidal';\n            break;\n        case Api.TrackSource.QOBUZ:\n            str += 'Qobuz';\n            break;\n        case Api.TrackSource.YT:\n            str += 'YouTube Music';\n            break;\n        default:\n            version.source satisfies never;\n    }\n\n    if (version.format) {\n        if (str.length > 0) {\n            str += ' ';\n        }\n        switch (version.format) {\n            case Api.AudioFormat.AAC:\n                str += 'AAC';\n                break;\n            case Api.AudioFormat.FLAC:\n                str += 'FLAC';\n                break;\n            case Api.AudioFormat.MP3:\n                str += 'MP3';\n                break;\n            case Api.AudioFormat.OPUS:\n                str += 'OPUS';\n                break;\n            case Api.AudioFormat.SOURCE:\n                break;\n            default:\n                version.format satisfies never;\n        }\n    }\n    if (version.sampleRate) {\n        if (str.length > 0) {\n            str += ' ';\n        }\n        str += `${version.sampleRate / 1000} kHz`;\n    }\n    if (version.bitDepth) {\n        if (str.length > 0) {\n            str += ', ';\n        }\n        str += `${version.bitDepth}-bit`;\n    }\n\n    return str;\n}\n\nexport function displayAlbumVersionQualities(\n    versions: Api.AlbumVersionQuality[],\n    maxCharacters: number = 25,\n): string {\n    let str = displayAlbumVersionQuality(versions[0]!);\n    let count = 1;\n\n    for (let i = 1; i < versions.length; i++) {\n        const display = displayAlbumVersionQuality(versions[i]!);\n\n        if (str.length + display.length + ' / '.length > maxCharacters) break;\n\n        str += ' / ' + display;\n        count++;\n    }\n\n    if (versions.length - count > 0) {\n        str += ` (+${versions.length - count})`;\n    }\n\n    return str;\n}\n\nexport function displayApiSource(source: ApiSource) {\n    switch (source) {\n        case 'TIDAL':\n            return 'Tidal';\n        case 'QOBUZ':\n            return 'Qobuz';\n        case 'YT':\n            return 'YouTube Music';\n        case 'LIBRARY':\n            return 'Library';\n        default:\n            source satisfies never;\n            throw new Error(`Invalid ApiSource: ${source}`);\n    }\n}\n\nexport function downloadTaskStateClassName(state: Api.DownloadTaskState) {\n    switch (state) {\n        case 'PENDING':\n            return 'pending';\n        case 'PAUSED':\n            return 'paused';\n        case 'CANCELLED':\n            return 'cancelled';\n        case 'STARTED':\n            return 'started';\n        case 'ERROR':\n            return 'error';\n        case 'FINISHED':\n            return 'finished';\n        default:\n            state satisfies never;\n            throw new Error(`Invalid state: ${state}`);\n    }\n}\n\nexport function displayDownloadTaskState(state: Api.DownloadTaskState) {\n    switch (state) {\n        case 'PENDING':\n            return 'Pending';\n        case 'PAUSED':\n            return 'Paused';\n        case 'CANCELLED':\n            return 'Cancelled';\n        case 'STARTED':\n            return 'Started';\n        case 'ERROR':\n            return 'Error';\n        case 'FINISHED':\n            return 'Finished';\n        default:\n            state satisfies never;\n            throw new Error(`Invalid state: ${state}`);\n    }\n}\n","import './artist.css';\nimport { Api, api } from '~/services/api';\nimport type { Album, Artist, ArtistType, Track } from '~/services/api';\nimport { createComputed, createSignal } from 'solid-js';\n\nexport function artistRoute(\n    artist:\n        | Artist\n        | Album\n        | Track\n        | { id: string | number; type: ArtistType }\n        | { artistId: string | number; type: ArtistType },\n): string {\n    const artistType = artist.type;\n\n    switch (artistType) {\n        case 'LIBRARY':\n            if ('artistId' in artist) {\n                return `/artists?artistId=${\n                    (artist as { artistId: number }).artistId\n                }`;\n            } else {\n                return `/artists?artistId=${(artist as { id: number }).id}`;\n            }\n        case 'TIDAL':\n            if ('artistId' in artist) {\n                return `/artists?tidalArtistId=${\n                    (artist as { artistId: number }).artistId\n                }`;\n            } else {\n                return `/artists?tidalArtistId=${\n                    (artist as Api.TidalArtist).id\n                }`;\n            }\n        case 'QOBUZ':\n            if ('artistId' in artist) {\n                return `/artists?qobuzArtistId=${\n                    (artist as { artistId: number }).artistId\n                }`;\n            } else {\n                return `/artists?qobuzArtistId=${\n                    (artist as Api.QobuzArtist).id\n                }`;\n            }\n        case 'YT':\n            if ('artistId' in artist) {\n                return `/artists?ytArtistId=${\n                    (artist as { artistId: number }).artistId\n                }`;\n            } else {\n                return `/artists?ytArtistId=${(artist as Api.YtArtist).id}`;\n            }\n        default:\n            artistType satisfies never;\n            throw new Error(`Invalid artistType: ${artistType}`);\n    }\n}\n\nfunction artistDetails(artist: Artist, showTitle = true) {\n    return (\n        <div class=\"artist-details\">\n            {showTitle && (\n                <div class=\"artist-title\">\n                    <a class=\"artist-title-link\" href={artistRoute(artist)}>\n                        <span class=\"artist-title-text\">{artist.title}</span>\n                    </a>\n                </div>\n            )}\n        </div>\n    );\n}\n\nfunction artistImage(props: ArtistProps, blur: boolean) {\n    return (\n        <img\n            class=\"artist-icon\"\n            style={{\n                width: `${props.size}px`,\n                height: `${props.size}px`,\n                filter: blur ? `blur(${props.size / 20}px)` : undefined,\n                cursor: props.onClick ? `pointer` : undefined,\n            }}\n            src={api.getArtistCover(\n                props.artist,\n                props.imageRequestSize,\n                props.imageRequestSize,\n            )}\n            alt={`${props.artist.title}`}\n            title={`${props.artist.title}`}\n            loading=\"lazy\"\n            onClick={props.onClick ?? (() => {})}\n        />\n    );\n}\n\ntype PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\ntype ArtistProps = {\n    artist: Artist;\n    size: number;\n    imageRequestSize: number;\n    title: boolean;\n    blur: boolean;\n    route: boolean;\n    onClick?: (e: MouseEvent) => void;\n};\n\nexport default function artist(\n    props: PartialBy<\n        ArtistProps,\n        'size' | 'imageRequestSize' | 'title' | 'blur' | 'route'\n    >,\n) {\n    props.size = props.size ?? 200;\n    props.imageRequestSize =\n        props.imageRequestSize ??\n        Math.ceil(Math.round(Math.max(200, props.size) * 1.33) / 20) * 20;\n    props.title = props.title ?? false;\n    props.route = props.route ?? true;\n\n    const [blur, setBlur] = createSignal(false);\n\n    createComputed(() => {\n        setBlur(\n            typeof props.blur === 'boolean' ? props.blur : props.artist.blur,\n        );\n    });\n\n    return (\n        <div class=\"artist\">\n            <div\n                class=\"artist-icon-container\"\n                style={{ width: `${props.size}px`, height: `${props.size}px` }}\n            >\n                {props.route ? (\n                    <a href={artistRoute(props.artist)}>\n                        {artistImage(props as ArtistProps, blur())}\n                    </a>\n                ) : (\n                    artistImage(props as ArtistProps, blur())\n                )}\n            </div>\n            {(props.artist || props.title) &&\n                artistDetails(props.artist, props.title)}\n        </div>\n    );\n}\n","import './album.css';\nimport {\n    type Album,\n    type AlbumType,\n    Api,\n    type Track,\n    api,\n} from '~/services/api';\nimport { addAlbumToQueue, playAlbum } from '~/services/player';\nimport { createComputed, createSignal } from 'solid-js';\nimport { displayAlbumVersionQualities } from '~/services/formatting';\nimport { artistRoute } from '../Artist/Artist';\n\nfunction albumControls(album: Album | Track) {\n    return (\n        <div class=\"album-controls\">\n            <button\n                class=\"media-button play-button button\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    playAlbum(album);\n                    return false;\n                }}\n            >\n                <img src=\"/img/play-button.svg\" alt=\"Play\" />\n            </button>\n            <button\n                class=\"media-button options-button button\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    addAlbumToQueue(album);\n                    return false;\n                }}\n            >\n                <img src=\"/img/more-options.svg\" alt=\"Play\" />\n            </button>\n        </div>\n    );\n}\n\nfunction getAlbumTitleDisplay(props: AlbumProps): string {\n    const albumType = props.album.type;\n\n    switch (albumType) {\n        case 'LIBRARY':\n            return props.album.title;\n        case 'TIDAL': {\n            let title = props.album.title;\n\n            if (props.album.mediaMetadataTags?.includes('DOLBY_ATMOS')) {\n                title += ' (Dolby Atmos)';\n            }\n\n            return title;\n        }\n        case 'QOBUZ':\n            return props.album.title;\n        case 'YT':\n            return props.album.title;\n        default:\n            albumType satisfies never;\n            throw new Error(`Invalid albumType: ${albumType}`);\n    }\n}\n\nfunction isExplicit(props: AlbumProps): boolean {\n    const albumType = props.album.type;\n\n    switch (albumType) {\n        case 'LIBRARY':\n            return false;\n        case 'TIDAL':\n            return props.album.explicit;\n        case 'QOBUZ':\n            return props.album.parentalWarning;\n        case 'YT':\n            return false;\n        default:\n            albumType satisfies never;\n            throw new Error(`Invalid albumType: ${albumType}`);\n    }\n}\n\nconst wordsCache: { [str: string]: string[] } = {};\n\nfunction getWords(str: string) {\n    const words = wordsCache[str] ?? str.split(' ');\n\n    wordsCache[str] = words;\n\n    return words;\n}\n\nfunction allButLastWord(str: string): string {\n    const words = getWords(str);\n    return words.slice(0, words.length - 1).join(' ');\n}\n\nfunction lastWord(str: string): string {\n    const words = getWords(str);\n    return words[words.length - 1]!;\n}\n\nfunction albumDetails(props: AlbumProps) {\n    return (\n        <div class=\"album-details\">\n            {props.title && (\n                <div class=\"album-title\">\n                    {props.route ? (\n                        <a\n                            href={albumRoute(props.album)}\n                            class=\"album-title-text\"\n                            title={`${props.album.title}${isExplicit(props) ? ' (Explicit)' : ''}`}\n                        >\n                            {allButLastWord(getAlbumTitleDisplay(props))}\n                            {lastWord(getAlbumTitleDisplay(props)) ? (\n                                <>\n                                    {' '}\n                                    <span class=\"album-details-explicit-wordwrap\">\n                                        {lastWord(getAlbumTitleDisplay(props))}\n                                        {isExplicit(props) && (\n                                            <img\n                                                class=\"album-details-explicit\"\n                                                src=\"/img/explicit.svg\"\n                                                alt=\"Explicit\"\n                                            />\n                                        )}\n                                    </span>\n                                </>\n                            ) : (\n                                isExplicit(props) && (\n                                    <img\n                                        class=\"album-details-explicit\"\n                                        src=\"/img/explicit.svg\"\n                                        alt=\"Explicit\"\n                                    />\n                                )\n                            )}\n                        </a>\n                    ) : (\n                        <span\n                            class=\"album-title-text\"\n                            title={`${props.album.title}${isExplicit(props) ? ' (Explicit)' : ''}`}\n                        >\n                            {props.album.title}\n                        </span>\n                    )}\n                </div>\n            )}\n            {props.artist && (\n                <div class=\"album-artist\">\n                    <a\n                        href={artistRoute(props.album)}\n                        class=\"album-artist-text\"\n                    >\n                        {props.album.artist}\n                    </a>\n                </div>\n            )}\n            {props.year && 'dateReleased' in props.album && (\n                <div class=\"album-year\">\n                    <span class=\"album-year-text\">\n                        {props.album.dateReleased?.substring(0, 4)}\n                    </span>\n                </div>\n            )}\n            {'versions' in props.album && props.versionQualities && (\n                <div class=\"album-version-qualities\">\n                    <span class=\"album-version-qualities-text\">\n                        {props.album.versions.length > 0 &&\n                            displayAlbumVersionQualities(props.album.versions)}\n                    </span>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport function albumRoute(\n    album:\n        | Album\n        | Track\n        | { id: number | string; type: AlbumType }\n        | { albumId: number | string; type: AlbumType },\n): string {\n    const albumType = album.type;\n\n    switch (albumType) {\n        case 'LIBRARY':\n            if ('albumId' in album) {\n                return `/albums?albumId=${\n                    (album as { albumId: number | string }).albumId\n                }`;\n            } else if ('id' in album) {\n                return `/albums?albumId=${\n                    (album as { id: number | string }).id\n                }`;\n            } else {\n                throw new Error(`Invalid album: ${album}`);\n            }\n        case 'TIDAL':\n            if ('number' in album) {\n                return `/albums?tidalAlbumId=${\n                    (album as Api.TidalTrack).albumId\n                }`;\n            } else {\n                return `/albums?tidalAlbumId=${\n                    (album as { id: number | string }).id\n                }`;\n            }\n        case 'QOBUZ':\n            if ('number' in album) {\n                return `/albums?qobuzAlbumId=${\n                    (album as Api.QobuzTrack).albumId\n                }`;\n            } else {\n                return `/albums?qobuzAlbumId=${\n                    (album as { id: number | string }).id\n                }`;\n            }\n        case 'YT':\n            if ('number' in album) {\n                return `/albums?ytAlbumId=${(album as Api.YtTrack).albumId}`;\n            } else {\n                return `/albums?ytAlbumId=${\n                    (album as { id: number | string }).id\n                }`;\n            }\n        default:\n            albumType satisfies never;\n            throw new Error(`Invalid albumType: ${albumType}`);\n    }\n}\n\nfunction albumImage(props: AlbumProps, blur: boolean) {\n    return (\n        <img\n            class=\"album-icon\"\n            style={{\n                width: `${props.size}px`,\n                height: `${props.size}px`,\n                'image-rendering': blur ? 'pixelated' : undefined,\n                cursor: props.onClick ? `pointer` : undefined,\n            }}\n            src={api.getAlbumArtwork(\n                props.album,\n                blur ? 16 : props.imageRequestSize,\n                blur ? 16 : props.imageRequestSize,\n            )}\n            alt={`${props.album.title} by ${props.album.artist}`}\n            title={`${props.album.title} by ${props.album.artist}`}\n            loading=\"lazy\"\n            onClick={props.onClick ?? (() => {})}\n        />\n    );\n}\n\ntype PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\ntype AlbumProps = {\n    album: Album | Track;\n    controls?: boolean;\n    size: number;\n    imageRequestSize: number;\n    artist: boolean;\n    year: boolean;\n    title: boolean;\n    versionQualities: boolean;\n    blur: boolean;\n    route: boolean;\n    onClick?: (e: MouseEvent) => void;\n};\n\nexport default function album(\n    props: PartialBy<\n        AlbumProps,\n        | 'size'\n        | 'imageRequestSize'\n        | 'artist'\n        | 'title'\n        | 'blur'\n        | 'route'\n        | 'year'\n        | 'versionQualities'\n    >,\n) {\n    props.size = props.size ?? 200;\n    props.imageRequestSize =\n        props.imageRequestSize ??\n        Math.ceil(Math.round(Math.max(200, props.size) * 1.33) / 20) * 20;\n    props.artist = props.artist ?? false;\n    props.title = props.title ?? false;\n    props.route = props.route ?? true;\n    props.year = props.year ?? false;\n    props.versionQualities = props.versionQualities ?? false;\n\n    const fullProps = props as AlbumProps;\n\n    const [blur, setBlur] = createSignal(false);\n\n    createComputed(() => {\n        setBlur(\n            typeof fullProps.blur === 'boolean'\n                ? fullProps.blur\n                : 'blur' in fullProps.album && fullProps.album.blur,\n        );\n    });\n\n    return (\n        <div class=\"album\">\n            <div\n                class=\"album-icon-container\"\n                style={{\n                    width: `${fullProps.size}px`,\n                    height: `${fullProps.size}px`,\n                }}\n            >\n                {fullProps.route ? (\n                    <a href={albumRoute(fullProps.album)}>\n                        {albumImage(fullProps as AlbumProps, blur())}\n                        {fullProps.controls && albumControls(fullProps.album)}\n                    </a>\n                ) : (\n                    <>\n                        {albumImage(fullProps as AlbumProps, blur())}\n                        {fullProps.controls && albumControls(fullProps.album)}\n                    </>\n                )}\n            </div>\n            {(fullProps.artist || fullProps.title) && albumDetails(fullProps)}\n        </div>\n    );\n}\n","import './playlist.css';\nimport { For, createEffect, createSignal, on } from 'solid-js';\nimport {\n    playFromPlaylistPosition,\n    playlist as playerPlaylist,\n    playerState,\n    playing,\n    removeTrackFromPlaylist,\n} from '~/services/player';\nimport Album from '../Album';\nimport { type Track, trackId } from '~/services/api';\n\nexport default function playlist() {\n    const [playlist, setPlaylist] = createSignal<Track[]>([]);\n    const [currentlyPlayingIndex, setCurrentlyPlayingIndex] =\n        createSignal<number>();\n\n    function updateCurrentlyPlayingIndex() {\n        setCurrentlyPlayingIndex(\n            playlist().findIndex(\n                (track) => trackId(track) === trackId(playerState.currentTrack),\n            ),\n        );\n    }\n\n    createEffect(\n        on(\n            () => playerPlaylist(),\n            (value) => {\n                setPlaylist(value);\n                updateCurrentlyPlayingIndex();\n            },\n        ),\n    );\n\n    createEffect(\n        on(\n            () => playerState.currentTrack,\n            () => {\n                updateCurrentlyPlayingIndex();\n            },\n        ),\n    );\n\n    return (\n        <div class=\"playlist\">\n            <div class=\"playlist-tracks\">\n                <div class=\"playlist-tracks-play-queue\">Play queue</div>\n                <For each={playlist()}>\n                    {(track, index) => (\n                        <>\n                            {trackId(playerState.currentTrack) ===\n                                trackId(track) && (\n                                <div class=\"playlist-tracks-playing-from\">\n                                    Playing from:{' '}\n                                    <a href={`/albums/${track.albumId}`}>\n                                        {track.album}\n                                    </a>\n                                </div>\n                            )}\n                            {index() === (currentlyPlayingIndex() ?? 0) + 1 && (\n                                <div class=\"playlist-tracks-next-up\">\n                                    Next up:\n                                </div>\n                            )}\n                            <div\n                                class={`playlist-tracks-track${\n                                    trackId(playerState.currentTrack) ===\n                                    trackId(track)\n                                        ? ' current'\n                                        : ''\n                                }${\n                                    trackId(playerState.currentTrack) ===\n                                        trackId(track) && playing()\n                                        ? ' playing'\n                                        : ''\n                                }${\n                                    index() < (currentlyPlayingIndex() ?? 0)\n                                        ? ' past'\n                                        : ''\n                                }`}\n                                onClick={() =>\n                                    index() !== currentlyPlayingIndex() &&\n                                    playFromPlaylistPosition(index())\n                                }\n                            >\n                                <div class=\"playlist-tracks-track-album-artwork\">\n                                    <div class=\"playlist-tracks-track-album-artwork-icon\">\n                                        <Album\n                                            album={track}\n                                            size={50}\n                                            route={false}\n                                        />\n                                        {index() === currentlyPlayingIndex() ? (\n                                            <img\n                                                class=\"audio-icon\"\n                                                src=\"/img/audio-white.svg\"\n                                                alt=\"Playing\"\n                                            />\n                                        ) : (\n                                            <img\n                                                class=\"play-icon\"\n                                                src=\"/img/play-button-white.svg\"\n                                                alt=\"Playing\"\n                                            />\n                                        )}\n                                    </div>\n                                </div>\n                                <div class=\"playlist-tracks-track-details\">\n                                    <div class=\"playlist-tracks-track-details-title\">\n                                        {track.title}\n                                    </div>\n                                    <div class=\"playlist-tracks-track-details-artist\">\n                                        {track.artist}\n                                    </div>\n                                </div>\n                                {index() !== (currentlyPlayingIndex() ?? 0) && (\n                                    <div\n                                        class=\"playlist-tracks-track-remove\"\n                                        onClick={(e) => {\n                                            removeTrackFromPlaylist(index());\n                                            e.stopImmediatePropagation();\n                                        }}\n                                    >\n                                        <img\n                                            class=\"cross-icon\"\n                                            src=\"/img/cross-white.svg\"\n                                            alt=\"Remove from queue\"\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </>\n                    )}\n                </For>\n            </div>\n        </div>\n    );\n}\n","import { createEffect, createSignal, on, onCleanup, onMount } from 'solid-js';\nimport './Volume.css';\nimport { isServer } from 'solid-js/web';\nimport { playerState, setPlayerState, setVolume } from '~/services/player';\n\nlet mouseEnterListener: (event: MouseEvent) => void;\nlet mouseLeaveListener: (event: MouseEvent) => void;\nlet dragStartListener: (event: MouseEvent) => void;\nlet dragListener: (event: MouseEvent) => void;\nlet dragEndListener: (event: MouseEvent) => void;\nlet hideTimeout: NodeJS.Timeout | undefined;\n\nlet mouseY: number;\n\nfunction eventToSeekPosition(element: HTMLElement): number {\n    if (!element) return 0;\n\n    const pos = element.getBoundingClientRect()!;\n    const percentage = Math.min(\n        1,\n        Math.max(0, 1 - (mouseY - pos.top) / pos.height),\n    );\n    return Math.min(100, Math.max(0, Math.round(100 * percentage)));\n}\n\nexport default function volumeRender() {\n    let volumeContainerRef: HTMLImageElement;\n    let volumeSliderInnerRef: HTMLImageElement;\n\n    const [showVolume, setShowVolume] = createSignal(false);\n    const [inside, setInside] = createSignal(false);\n    const [sliderHeight, setSliderHeight] = createSignal(100);\n    const [dragging, setDragging] = createSignal(false);\n    const [applyDrag, setApplyDrag] = createSignal(false);\n\n    function saveVolume(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        let newVolume = value;\n        if (value > 100) {\n            newVolume = 100;\n        } else if (value < 0) {\n            newVolume = 0;\n        }\n\n        if (playerState.currentPlaybackSession?.volume !== newVolume / 100) {\n            setVolume(newVolume / 100);\n        }\n    }\n\n    createEffect(\n        on(\n            () => playerState.currentPlaybackSession?.volume ?? 1,\n            (volume) => {\n                const height = Math.round(\n                    Math.max(0, Math.min(100, volume * 100)),\n                );\n                setSliderHeight(height);\n            },\n        ),\n    );\n\n    onMount(() => {\n        if (isServer) {\n            return;\n        }\n\n        function initiateClose() {\n            hideTimeout = setTimeout(() => {\n                setShowVolume(false);\n                hideTimeout = undefined;\n            }, 400);\n        }\n\n        mouseEnterListener = (_event: MouseEvent) => {\n            setInside(true);\n            if (hideTimeout) {\n                clearTimeout(hideTimeout);\n                hideTimeout = undefined;\n            }\n            setShowVolume(true);\n        };\n\n        mouseLeaveListener = (_event: MouseEvent) => {\n            setInside(false);\n            if (!dragging()) {\n                initiateClose();\n            }\n        };\n\n        dragStartListener = (event: MouseEvent) => {\n            if (event.button === 0) {\n                setDragging(true);\n                setApplyDrag(true);\n                mouseY = event.clientY;\n                saveVolume(eventToSeekPosition(volumeSliderInnerRef));\n            }\n        };\n        dragListener = (event: MouseEvent) => {\n            if (!showVolume()) {\n                return;\n            }\n            mouseY = event.clientY;\n            if (dragging()) {\n                event.preventDefault();\n                if (!applyDrag()) return;\n            } else {\n                return;\n            }\n            saveVolume(eventToSeekPosition(volumeSliderInnerRef));\n        };\n        dragEndListener = (event: MouseEvent) => {\n            if (event.button === 0 && dragging()) {\n                setDragging(false);\n                if (!inside() && showVolume()) {\n                    initiateClose();\n                }\n                if (!applyDrag()) return;\n                setApplyDrag(false);\n                setPlayerState;\n                event.preventDefault();\n            }\n        };\n\n        volumeContainerRef.addEventListener('mouseenter', mouseEnterListener);\n        volumeContainerRef.addEventListener('mouseleave', mouseLeaveListener);\n        volumeSliderInnerRef.addEventListener('mousedown', dragStartListener);\n        window.addEventListener('mousemove', dragListener);\n        window.addEventListener('mouseup', dragEndListener);\n    });\n\n    onCleanup(() => {\n        if (isServer) {\n            return;\n        }\n\n        volumeContainerRef.removeEventListener(\n            'mouseenter',\n            mouseEnterListener,\n        );\n        volumeContainerRef.removeEventListener(\n            'mouseleave',\n            mouseLeaveListener,\n        );\n        volumeSliderInnerRef.removeEventListener(\n            'mousedown',\n            dragStartListener,\n        );\n        window.removeEventListener('mousemove', dragListener);\n        window.removeEventListener('mouseup', dragEndListener);\n    });\n\n    return (\n        <div class=\"volume-container\" ref={volumeContainerRef!}>\n            <img\n                class=\"adjust-volume-icon\"\n                src=\"/img/audio-white.svg\"\n                alt=\"Adjust Volume\"\n                onClick={() => setShowVolume(!showVolume())}\n            />\n            <div\n                class=\"volume-slider-container\"\n                style={{ display: showVolume() ? undefined : 'none' }}\n            >\n                <div class=\"volume-slider-inner\" ref={volumeSliderInnerRef!}>\n                    <div class=\"volume-slider-background\"></div>\n                    <div\n                        class=\"volume-slider\"\n                        style={{\n                            height: `${sliderHeight()}%`,\n                        }}\n                    ></div>\n                    <div\n                        class=\"volume-slider-top\"\n                        style={{ bottom: `${sliderHeight()}%` }}\n                    ></div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import {\n    createComputed,\n    createEffect,\n    createSignal,\n    on,\n    onCleanup,\n    onMount,\n} from 'solid-js';\nimport './Visualization.css';\nimport {\n    currentSeek,\n    currentTrackLength,\n    offNextTrack,\n    offPreviousTrack,\n    offSeek,\n    onSeek,\n    playing as playerPlaying,\n    playerState,\n    seek,\n} from '~/services/player';\nimport { toTime } from '~/services/formatting';\nimport { isServer } from 'solid-js/web';\nimport { api, trackId, type Track } from '~/services/api';\n\nconst VIZ_HEIGHT = 30;\nconst BAR_WIDTH = 2;\nconst BAR_GAP = 1;\nconst CURSOR_OFFSET = -1;\nlet visualizationData: number[] | undefined;\nlet mouseX: number;\nlet waitingForPlayback = true;\nlet targetPlaybackPos = 0;\n\nfunction getTrackDuration() {\n    return playerState.currentTrack?.duration ?? currentTrackLength();\n}\n\nfunction debounce(func: (e: Event) => void): (event: Event) => void {\n    let timer: NodeJS.Timeout;\n    return function (event: Event) {\n        if (timer) clearTimeout(timer);\n        timer = setTimeout(func, 300, event);\n    };\n}\n\nfunction eventToSeekPosition(element: HTMLElement): number {\n    if (!element) return 0;\n\n    const pos = element.getBoundingClientRect()!;\n    const percentage = Math.min(\n        100,\n        Math.max(0, (mouseX - pos.left) / pos.width),\n    );\n    return getTrackDuration() * percentage;\n}\n\nfunction seekTo(event: MouseEvent): void {\n    const seekPos = Math.round(\n        eventToSeekPosition(event.target as HTMLElement),\n    );\n    seek(seekPos, true);\n    waitingForPlayback = true;\n    targetPlaybackPos = seekPos;\n}\n\nlet dragStartListener: (event: MouseEvent) => void;\nlet dragListener: (event: MouseEvent) => void;\nlet dragEndListener: (event: MouseEvent) => void;\nlet visibilityChangeListener: () => void;\nlet resizeListener: (event: Event) => void;\nlet onSeekListener: (seek: number, manual: boolean) => void;\n\nenum BackToNowPlayingPosition {\n    top = 'TOP',\n    bottom = 'BOTTOM',\n    none = 'NONE',\n}\n\nexport default function player() {\n    let canvas: HTMLCanvasElement;\n    let progressBar: HTMLDivElement | undefined;\n    let progressBarVisualizer: HTMLDivElement | undefined;\n    let playlistSlideout: HTMLDivElement | undefined;\n    let playlistSlideoutContentRef: HTMLDivElement | undefined;\n    let backToNowPlayingTopRef: HTMLDivElement | undefined;\n    let backToNowPlayingBottomRef: HTMLDivElement | undefined;\n    let containerRef: HTMLDivElement | undefined;\n    const [dragging, setDragging] = createSignal(false);\n    const [applyDrag, setApplyDrag] = createSignal(false);\n    const [seekPosition, setSeekPosition] = createSignal(currentSeek());\n    const [playing, setPlaying] = createSignal(playerPlaying());\n\n    const [data, setData] = createSignal<number[]>([]);\n    const [lastCursor, setLastCursor] = createSignal<number>();\n    const [lastDarken, setLastDarken] = createSignal(0);\n\n    createComputed(() => {\n        setPlaying(playerState.currentPlaybackSession?.playing ?? false);\n    });\n\n    function getSeekPosition(): number {\n        return Math.max(Math.min(seekPosition() ?? 0, getTrackDuration()), 0);\n    }\n\n    function getCurrentSeekPosition(): number {\n        return Math.max(Math.min(currentSeek() ?? 0, getTrackDuration()), 0);\n    }\n\n    function getProgressBarWidth(): number {\n        if (applyDrag() && dragging()) {\n            return getSeekPosition() / getTrackDuration();\n        }\n\n        return getCurrentSeekPosition() / getTrackDuration();\n    }\n\n    onMount(() => {\n        if (!isServer) {\n            dragStartListener = (event: MouseEvent) => {\n                if (event.button === 0) {\n                    progressBar?.classList.add('no-transition');\n                    setDragging(true);\n                    setApplyDrag(true);\n                }\n            };\n            dragListener = (event: MouseEvent) => {\n                mouseX = event.clientX;\n                if (dragging()) {\n                    event.preventDefault();\n                    if (!applyDrag()) return;\n                }\n                setSeekPosition(eventToSeekPosition(progressBarVisualizer!));\n            };\n            dragEndListener = (event: MouseEvent) => {\n                if (event.button === 0 && dragging()) {\n                    setDragging(false);\n                    if (!applyDrag()) return;\n                    setApplyDrag(false);\n                    seekTo(event);\n                    progressBar?.classList.remove('no-transition');\n                    event.preventDefault();\n                }\n            };\n\n            visibilityChangeListener = () => {\n                if (document.visibilityState !== 'hidden') {\n                    animationStart = undefined;\n                }\n            };\n\n            resizeListener = debounce(async () => {\n                if (playerState.currentTrack) {\n                    await loadVisualizationData(playerState.currentTrack);\n                    initVisualization();\n                }\n            });\n\n            progressBarVisualizer?.addEventListener(\n                'mousedown',\n                dragStartListener,\n            );\n            window.addEventListener('mousemove', dragListener);\n            window.addEventListener('mouseup', dragEndListener);\n            document.addEventListener(\n                'visibilitychange',\n                visibilityChangeListener,\n            );\n            window.addEventListener('resize', resizeListener);\n\n            onSeekListener = (_seek, manual) => {\n                if (manual) {\n                    if (!visualizationData) return;\n                    initVisualization();\n                }\n            };\n            onSeek(onSeekListener);\n        }\n    });\n\n    onCleanup(() => {\n        if (!isServer) {\n            progressBarVisualizer?.removeEventListener(\n                'mousedown',\n                dragStartListener,\n            );\n            window.removeEventListener('mousemove', dragListener);\n            window.removeEventListener('mouseup', dragEndListener);\n            document.removeEventListener(\n                'visibilitychange',\n                visibilityChangeListener,\n            );\n            window.removeEventListener('resize', resizeListener);\n            offSeek(onSeekListener);\n        }\n    });\n\n    createEffect(\n        on(\n            () => currentSeek(),\n            (value) => {\n                animationStart = document.timeline.currentTime as number;\n                if (\n                    waitingForPlayback &&\n                    (value ?? 0) > targetPlaybackPos &&\n                    (targetPlaybackPos === 0 ||\n                        (value ?? 0) <= targetPlaybackPos + 1) &&\n                    playing()\n                ) {\n                    console.debug('playback started');\n                    waitingForPlayback = false;\n                    animationStart = undefined;\n                    startAnimation();\n                }\n            },\n        ),\n    );\n\n    function initVisualization() {\n        if (!visualizationData) {\n            throw new Error('No visualizationData set');\n        }\n\n        setLastDarken(0);\n\n        const ratio = window.devicePixelRatio;\n        canvas.width = window.innerWidth * ratio;\n        canvas.height = VIZ_HEIGHT * ratio;\n\n        const ctx = canvas.getContext('2d')!;\n        ctx.scale(ratio, ratio);\n        ctx.fillStyle = 'white';\n\n        const delta = Math.max(\n            1,\n            (visualizationData.length / window.innerWidth) * 2,\n        );\n\n        const sizedData: number[] = [];\n\n        for (\n            let i = 0;\n            i < visualizationData.length &&\n            sizedData.length < window.innerWidth;\n            i += delta\n        ) {\n            sizedData.push(visualizationData[~~i]!);\n        }\n\n        setData(sizedData);\n\n        const cursor = getProgressBarWidth();\n        ctx.fillStyle = 'white';\n        drawVisualizationPoints(0, data().length);\n        darkenVisualization(cursor);\n        drawVisualization(cursor);\n    }\n\n    function darkenVisualization(cursor: number) {\n        const ctx = canvas.getContext('2d')!;\n        const lastDarkenValue = lastDarken();\n\n        const points = data();\n        const darken = ~~(cursor * points.length);\n\n        if (lastDarkenValue > darken) {\n            ctx.fillStyle = 'white';\n            drawVisualizationPoints(darken + 1, lastDarkenValue);\n        }\n\n        ctx.fillStyle = '#222222';\n        drawVisualizationPoints(Math.max(0, lastDarkenValue - 1), darken + 1);\n        setLastDarken(darken);\n    }\n\n    function clearVisualization(cursor: number) {\n        const ctx = canvas.getContext('2d')!;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        drawVisualization(cursor);\n    }\n\n    function drawVisualization(cursor: number) {\n        const ctx = canvas.getContext('2d')!;\n        const ratio = window.devicePixelRatio;\n        const lastCursorValue = lastCursor();\n\n        if (typeof lastCursorValue === 'number') {\n            const start = lastCursorValue;\n            const end = lastCursorValue;\n            const paintStart = ~~((start * canvas.width) / ratio) - 1;\n            const paintEnd = Math.ceil((end * canvas.width) / ratio) + 3;\n            ctx.clearRect(paintStart, 0, paintEnd - paintStart, canvas.height);\n\n            const points = data();\n            const paintStartI = ~~(start * points.length) - 2;\n            const paintEndI = Math.ceil(end * points.length) + 2;\n\n            darkenVisualization(cursor);\n            const lastDarkenValue = lastDarken();\n            ctx.fillStyle = 'white';\n            drawVisualizationPoints(\n                Math.max(lastDarkenValue + 1, paintStartI),\n                paintEndI,\n            );\n        } else {\n            darkenVisualization(cursor);\n        }\n\n        ctx.fillStyle = 'white';\n        ctx.fillRect(\n            (canvas.width * cursor) / ratio + CURSOR_OFFSET,\n            0,\n            2,\n            VIZ_HEIGHT,\n        );\n        setLastCursor(cursor);\n    }\n\n    function drawVisualizationPoints(start: number, end: number) {\n        if (start >= end) return;\n\n        const ctx = canvas.getContext('2d')!;\n        const points = data();\n\n        ctx.clearRect(\n            start * (BAR_GAP + BAR_WIDTH) - 0.5 + CURSOR_OFFSET,\n            0,\n            (end - start) * (BAR_GAP + BAR_WIDTH) - 0.5,\n            VIZ_HEIGHT,\n        );\n\n        for (let i = start; i < end; i++) {\n            const point = points[i]!;\n            ctx.fillRect(\n                i * (BAR_GAP + BAR_WIDTH) + CURSOR_OFFSET,\n                VIZ_HEIGHT / 2 - point / 2,\n                BAR_WIDTH / 2,\n                point,\n            );\n        }\n    }\n\n    async function loadVisualizationData(track: Track): Promise<void> {\n        const max = window.innerWidth / (BAR_GAP + BAR_WIDTH);\n        const data: number[] = await api.getTrackVisualization(\n            track,\n            track.type,\n            max,\n        );\n        data.forEach((x, i) => {\n            data[i] = Math.max(3, Math.round((x / 255) * VIZ_HEIGHT));\n        });\n        visualizationData = data;\n    }\n\n    createEffect(\n        on(\n            () => playerState.currentTrack,\n            async (track, prev) => {\n                if (prev && track && trackId(prev) === trackId(track)) return;\n                visualizationData = undefined;\n                setData([]);\n                const cursor = getProgressBarWidth();\n                clearVisualization(cursor);\n\n                waitingForPlayback = true;\n                targetPlaybackPos = 0;\n\n                if (track) {\n                    await loadVisualizationData(track);\n                    initVisualization();\n                }\n            },\n        ),\n    );\n\n    createEffect(\n        on(\n            () => currentTrackLength(),\n            () => {\n                setSeekPosition(eventToSeekPosition(progressBarVisualizer!));\n                updateVisualizationBarOpacity();\n            },\n        ),\n    );\n\n    createEffect(\n        on(\n            () => playing(),\n            (playing) => {\n                if (!playing) {\n                    waitingForPlayback = true;\n                }\n                if (dragging()) {\n                    setApplyDrag(false);\n                    progressBar?.classList.remove('no-transition');\n                }\n            },\n        ),\n    );\n\n    let nextTrackListener: () => void;\n    let previousTrackListener: () => void;\n\n    onCleanup(() => {\n        offNextTrack(nextTrackListener);\n        offPreviousTrack(previousTrackListener);\n    });\n\n    const [backToNowPlayingPosition, setBackToNowPlayingPosition] =\n        createSignal(BackToNowPlayingPosition.none);\n\n    let backToNowPlayingTopTimeout: NodeJS.Timeout;\n    let backToNowPlayingBottomTimeout: NodeJS.Timeout;\n    const scrollListener = () => {\n        if (!getCurrentTrack()) return;\n\n        if (\n            getCurrentTrack()!.getBoundingClientRect().top >\n            playlistSlideout!.offsetHeight\n        ) {\n            clearTimeout(backToNowPlayingBottomTimeout);\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.bottom);\n            backToNowPlayingTopRef!.style.opacity = '0';\n            backToNowPlayingBottomRef!.style.display = 'block';\n            setTimeout(() => {\n                backToNowPlayingBottomRef!.style.opacity = '1';\n            }, 0);\n        } else if (getCurrentTrack()!.getBoundingClientRect().bottom < 0) {\n            clearTimeout(backToNowPlayingTopTimeout);\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.top);\n            backToNowPlayingBottomRef!.style.opacity = '0';\n            backToNowPlayingTopRef!.style.display = 'block';\n            setTimeout(() => {\n                backToNowPlayingTopRef!.style.opacity = '1';\n            }, 0);\n        } else {\n            backToNowPlayingTopRef!.style.opacity = '0';\n            backToNowPlayingBottomRef!.style.opacity = '0';\n            if (backToNowPlayingPosition() === BackToNowPlayingPosition.top) {\n                backToNowPlayingTopTimeout = setTimeout(() => {\n                    backToNowPlayingTopRef!.style.display = 'none';\n                }, 300);\n            } else if (\n                backToNowPlayingPosition() === BackToNowPlayingPosition.bottom\n            ) {\n                backToNowPlayingBottomTimeout = setTimeout(() => {\n                    backToNowPlayingBottomRef!.style.display = 'none';\n                }, 300);\n            }\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.none);\n        }\n    };\n\n    onMount(() => {\n        if (isServer) return;\n        playlistSlideoutContentRef?.addEventListener('scroll', scrollListener);\n\n        scrollListener();\n    });\n\n    onCleanup(() => {\n        if (isServer) return;\n        playlistSlideoutContentRef?.removeEventListener(\n            'scroll',\n            scrollListener,\n        );\n    });\n\n    function getCurrentTrack(): Element | null {\n        return (\n            playlistSlideout?.querySelector('.playlist-tracks-track.current') ??\n            null\n        );\n    }\n\n    let animationStart: number | undefined;\n\n    function progressAnimationFrame(ts: number): void {\n        if (!animationStart) animationStart = ts;\n\n        const elapsed = ts - animationStart;\n\n        const duration = getTrackDuration();\n\n        if (\n            typeof currentSeek() !== 'undefined' &&\n            typeof duration !== 'undefined'\n        ) {\n            const offset = (elapsed / 1000) * (1 / duration);\n\n            updateVisualizationBarOpacity(offset);\n        }\n\n        if (!playing() || waitingForPlayback) {\n            animationStart = undefined;\n            console.debug('Stopping animation');\n\n            return;\n        }\n\n        window.requestAnimationFrame(progressAnimationFrame);\n    }\n\n    function startAnimation() {\n        window.requestAnimationFrame((ts) => {\n            animationStart = ts;\n            window.requestAnimationFrame(progressAnimationFrame);\n        });\n    }\n\n    function updateVisualizationBarOpacity(offset: number = 0) {\n        if (waitingForPlayback) {\n            return;\n        }\n\n        const cursor = getProgressBarWidth() + offset;\n        drawVisualization(cursor);\n    }\n\n    return (\n        <>\n            <div ref={containerRef!} class=\"visualization\">\n                <div class=\"visualization-media-controls-seeker-bar\">\n                    <div\n                        ref={progressBarVisualizer!}\n                        class=\"visualization-media-controls-seeker-bar-progress-trigger visualization-media-controls-seeker-bar-visualizer\"\n                        style={{\n                            top: `-${Math.round(VIZ_HEIGHT / 2) - 2}px`,\n                            height: `${VIZ_HEIGHT}px`,\n                        }}\n                    >\n                        <canvas\n                            ref={canvas!}\n                            class=\"visualization-canvas\"\n                            width=\"0\"\n                            height={VIZ_HEIGHT}\n                            style={{ height: `${VIZ_HEIGHT}px` }}\n                        ></canvas>\n                    </div>\n                    <div\n                        class=\"visualization-media-controls-seeker-bar-progress-tooltip\"\n                        style={{\n                            left: `max(30px, min(100vw - 40px, ${\n                                (getSeekPosition() / getTrackDuration()) * 100\n                            }%))`,\n                            display:\n                                applyDrag() && dragging() ? 'block' : undefined,\n                        }}\n                    >\n                        {toTime(Math.round(getSeekPosition()))}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","import {\n    Show,\n    createComputed,\n    createEffect,\n    createSignal,\n    on,\n    onCleanup,\n    onMount,\n} from 'solid-js';\nimport './Player.css';\nimport {\n    currentSeek,\n    currentTrackLength,\n    nextTrack,\n    offNextTrack,\n    offPreviousTrack,\n    onNextTrack,\n    onPreviousTrack,\n    pause,\n    play,\n    playing as playerPlaying,\n    playerState,\n    previousTrack,\n} from '~/services/player';\nimport { toTime } from '~/services/formatting';\nimport { isServer } from 'solid-js/web';\nimport Album from '../Album';\nimport Playlist from '../Playlist';\nimport {\n    showAudioZones,\n    showPlaybackQuality,\n    showPlaybackSessions,\n} from '~/services/app';\nimport Volume from '../Volume';\nimport { albumRoute } from '../Album/Album';\nimport { artistRoute } from '../Artist/Artist';\nimport { clientSignal } from '~/services/util';\nimport Visualization from '../Visualization';\n\nfunction getTrackDuration() {\n    return playerState.currentTrack?.duration ?? currentTrackLength();\n}\n\nlet playlistSlideoutTimeout: NodeJS.Timeout | undefined;\n\nenum BackToNowPlayingPosition {\n    top = 'TOP',\n    bottom = 'BOTTOM',\n    none = 'NONE',\n}\n\nexport default function player() {\n    let playlistSlideout: HTMLDivElement | undefined;\n    let playlistSlideoutContentRef: HTMLDivElement | undefined;\n    let backToNowPlayingTopRef: HTMLDivElement | undefined;\n    let backToNowPlayingBottomRef: HTMLDivElement | undefined;\n    let playerRef: HTMLDivElement | undefined;\n    const [showingPlaylist, setShowingPlaylist] = createSignal(false);\n    const [playing, setPlaying] = createSignal(playerPlaying());\n    const [showTrackOptionsMobile, setShowTrackOptionsMobile] =\n        createSignal(false);\n\n    const [$showAudioZones] = clientSignal(showAudioZones);\n    const [$showPlaybackSessions] = clientSignal(showPlaybackSessions);\n    const [$showPlaybackQuality] = clientSignal(showPlaybackQuality);\n\n    createComputed(() => {\n        setPlaying(playerState.currentPlaybackSession?.playing ?? false);\n    });\n\n    function closePlaylist() {\n        if (!showingPlaylist()) return;\n\n        setShowingPlaylist(false);\n        playlistSlideoutTimeout = setTimeout(() => {\n            playlistSlideout!.style.display = 'none';\n            playlistSlideoutTimeout = undefined;\n        }, 200);\n    }\n\n    function openPlaylist() {\n        if (showingPlaylist()) return;\n\n        if (playlistSlideoutTimeout) {\n            clearTimeout(playlistSlideoutTimeout);\n        }\n        playlistSlideout!.style.display = 'block';\n        scrollPlaylistToNowPlaying(true);\n        setTimeout(() => {\n            setShowingPlaylist(true);\n        }, 0);\n    }\n\n    function togglePlaylist() {\n        if (showingPlaylist()) {\n            closePlaylist();\n        } else {\n            openPlaylist();\n        }\n    }\n\n    function toggleShowTrackOptionsMobile() {\n        setShowTrackOptionsMobile(!showTrackOptionsMobile());\n    }\n\n    function toggleShowPlaybackQuality() {\n        showPlaybackQuality.set(!$showPlaybackQuality());\n    }\n\n    function toggleShowAudioZones() {\n        showAudioZones.set(!$showAudioZones());\n    }\n\n    function toggleShowPlaybackSessions() {\n        showPlaybackSessions.set(!$showPlaybackSessions());\n    }\n\n    createEffect(\n        on(\n            () => location.pathname,\n            () => {\n                closePlaylist();\n            },\n        ),\n    );\n\n    const handleClick = (event: MouseEvent) => {\n        if (\n            !playlistSlideout?.contains(event.target as Node) &&\n            !playerRef?.contains(event.target as Node)\n        ) {\n            closePlaylist();\n        }\n    };\n\n    onMount(() => {\n        if (isServer) return;\n        window.addEventListener('click', handleClick);\n    });\n\n    onCleanup(() => {\n        if (isServer) return;\n        window.removeEventListener('click', handleClick);\n    });\n\n    let nextTrackListener: () => void;\n    let previousTrackListener: () => void;\n\n    onMount(() => {\n        onNextTrack(\n            (nextTrackListener = () => {\n                if (!showingPlaylist()) return;\n                scrollPlaylistToNowPlaying();\n            }),\n        );\n        onPreviousTrack(\n            (previousTrackListener = () => {\n                if (!showingPlaylist()) return;\n                scrollPlaylistToNowPlaying();\n            }),\n        );\n    });\n\n    onCleanup(() => {\n        offNextTrack(nextTrackListener);\n        offPreviousTrack(previousTrackListener);\n    });\n\n    const [backToNowPlayingPosition, setBackToNowPlayingPosition] =\n        createSignal(BackToNowPlayingPosition.none);\n\n    let backToNowPlayingTopTimeout: NodeJS.Timeout;\n    let backToNowPlayingBottomTimeout: NodeJS.Timeout;\n    const scrollListener = () => {\n        if (!getCurrentTrack()) return;\n\n        if (\n            getCurrentTrack()!.getBoundingClientRect().top >\n            playlistSlideout!.offsetHeight\n        ) {\n            clearTimeout(backToNowPlayingBottomTimeout);\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.bottom);\n            backToNowPlayingTopRef!.style.opacity = '0';\n            backToNowPlayingBottomRef!.style.display = 'block';\n            setTimeout(() => {\n                backToNowPlayingBottomRef!.style.opacity = '1';\n            }, 0);\n        } else if (getCurrentTrack()!.getBoundingClientRect().bottom < 0) {\n            clearTimeout(backToNowPlayingTopTimeout);\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.top);\n            backToNowPlayingBottomRef!.style.opacity = '0';\n            backToNowPlayingTopRef!.style.display = 'block';\n            setTimeout(() => {\n                backToNowPlayingTopRef!.style.opacity = '1';\n            }, 0);\n        } else {\n            backToNowPlayingTopRef!.style.opacity = '0';\n            backToNowPlayingBottomRef!.style.opacity = '0';\n            if (backToNowPlayingPosition() === BackToNowPlayingPosition.top) {\n                backToNowPlayingTopTimeout = setTimeout(() => {\n                    backToNowPlayingTopRef!.style.display = 'none';\n                }, 300);\n            } else if (\n                backToNowPlayingPosition() === BackToNowPlayingPosition.bottom\n            ) {\n                backToNowPlayingBottomTimeout = setTimeout(() => {\n                    backToNowPlayingBottomRef!.style.display = 'none';\n                }, 300);\n            }\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.none);\n        }\n    };\n\n    onMount(() => {\n        if (isServer) return;\n        playlistSlideoutContentRef?.addEventListener('scroll', scrollListener);\n\n        scrollListener();\n    });\n\n    onCleanup(() => {\n        if (isServer) return;\n        playlistSlideoutContentRef?.removeEventListener(\n            'scroll',\n            scrollListener,\n        );\n    });\n\n    function getPlayingFrom(): Element | null {\n        return (\n            playlistSlideout?.querySelector('.playlist-tracks-playing-from') ??\n            null\n        );\n    }\n\n    function getCurrentTrack(): Element | null {\n        return (\n            playlistSlideout?.querySelector('.playlist-tracks-track.current') ??\n            null\n        );\n    }\n\n    function scrollPlaylistToNowPlaying(instant = false) {\n        getPlayingFrom()?.scrollIntoView({\n            behavior: instant ? 'instant' : 'smooth',\n        });\n    }\n\n    return (\n        <>\n            <div ref={playerRef!} class=\"player\">\n                <Visualization></Visualization>\n                <div class=\"player-controls\">\n                    <div class=\"player-now-playing\">\n                        <div class=\"player-album-details\">\n                            <Show when={playerState.currentTrack}>\n                                {(currentTrack) => (\n                                    <>\n                                        <div class=\"player-album-details-icon\">\n                                            <Album\n                                                album={currentTrack()}\n                                                size={70}\n                                                artist={false}\n                                                title={false}\n                                            />\n                                        </div>\n                                        <div class=\"player-now-playing-details\">\n                                            <div class=\"player-now-playing-details-title\">\n                                                <a\n                                                    href={albumRoute(\n                                                        currentTrack(),\n                                                    )}\n                                                    title={currentTrack().title}\n                                                >\n                                                    {currentTrack().title}\n                                                </a>\n                                            </div>\n                                            <div class=\"player-now-playing-details-artist\">\n                                                <a\n                                                    href={artistRoute(\n                                                        currentTrack(),\n                                                    )}\n                                                    title={\n                                                        currentTrack().artist\n                                                    }\n                                                >\n                                                    {currentTrack().artist}\n                                                </a>\n                                            </div>\n                                            <div class=\"player-now-playing-details-album\">\n                                                Playing from:{' '}\n                                                <a\n                                                    href={albumRoute(\n                                                        currentTrack(),\n                                                    )}\n                                                    title={currentTrack().album}\n                                                >\n                                                    {currentTrack().album}\n                                                </a>\n                                            </div>\n                                        </div>\n                                    </>\n                                )}\n                            </Show>\n                        </div>\n                    </div>\n                    <div class=\"player-media-controls\">\n                        <div class=\"player-media-controls-track\">\n                            <button\n                                class=\"media-button button\"\n                                onClick={() => previousTrack()}\n                            >\n                                <img\n                                    class=\"previous-track-button\"\n                                    src=\"/img/next-button-white.svg\"\n                                    alt=\"Previous Track\"\n                                />\n                            </button>\n                            <button\n                                class=\"media-button button\"\n                                onClick={() => pause()}\n                                style={{\n                                    display: playing() ? 'initial' : 'none',\n                                }}\n                            >\n                                <img\n                                    class=\"pause-button\"\n                                    src=\"/img/pause-button-white.svg\"\n                                    alt=\"Pause\"\n                                />\n                            </button>\n                            <button\n                                class=\"media-button button\"\n                                onClick={() => play()}\n                                style={{\n                                    display: !playing() ? 'initial' : 'none',\n                                }}\n                            >\n                                <img\n                                    class=\"play-button\"\n                                    src=\"/img/play-button-white.svg\"\n                                    alt=\"Play\"\n                                />\n                            </button>\n                            <button\n                                class=\"media-button button\"\n                                onClick={() => nextTrack()}\n                            >\n                                <img\n                                    class=\"next-track-button\"\n                                    src=\"/img/next-button-white.svg\"\n                                    alt=\"Next Track\"\n                                />\n                            </button>\n                            <img\n                                class=\"show-playback-quality-icon\"\n                                src=\"/img/more-options-white.svg\"\n                                alt=\"Show Playback Quality\"\n                                onClick={() => toggleShowPlaybackQuality()}\n                            />\n                        </div>\n                        <div class=\"player-media-controls-seeker\">\n                            <span class=\"player-media-controls-seeker-current-time\">\n                                {toTime(currentSeek() ?? 0)}\n                            </span>\n                            //\n                            <span class=\"player-media-controls-seeker-total-time\">\n                                {toTime(getTrackDuration())}\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"player-track-options\">\n                        <div class=\"player-track-options-buttons\">\n                            <Volume />\n                            <img\n                                class=\"show-audio-zones-icon\"\n                                src=\"/img/speaker-white.svg\"\n                                alt=\"Configure Audio Outputs\"\n                                onClick={() => toggleShowAudioZones()}\n                            />\n                            <img\n                                class=\"show-playback-sessions-icon\"\n                                src=\"/img/speaker-white.svg\"\n                                alt=\"Show Playback Sessions\"\n                                onClick={() => toggleShowPlaybackSessions()}\n                            />\n                            <img\n                                class=\"show-playlist-icon\"\n                                src=\"/img/playlist-white.svg\"\n                                alt=\"Show Playlist\"\n                                onClick={() => togglePlaylist()}\n                            />\n                        </div>\n                        <div class=\"player-track-options-mobile\">\n                            <img\n                                class=\"mobile-playback-options\"\n                                src=\"/img/more-options-white.svg\"\n                                alt=\"Show Playback Options\"\n                                onClick={() => toggleShowTrackOptionsMobile()}\n                            />\n                            <img\n                                class=\"show-playlist-icon\"\n                                src=\"/img/playlist-white.svg\"\n                                alt=\"Show Playlist\"\n                                onClick={() => togglePlaylist()}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class={`player-track-options-mobile-buttons${\n                        showTrackOptionsMobile() ? ' visible' : ' hidden'\n                    }`}\n                >\n                    <Volume />\n                    <img\n                        class=\"show-audio-zones-icon\"\n                        src=\"/img/speaker-white.svg\"\n                        alt=\"Configure Audio Outputs\"\n                        onClick={() => toggleShowAudioZones()}\n                    />\n                    <img\n                        class=\"show-playback-sessions-icon\"\n                        src=\"/img/speaker-white.svg\"\n                        alt=\"Show Playback Sessions\"\n                        onClick={() => toggleShowPlaybackSessions()}\n                    />\n                    <img\n                        class=\"show-playback-quality-icon\"\n                        src=\"/img/more-options-white.svg\"\n                        alt=\"Show Playback Quality\"\n                        onClick={() => toggleShowPlaybackQuality()}\n                    />\n                </div>\n                <div\n                    class=\"playlist-slideout\"\n                    ref={playlistSlideout!}\n                    style={{\n                        transform: `translateX(${showingPlaylist() ? 0 : 100}%)`,\n                    }}\n                >\n                    <div\n                        ref={playlistSlideoutContentRef!}\n                        class=\"playlist-slideout-content\"\n                    >\n                        <Playlist />\n                    </div>\n                    <div\n                        ref={backToNowPlayingTopRef!}\n                        class=\"playlist-slideout-back-to-now-playing-top\"\n                        onClick={() => scrollPlaylistToNowPlaying()}\n                    >\n                        Back to now playing\n                    </div>\n                    <div\n                        ref={backToNowPlayingBottomRef!}\n                        class=\"playlist-slideout-back-to-now-playing-bottom\"\n                        onClick={() => scrollPlaylistToNowPlaying()}\n                    >\n                        Back to now playing\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","---\nimport '~/routes/global.css';\nimport Aside from './Aside.astro';\nimport Player from '~/components/Player';\nimport AudioZonesModal from '~/components/AudioZonesModal';\nimport PlaybackQualityModal from '~/components/PlaybackQualityModal';\nimport PlaybackSessionsModal from '~/components/PlaybackSessionsModal';\nimport ChangePlaybackTargetModal from '~/components/ChangePlaybackTargetModal';\nimport ScanStatusBanner from '~/components/ScanStatusBanner';\nimport Search from '~/components/Search';\n\ninterface Props {\n    title: string;\n}\n\nconst { title } = Astro.props;\n---\n\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"description\" content=\"Astro description\" />\n        <meta name=\"viewport\" content=\"width=device-width\" />\n        <meta name=\"turbo-cache-control\" content=\"no-cache\" />\n        <link rel=\"icon\" type=\"image/ico\" href=\"/favicon.ico\" />\n        <meta name=\"generator\" content={Astro.generator} />\n        <title>{title}</title>\n        <script>\n            import '~/middleware/turbo-router';\n            import '~/startup';\n        </script>\n    </head>\n    <body>\n        <div id=\"root\" class=\"dark\">\n            <header>\n                <ScanStatusBanner client:only />\n            </header>\n            <section class=\"navigation-bar-and-main-content\">\n                <Aside />\n                <main class=\"main-content\">\n                    <Search client:only />\n                    <slot />\n                    <PlaybackQualityModal client:only />\n                    <PlaybackSessionsModal client:only />\n                    <AudioZonesModal client:only />\n                    <ChangePlaybackTargetModal client:only />\n                </main>\n            </section>\n            <footer\n                data-turbo-permanent\n                id=\"footer\"\n                class=\"footer-player-footer\"\n            >\n                <div class=\"footer-player-container\">\n                    <div class=\"footer-player\">\n                        <Player client:load />\n                    </div>\n                </div>\n            </footer>\n        </div>\n    </body>\n</html>\n"],"names":["Astro","$$render","$$renderComponent","$$maybeRenderHead","$$addAttribute","atom","Api","PlayerType","TrackSource","signatureToken","connectionId","page","magicToken","api","trackId","task","player.setPlayerState","player.updateSession","player.currentPlaybackSessionId","player.playerState","player.seek","player.updateSessionPartial","player.sessionUpdated","connection","responsePromise","Promise","resolve","playlist","players","seek","updateSession","session","updatePlaybackSession","artistRoute","artist","artistType","type","artistId","id","Error","albumControls","album","_$ssr","_tmpl$","_$ssrHydrationKey","getAlbumTitleDisplay","props","albumType","title","mediaMetadataTags","includes","isExplicit","explicit","parentalWarning","wordsCache","getWords","str","words","split","allButLastWord","slice","length","join","lastWord","albumDetails","_tmpl$2","_tmpl$3","route","_tmpl$4","_$ssrAttribute","_$escape","albumRoute","_tmpl$5","_tmpl$6","_tmpl$7","_tmpl$8","year","_tmpl$9","dateReleased","substring","versionQualities","_tmpl$10","versions","displayAlbumVersionQualities","albumId","albumImage","blur","_tmpl$11","size","undefined","onClick","getAlbumArtwork","imageRequestSize","Math","ceil","round","max","fullProps","setBlur","createSignal","createComputed","_tmpl$12","_tmpl$13","controls","setPlaylist","currentlyPlayingIndex","setCurrentlyPlayingIndex","updateCurrentlyPlayingIndex","findIndex","track","playerState","currentTrack","createEffect","on","playerPlaylist","value","_$createComponent","For","each","children","index","playing","Album","mouseEnterListener","mouseLeaveListener","dragStartListener","dragListener","dragEndListener","hideTimeout","eventToSeekPosition","element","volumeRender","volumeContainerRef","volumeSliderInnerRef","showVolume","setShowVolume","inside","setInside","sliderHeight","setSliderHeight","dragging","setDragging","applyDrag","setApplyDrag","saveVolume","isNaN","newVolume","currentPlaybackSession","volume","setVolume","height","min","onMount","isServer","initiateClose","setTimeout","_event","clearTimeout","event","button","mouseY","clientY","preventDefault","addEventListener","window","onCleanup","removeEventListener","VIZ_HEIGHT","BAR_WIDTH","BAR_GAP","CURSOR_OFFSET","visualizationData","mouseX","waitingForPlayback","targetPlaybackPos","getTrackDuration","duration","currentTrackLength","debounce","func","timer","pos","getBoundingClientRect","percentage","left","width","seekTo","seekPos","target","visibilityChangeListener","resizeListener","onSeekListener","player","canvas","progressBarVisualizer","seekPosition","setSeekPosition","currentSeek","setPlaying","playerPlaying","data","setData","lastCursor","setLastCursor","lastDarken","setLastDarken","getSeekPosition","getCurrentSeekPosition","getProgressBarWidth","clientX","document","visibilityState","animationStart","loadVisualizationData","initVisualization","_seek","manual","onSeek","offSeek","timeline","currentTime","console","debug","startAnimation","ratio","devicePixelRatio","innerWidth","ctx","getContext","scale","fillStyle","delta","sizedData","i","push","cursor","drawVisualizationPoints","darkenVisualization","drawVisualization","lastDarkenValue","points","darken","clearVisualization","clearRect","lastCursorValue","start","end","paintStart","paintEnd","paintStartI","paintEndI","fillRect","point","getTrackVisualization","forEach","x","prev","updateVisualizationBarOpacity","nextTrackListener","previousTrackListener","offNextTrack","offPreviousTrack","BackToNowPlayingPosition","progressAnimationFrame","ts","elapsed","offset","requestAnimationFrame","toTime","playlistSlideout","showingPlaylist","setShowingPlaylist","showTrackOptionsMobile","setShowTrackOptionsMobile","clientSignal","showAudioZones","showPlaybackSessions","showPlaybackQuality","closePlaylist","playlistSlideoutTimeout","style","display","location","pathname","handleClick","onNextTrack","onPreviousTrack","Visualization","Show","when","Volume","Playlist","$$createAstro","$$createComponent","$$renderHead","Aside","$$renderSlot","Player"],"mappings":"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"}