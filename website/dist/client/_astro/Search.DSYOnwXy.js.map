{"version":3,"file":"Search.DSYOnwXy.js","sources":["../../../src/components/Tabs/Tabs.tsx","../../../src/components/Search/Search.tsx"],"sourcesContent":["import './tabs.css';\nimport {\n    createComputed,\n    createSignal,\n    For,\n    type JSXElement,\n    Show,\n} from 'solid-js';\n\nexport interface TabsProps {\n    class?: string | undefined;\n    tabs: { [key: string]: string };\n    default: string;\n    children: (value: NonNullable<string>) => JSXElement;\n}\n\nexport default function tabsFunc(props: TabsProps) {\n    const [selected, setSelected] = createSignal(props.default);\n    const [tabs, setTabs] = createSignal<{ key: string; display: string }[]>(\n        [],\n    );\n\n    createComputed(() => {\n        setSelected(props.default);\n        setTabs(\n            Object.entries(props.tabs).map(([key, display]) => {\n                return { key, display };\n            }),\n        );\n    });\n\n    return (\n        <div class=\"moosicbox-tabs\">\n            <div class=\"moosicbox-tabs-headers\">\n                <For each={tabs()}>\n                    {(header) => (\n                        <button\n                            type=\"button\"\n                            class=\"moosicbox-tabs-headers-header\"\n                            onClick={() => setSelected(header.key)}\n                        >\n                            {header.display}\n                        </button>\n                    )}\n                </For>\n            </div>\n            <Show when={selected()}>\n                {(value) => (\n                    <div class=\"moosicbox-tabs-content\">\n                        <div onClick={(e) => e.stopPropagation()}>\n                            {props.children(value())}\n                        </div>\n                    </div>\n                )}\n            </Show>\n        </div>\n    );\n}\n","import './search.css';\nimport { For, Show, createSignal, onCleanup, onMount } from 'solid-js';\nimport type { JSXElement } from 'solid-js';\nimport { debounce } from '@solid-primitives/scheduled';\nimport {\n    Api,\n    api,\n    type ApiSource,\n    type Album as ApiAlbum,\n    type Artist as ApiArtist,\n    once,\n} from '~/services/api';\nimport Artist from '../Artist';\nimport Album from '../Album';\nimport { isServer } from 'solid-js/web';\nimport { artistRoute } from '../Artist/Artist';\nimport { albumRoute } from '../Album/Album';\nimport { displayApiSource } from '~/services/formatting';\nimport Tabs from '../Tabs';\n\nexport default function searchInput() {\n    let searchContainerRef: HTMLDivElement;\n    let searchInputRef: HTMLInputElement;\n    let searchResultsRef: HTMLDivElement;\n\n    const [libraryLoading, setLibraryLoading] = createSignal(false);\n    const [qobuzLoading, setQobuzLoading] = createSignal(false);\n    const [tidalLoading, setTidalLoading] = createSignal(false);\n    const [ytLoading, setYtLoading] = createSignal(false);\n    const [searchFilterValue, setSearchFilterValue] = createSignal('');\n    const [searchResults, setSearchResults] =\n        createSignal<Api.GlobalSearchResult[]>();\n    const [qobuzSearchResults, setQobuzSearchResults] =\n        createSignal<Api.GlobalSearchResult[]>();\n    const [tidalSearchResults, setTidalSearchResults] =\n        createSignal<Api.GlobalSearchResult[]>();\n    const [ytSearchResults, setYtSearchResults] =\n        createSignal<Api.GlobalSearchResult[]>();\n\n    function closeSearch() {\n        searchInputRef.focus();\n        searchInputRef.blur();\n    }\n\n    function inputFocused(\n        e: FocusEvent & {\n            currentTarget: HTMLInputElement;\n            target: HTMLInputElement;\n        },\n    ) {\n        e.target.select();\n    }\n\n    onMount(() => {\n        if (isServer) return;\n    });\n\n    onCleanup(() => {\n        if (isServer) return;\n    });\n\n    function searchResultToApiArtist(\n        source: ApiSource,\n        result: Api.GlobalArtistSearchResult | Api.GlobalTrackSearchResult,\n    ): ApiArtist {\n        switch (source) {\n            case 'LIBRARY':\n                return {\n                    ...result,\n                    type: 'LIBRARY',\n                    artistId: result.artistId as number,\n                };\n            case 'TIDAL':\n                return {\n                    ...result,\n                    type: 'TIDAL',\n                    id: result.artistId as number,\n                };\n            case 'QOBUZ':\n                return {\n                    ...result,\n                    type: 'QOBUZ',\n                    id: result.artistId as number,\n                };\n            case 'YT':\n                return {\n                    ...result,\n                    type: 'YT',\n                    id: result.artistId as string,\n                };\n            default:\n                source satisfies never;\n                throw new Error(`Invalid ApiSource: \"${source}\"`);\n        }\n    }\n\n    function searchResultToApiAlbum(\n        source: ApiSource,\n        result: Api.GlobalAlbumSearchResult | Api.GlobalTrackSearchResult,\n    ): ApiAlbum {\n        switch (source) {\n            case 'LIBRARY':\n                return {\n                    ...result,\n                    type: 'LIBRARY',\n                    artistId: result.artistId as number,\n                    albumId: result.albumId as number,\n                    versions: [],\n                };\n            case 'TIDAL':\n                return {\n                    ...result,\n                    type: 'TIDAL',\n                    artistId: result.artistId as number,\n                    id: result.albumId as number,\n                    explicit: false,\n                    numberOfTracks: 0,\n                    audioQuality: 'LOSSLESS',\n                    mediaMetadataTags: [],\n                };\n            case 'QOBUZ':\n                return {\n                    ...result,\n                    type: 'QOBUZ',\n                    artistId: result.artistId as number,\n                    id: result.albumId as string,\n                    parentalWarning: false,\n                    numberOfTracks: 0,\n                };\n            case 'YT':\n                return {\n                    ...result,\n                    type: 'YT',\n                    artistId: result.artistId as string,\n                    id: result.albumId as string,\n                    numberOfTracks: 0,\n                };\n            default:\n                source satisfies never;\n                throw new Error(`Invalid ApiSource: \"${source}\"`);\n        }\n    }\n\n    async function search(searchString: string) {\n        setSearchFilterValue(searchString);\n\n        if (!searchString.trim()) return;\n\n        searchResultsRef.scroll({ top: 0, behavior: 'instant' });\n\n        try {\n            setLibraryLoading(true);\n            setQobuzLoading(true);\n            setTidalLoading(true);\n            setYtLoading(true);\n            once('search', async (signal) => {\n                await api.searchAll(\n                    searchString,\n                    0,\n                    20,\n                    (results, _allResults, source) => {\n                        switch (source) {\n                            case 'LIBRARY':\n                                setSearchResults(results);\n                                setLibraryLoading(false);\n                                break;\n                            case 'QOBUZ':\n                                setQobuzSearchResults(results);\n                                setQobuzLoading(false);\n                                break;\n                            case 'TIDAL':\n                                setTidalSearchResults(results);\n                                setTidalLoading(false);\n                                break;\n                            case 'YT':\n                                setYtSearchResults(results);\n                                setYtLoading(false);\n                                break;\n                            default:\n                                console.log(\n                                    `received ${source} results:`,\n                                    results,\n                                );\n                        }\n                    },\n                    signal,\n                );\n            });\n        } catch (e) {\n            console.error('Failed to run global search', e);\n        }\n    }\n\n    function searchResultLink(\n        source: ApiSource,\n        result: Api.GlobalSearchResult,\n    ): string {\n        const resultType = result.type;\n\n        switch (resultType) {\n            case 'ARTIST':\n                return artistRoute({ id: result.artistId, type: source });\n            case 'ALBUM':\n                return albumRoute({ id: result.albumId, type: source });\n            case 'TRACK':\n                return albumRoute({ id: result.albumId, type: source });\n            default:\n                resultType satisfies never;\n                throw new Error(`Invalid result type: ${resultType}`);\n        }\n    }\n\n    function searchResult(\n        source: ApiSource,\n        result: Api.GlobalSearchResult,\n    ): JSXElement {\n        switch (result.type) {\n            case 'ARTIST': {\n                const artist = result as Api.GlobalArtistSearchResult;\n                const apiArtist = searchResultToApiArtist(source, artist);\n                return (\n                    <div class=\"search-results-result\">\n                        <div class=\"search-results-result-icon\">\n                            <Artist\n                                size={50}\n                                artist={apiArtist}\n                                route={false}\n                            />\n                        </div>\n                        <div class=\"search-results-result-details\">\n                            <span class=\"search-results-result-details-type\">\n                                Artist\n                            </span>{' '}\n                            <span class=\"search-results-result-details-stop-word\">\n                                -\n                            </span>{' '}\n                            <a\n                                href={artistRoute({\n                                    id: artist.artistId,\n                                    type: source,\n                                })}\n                                class=\"search-results-result-details-artist\"\n                                tabindex=\"-1\"\n                            >\n                                {artist.title}\n                            </a>\n                        </div>\n                    </div>\n                );\n            }\n            case 'ALBUM': {\n                const album = result as Api.GlobalAlbumSearchResult;\n                const apiAlbum = searchResultToApiAlbum(source, album);\n                return (\n                    <div class=\"search-results-result\">\n                        <div class=\"search-results-result-icon\">\n                            <Album\n                                size={50}\n                                artist={false}\n                                year={false}\n                                route={false}\n                                album={apiAlbum}\n                            />\n                        </div>\n                        <div class=\"search-results-result-details\">\n                            <span class=\"search-results-result-details-type\">\n                                Album\n                            </span>{' '}\n                            <span class=\"search-results-result-details-stop-word\">\n                                -\n                            </span>{' '}\n                            <a\n                                href={albumRoute({\n                                    id: album.albumId,\n                                    type: source,\n                                })}\n                                class=\"search-results-result-details-album\"\n                                tabindex=\"-1\"\n                            >\n                                {album.title}\n                            </a>{' '}\n                            <span class=\"search-results-result-details-stop-word\">\n                                by\n                            </span>{' '}\n                            <a\n                                href={artistRoute({\n                                    id: album.artistId,\n                                    type: source,\n                                })}\n                                class=\"search-results-result-details-artist\"\n                                tabindex=\"-1\"\n                            >\n                                {album.artist}\n                            </a>\n                        </div>\n                    </div>\n                );\n            }\n            case 'TRACK': {\n                const track = result as Api.GlobalTrackSearchResult;\n                const apiAlbum = searchResultToApiAlbum(source, track);\n                return (\n                    <div class=\"search-results-result\">\n                        <div class=\"search-results-result-icon\">\n                            <Album\n                                size={50}\n                                artist={false}\n                                year={false}\n                                route={false}\n                                album={apiAlbum}\n                            />\n                        </div>\n                        <div class=\"search-results-result-details\">\n                            <span class=\"search-results-result-details-type\">\n                                Track\n                            </span>{' '}\n                            <span class=\"search-results-result-details-stop-word\">\n                                -\n                            </span>{' '}\n                            <a\n                                href={albumRoute({\n                                    id: track.albumId,\n                                    type: source,\n                                })}\n                                class=\"search-results-result-details-track\"\n                                tabindex=\"-1\"\n                            >\n                                {track.title}\n                            </a>{' '}\n                            <span class=\"search-results-result-details-stop-word\">\n                                on\n                            </span>{' '}\n                            <a\n                                href={albumRoute({\n                                    id: track.albumId,\n                                    type: source,\n                                })}\n                                class=\"search-results-result-details-album\"\n                                tabindex=\"-1\"\n                            >\n                                {track.album}\n                            </a>{' '}\n                            <span class=\"search-results-result-details-stop-word\">\n                                by\n                            </span>{' '}\n                            <a\n                                href={artistRoute({\n                                    id: track.artistId,\n                                    type: source,\n                                })}\n                                class=\"search-results-result-details-artist\"\n                                tabindex=\"-1\"\n                            >\n                                {track.artist}\n                            </a>\n                        </div>\n                    </div>\n                );\n            }\n        }\n    }\n\n    function searchResultsList(\n        source: ApiSource,\n        loading: boolean,\n        results?: Api.GlobalSearchResult[],\n    ): JSXElement {\n        return (\n            <div\n                class={`search-results-list${loading ? ' loading' : ' loaded'}`}\n            >\n                <Show when={results?.length === 0}>No results</Show>\n                <Show when={(results?.length ?? 0) !== 0}>\n                    <For each={results}>\n                        {(result) => (\n                            <a\n                                href={searchResultLink(source, result)}\n                                class=\"search-results-result-link\"\n                                onClick={() => closeSearch()}\n                            >\n                                {searchResult(source, result)}\n                            </a>\n                        )}\n                    </For>\n                </Show>\n                <Show when={loading}>Loading...</Show>\n            </div>\n        );\n    }\n\n    return (\n        <div\n            data-turbo-permanent\n            id=\"search-bar\"\n            class=\"search-container\"\n            ref={searchContainerRef!}\n        >\n            <div class=\"search-label-container\">\n                <label class=\"search-label\">\n                    <input\n                        ref={searchInputRef!}\n                        class=\"search-input\"\n                        title=\"Search...\"\n                        type=\"text\"\n                        onFocus={(e) => inputFocused(e)}\n                        value={searchFilterValue()}\n                        onInput={debounce(async (e) => {\n                            await search(e.target.value ?? '');\n                        }, 200)}\n                        onKeyUp={(e) => e.key === 'Escape' && closeSearch()}\n                    />\n                    <div class=\"search-backdrop\"></div>\n                </label>\n                <img\n                    src={'/img/cross.svg'}\n                    class=\"cancel-search-icon\"\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        closeSearch();\n                    }}\n                />\n            </div>\n            <div\n                class=\"search-results\"\n                style={{\n                    display: searchFilterValue()?.trim() ? undefined : 'none',\n                }}\n                ref={searchResultsRef!}\n            >\n                <Tabs\n                    default={'LIBRARY'}\n                    tabs={{\n                        LIBRARY: displayApiSource('LIBRARY'),\n                        QOBUZ: displayApiSource('QOBUZ'),\n                        TIDAL: displayApiSource('TIDAL'),\n                        YT: displayApiSource('YT'),\n                    }}\n                >\n                    {(tab) => {\n                        switch (tab) {\n                            case 'LIBRARY':\n                                return searchResultsList(\n                                    'LIBRARY',\n                                    libraryLoading(),\n                                    searchResults(),\n                                );\n                            case 'QOBUZ':\n                                return searchResultsList(\n                                    'QOBUZ',\n                                    qobuzLoading(),\n                                    qobuzSearchResults(),\n                                );\n                            case 'TIDAL':\n                                return searchResultsList(\n                                    'TIDAL',\n                                    tidalLoading(),\n                                    tidalSearchResults(),\n                                );\n                            case 'YT':\n                                return searchResultsList(\n                                    'YT',\n                                    ytLoading(),\n                                    ytSearchResults(),\n                                );\n                            default:\n                                throw new Error(`Invalid tab: ${tab}`);\n                        }\n                    }}\n                </Tabs>\n            </div>\n        </div>\n    );\n}\n"],"names":["tabsFunc","props","selected","setSelected","createSignal","default","tabs","setTabs","createComputed","Object","entries","map","key","display","_el$","_$getNextElement","_tmpl$","_el$2","firstChild","_el$3","nextSibling","_el$4","_co$","_$getNextMarker","_$createComponent","For","each","children","_el$5","_tmpl$2","$$click","header","_$runHydrationEvents","Show","when","_el$6","_tmpl$3","_el$7","e","stopPropagation","_$insert","value","_$delegateEvents","searchInput","searchContainerRef","searchInputRef","searchResultsRef","libraryLoading","setLibraryLoading","qobuzLoading","setQobuzLoading","tidalLoading","setTidalLoading","ytLoading","setYtLoading","searchFilterValue","setSearchFilterValue","searchResults","setSearchResults","qobuzSearchResults","setQobuzSearchResults","tidalSearchResults","setTidalSearchResults","ytSearchResults","setYtSearchResults","closeSearch","focus","blur","inputFocused","target","select","onMount","onCleanup","searchResultToApiArtist","source","result","type","artistId","id","Error","searchResultToApiAlbum","albumId","versions","explicit","numberOfTracks","audioQuality","mediaMetadataTags","parentalWarning","search","searchString","trim","scroll","top","behavior","once","signal","api","searchAll","results","_allResults","console","log","error","searchResultLink","resultType","artistRoute","albumRoute","searchResult","artist","apiArtist","_el$8","Artist","size","route","title","_$effect","_$setAttribute","album","apiAlbum","_el$9","_el$10","_el$11","_el$12","_el$13","_el$14","_el$15","_el$16","_el$17","_el$18","_el$19","_el$20","Album","year","_p$","_v$","_v$2","t","undefined","track","_el$21","_el$22","_el$23","_el$24","_el$25","_el$26","_el$27","_el$28","_el$29","_el$30","_el$31","_el$32","_el$33","_el$34","_el$35","_el$36","_v$3","_v$4","_v$5","a","searchResultsList","loading","_el$37","_tmpl$4","_el$38","_el$39","_el$40","_el$41","_co$2","_el$42","_el$43","_co$3","_$className","length","_el$44","_tmpl$5","_el$45","_tmpl$6","_el$46","_el$47","_el$48","_el$49","_el$50","_ref$","_$use","$$keyup","_$addEventListener","debounce","addEventListener","_ref$2","_ref$3","Tabs","LIBRARY","displayApiSource","QOBUZ","TIDAL","YT","tab","_$p","style","setProperty","removeProperty","_$setProperty"],"mappings":"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"}