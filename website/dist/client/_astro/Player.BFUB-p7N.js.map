{"version":3,"file":"Player.BFUB-p7N.js","sources":["../../../src/components/Playlist/Playlist.tsx","../../../src/components/Volume/Volume.tsx","../../../src/components/Visualization/Visualization.tsx","../../../src/components/Player/Player.tsx"],"sourcesContent":["import './playlist.css';\nimport { For, createEffect, createSignal, on } from 'solid-js';\nimport {\n    playFromPlaylistPosition,\n    playlist as playerPlaylist,\n    playerState,\n    playing,\n    removeTrackFromPlaylist,\n} from '~/services/player';\nimport Album from '../Album';\nimport { type Track, trackId } from '~/services/api';\n\nexport default function playlist() {\n    const [playlist, setPlaylist] = createSignal<Track[]>([]);\n    const [currentlyPlayingIndex, setCurrentlyPlayingIndex] =\n        createSignal<number>();\n\n    function updateCurrentlyPlayingIndex() {\n        setCurrentlyPlayingIndex(\n            playlist().findIndex(\n                (track) => trackId(track) === trackId(playerState.currentTrack),\n            ),\n        );\n    }\n\n    createEffect(\n        on(\n            () => playerPlaylist(),\n            (value) => {\n                setPlaylist(value);\n                updateCurrentlyPlayingIndex();\n            },\n        ),\n    );\n\n    createEffect(\n        on(\n            () => playerState.currentTrack,\n            () => {\n                updateCurrentlyPlayingIndex();\n            },\n        ),\n    );\n\n    return (\n        <div class=\"playlist\">\n            <div class=\"playlist-tracks\">\n                <div class=\"playlist-tracks-play-queue\">Play queue</div>\n                <For each={playlist()}>\n                    {(track, index) => (\n                        <>\n                            {trackId(playerState.currentTrack) ===\n                                trackId(track) && (\n                                <div class=\"playlist-tracks-playing-from\">\n                                    Playing from:{' '}\n                                    <a href={`/albums/${track.albumId}`}>\n                                        {track.album}\n                                    </a>\n                                </div>\n                            )}\n                            {index() === (currentlyPlayingIndex() ?? 0) + 1 && (\n                                <div class=\"playlist-tracks-next-up\">\n                                    Next up:\n                                </div>\n                            )}\n                            <div\n                                class={`playlist-tracks-track${\n                                    trackId(playerState.currentTrack) ===\n                                    trackId(track)\n                                        ? ' current'\n                                        : ''\n                                }${\n                                    trackId(playerState.currentTrack) ===\n                                        trackId(track) && playing()\n                                        ? ' playing'\n                                        : ''\n                                }${\n                                    index() < (currentlyPlayingIndex() ?? 0)\n                                        ? ' past'\n                                        : ''\n                                }`}\n                                onClick={() =>\n                                    index() !== currentlyPlayingIndex() &&\n                                    playFromPlaylistPosition(index())\n                                }\n                            >\n                                <div class=\"playlist-tracks-track-album-artwork\">\n                                    <div class=\"playlist-tracks-track-album-artwork-icon\">\n                                        <Album\n                                            album={track}\n                                            size={50}\n                                            route={false}\n                                        />\n                                        {index() === currentlyPlayingIndex() ? (\n                                            <img\n                                                class=\"audio-icon\"\n                                                src=\"/img/audio-white.svg\"\n                                                alt=\"Playing\"\n                                            />\n                                        ) : (\n                                            <img\n                                                class=\"play-icon\"\n                                                src=\"/img/play-button-white.svg\"\n                                                alt=\"Playing\"\n                                            />\n                                        )}\n                                    </div>\n                                </div>\n                                <div class=\"playlist-tracks-track-details\">\n                                    <div class=\"playlist-tracks-track-details-title\">\n                                        {track.title}\n                                    </div>\n                                    <div class=\"playlist-tracks-track-details-artist\">\n                                        {track.artist}\n                                    </div>\n                                </div>\n                                {index() !== (currentlyPlayingIndex() ?? 0) && (\n                                    <div\n                                        class=\"playlist-tracks-track-remove\"\n                                        onClick={(e) => {\n                                            removeTrackFromPlaylist(index());\n                                            e.stopImmediatePropagation();\n                                        }}\n                                    >\n                                        <img\n                                            class=\"cross-icon\"\n                                            src=\"/img/cross-white.svg\"\n                                            alt=\"Remove from queue\"\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </>\n                    )}\n                </For>\n            </div>\n        </div>\n    );\n}\n","import { createEffect, createSignal, on, onCleanup, onMount } from 'solid-js';\nimport './Volume.css';\nimport { isServer } from 'solid-js/web';\nimport { playerState, setPlayerState, setVolume } from '~/services/player';\n\nlet mouseEnterListener: (event: MouseEvent) => void;\nlet mouseLeaveListener: (event: MouseEvent) => void;\nlet dragStartListener: (event: MouseEvent) => void;\nlet dragListener: (event: MouseEvent) => void;\nlet dragEndListener: (event: MouseEvent) => void;\nlet hideTimeout: NodeJS.Timeout | undefined;\n\nlet mouseY: number;\n\nfunction eventToSeekPosition(element: HTMLElement): number {\n    if (!element) return 0;\n\n    const pos = element.getBoundingClientRect()!;\n    const percentage = Math.min(\n        1,\n        Math.max(0, 1 - (mouseY - pos.top) / pos.height),\n    );\n    return Math.min(100, Math.max(0, Math.round(100 * percentage)));\n}\n\nexport default function volumeRender() {\n    let volumeContainerRef: HTMLImageElement;\n    let volumeSliderInnerRef: HTMLImageElement;\n\n    const [showVolume, setShowVolume] = createSignal(false);\n    const [inside, setInside] = createSignal(false);\n    const [sliderHeight, setSliderHeight] = createSignal(100);\n    const [dragging, setDragging] = createSignal(false);\n    const [applyDrag, setApplyDrag] = createSignal(false);\n\n    function saveVolume(value: number) {\n        if (isNaN(value)) {\n            return;\n        }\n        let newVolume = value;\n        if (value > 100) {\n            newVolume = 100;\n        } else if (value < 0) {\n            newVolume = 0;\n        }\n\n        if (playerState.currentPlaybackSession?.volume !== newVolume / 100) {\n            setVolume(newVolume / 100);\n        }\n    }\n\n    createEffect(\n        on(\n            () => playerState.currentPlaybackSession?.volume ?? 1,\n            (volume) => {\n                const height = Math.round(\n                    Math.max(0, Math.min(100, volume * 100)),\n                );\n                setSliderHeight(height);\n            },\n        ),\n    );\n\n    onMount(() => {\n        if (isServer) {\n            return;\n        }\n\n        function initiateClose() {\n            hideTimeout = setTimeout(() => {\n                setShowVolume(false);\n                hideTimeout = undefined;\n            }, 400);\n        }\n\n        mouseEnterListener = (_event: MouseEvent) => {\n            setInside(true);\n            if (hideTimeout) {\n                clearTimeout(hideTimeout);\n                hideTimeout = undefined;\n            }\n            setShowVolume(true);\n        };\n\n        mouseLeaveListener = (_event: MouseEvent) => {\n            setInside(false);\n            if (!dragging()) {\n                initiateClose();\n            }\n        };\n\n        dragStartListener = (event: MouseEvent) => {\n            if (event.button === 0) {\n                setDragging(true);\n                setApplyDrag(true);\n                mouseY = event.clientY;\n                saveVolume(eventToSeekPosition(volumeSliderInnerRef));\n            }\n        };\n        dragListener = (event: MouseEvent) => {\n            if (!showVolume()) {\n                return;\n            }\n            mouseY = event.clientY;\n            if (dragging()) {\n                event.preventDefault();\n                if (!applyDrag()) return;\n            } else {\n                return;\n            }\n            saveVolume(eventToSeekPosition(volumeSliderInnerRef));\n        };\n        dragEndListener = (event: MouseEvent) => {\n            if (event.button === 0 && dragging()) {\n                setDragging(false);\n                if (!inside() && showVolume()) {\n                    initiateClose();\n                }\n                if (!applyDrag()) return;\n                setApplyDrag(false);\n                setPlayerState;\n                event.preventDefault();\n            }\n        };\n\n        volumeContainerRef.addEventListener('mouseenter', mouseEnterListener);\n        volumeContainerRef.addEventListener('mouseleave', mouseLeaveListener);\n        volumeSliderInnerRef.addEventListener('mousedown', dragStartListener);\n        window.addEventListener('mousemove', dragListener);\n        window.addEventListener('mouseup', dragEndListener);\n    });\n\n    onCleanup(() => {\n        if (isServer) {\n            return;\n        }\n\n        volumeContainerRef.removeEventListener(\n            'mouseenter',\n            mouseEnterListener,\n        );\n        volumeContainerRef.removeEventListener(\n            'mouseleave',\n            mouseLeaveListener,\n        );\n        volumeSliderInnerRef.removeEventListener(\n            'mousedown',\n            dragStartListener,\n        );\n        window.removeEventListener('mousemove', dragListener);\n        window.removeEventListener('mouseup', dragEndListener);\n    });\n\n    return (\n        <div class=\"volume-container\" ref={volumeContainerRef!}>\n            <img\n                class=\"adjust-volume-icon\"\n                src=\"/img/audio-white.svg\"\n                alt=\"Adjust Volume\"\n                onClick={() => setShowVolume(!showVolume())}\n            />\n            <div\n                class=\"volume-slider-container\"\n                style={{ display: showVolume() ? undefined : 'none' }}\n            >\n                <div class=\"volume-slider-inner\" ref={volumeSliderInnerRef!}>\n                    <div class=\"volume-slider-background\"></div>\n                    <div\n                        class=\"volume-slider\"\n                        style={{\n                            height: `${sliderHeight()}%`,\n                        }}\n                    ></div>\n                    <div\n                        class=\"volume-slider-top\"\n                        style={{ bottom: `${sliderHeight()}%` }}\n                    ></div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import {\n    createComputed,\n    createEffect,\n    createSignal,\n    on,\n    onCleanup,\n    onMount,\n} from 'solid-js';\nimport './Visualization.css';\nimport {\n    currentSeek,\n    currentTrackLength,\n    offNextTrack,\n    offPreviousTrack,\n    offSeek,\n    onSeek,\n    playing as playerPlaying,\n    playerState,\n    seek,\n} from '~/services/player';\nimport { toTime } from '~/services/formatting';\nimport { isServer } from 'solid-js/web';\nimport { api, trackId, type Track } from '~/services/api';\n\nconst VIZ_HEIGHT = 30;\nconst BAR_WIDTH = 2;\nconst BAR_GAP = 1;\nconst CURSOR_OFFSET = -1;\nlet visualizationData: number[] | undefined;\nlet mouseX: number;\nlet waitingForPlayback = true;\nlet targetPlaybackPos = 0;\n\nfunction getTrackDuration() {\n    return playerState.currentTrack?.duration ?? currentTrackLength();\n}\n\nfunction debounce(func: (e: Event) => void): (event: Event) => void {\n    let timer: NodeJS.Timeout;\n    return function (event: Event) {\n        if (timer) clearTimeout(timer);\n        timer = setTimeout(func, 300, event);\n    };\n}\n\nfunction eventToSeekPosition(element: HTMLElement): number {\n    if (!element) return 0;\n\n    const pos = element.getBoundingClientRect()!;\n    const percentage = Math.min(\n        100,\n        Math.max(0, (mouseX - pos.left) / pos.width),\n    );\n    return getTrackDuration() * percentage;\n}\n\nfunction seekTo(event: MouseEvent): void {\n    const seekPos = Math.round(\n        eventToSeekPosition(event.target as HTMLElement),\n    );\n    seek(seekPos, true);\n    waitingForPlayback = true;\n    targetPlaybackPos = seekPos;\n}\n\nlet dragStartListener: (event: MouseEvent) => void;\nlet dragListener: (event: MouseEvent) => void;\nlet dragEndListener: (event: MouseEvent) => void;\nlet visibilityChangeListener: () => void;\nlet resizeListener: (event: Event) => void;\nlet onSeekListener: (seek: number, manual: boolean) => void;\n\nenum BackToNowPlayingPosition {\n    top = 'TOP',\n    bottom = 'BOTTOM',\n    none = 'NONE',\n}\n\nexport default function player() {\n    let canvas: HTMLCanvasElement;\n    let progressBar: HTMLDivElement | undefined;\n    let progressBarVisualizer: HTMLDivElement | undefined;\n    let playlistSlideout: HTMLDivElement | undefined;\n    let playlistSlideoutContentRef: HTMLDivElement | undefined;\n    let backToNowPlayingTopRef: HTMLDivElement | undefined;\n    let backToNowPlayingBottomRef: HTMLDivElement | undefined;\n    let containerRef: HTMLDivElement | undefined;\n    const [dragging, setDragging] = createSignal(false);\n    const [applyDrag, setApplyDrag] = createSignal(false);\n    const [seekPosition, setSeekPosition] = createSignal(currentSeek());\n    const [playing, setPlaying] = createSignal(playerPlaying());\n\n    const [data, setData] = createSignal<number[]>([]);\n    const [lastCursor, setLastCursor] = createSignal<number>();\n    const [lastDarken, setLastDarken] = createSignal(0);\n\n    createComputed(() => {\n        setPlaying(playerState.currentPlaybackSession?.playing ?? false);\n    });\n\n    function getSeekPosition(): number {\n        return Math.max(Math.min(seekPosition() ?? 0, getTrackDuration()), 0);\n    }\n\n    function getCurrentSeekPosition(): number {\n        return Math.max(Math.min(currentSeek() ?? 0, getTrackDuration()), 0);\n    }\n\n    function getProgressBarWidth(): number {\n        if (applyDrag() && dragging()) {\n            return getSeekPosition() / getTrackDuration();\n        }\n\n        return getCurrentSeekPosition() / getTrackDuration();\n    }\n\n    onMount(() => {\n        if (!isServer) {\n            dragStartListener = (event: MouseEvent) => {\n                if (event.button === 0) {\n                    progressBar?.classList.add('no-transition');\n                    setDragging(true);\n                    setApplyDrag(true);\n                }\n            };\n            dragListener = (event: MouseEvent) => {\n                mouseX = event.clientX;\n                if (dragging()) {\n                    event.preventDefault();\n                    if (!applyDrag()) return;\n                }\n                setSeekPosition(eventToSeekPosition(progressBarVisualizer!));\n            };\n            dragEndListener = (event: MouseEvent) => {\n                if (event.button === 0 && dragging()) {\n                    setDragging(false);\n                    if (!applyDrag()) return;\n                    setApplyDrag(false);\n                    seekTo(event);\n                    progressBar?.classList.remove('no-transition');\n                    event.preventDefault();\n                }\n            };\n\n            visibilityChangeListener = () => {\n                if (document.visibilityState !== 'hidden') {\n                    animationStart = undefined;\n                }\n            };\n\n            resizeListener = debounce(async () => {\n                if (playerState.currentTrack) {\n                    await loadVisualizationData(playerState.currentTrack);\n                    initVisualization();\n                }\n            });\n\n            progressBarVisualizer?.addEventListener(\n                'mousedown',\n                dragStartListener,\n            );\n            window.addEventListener('mousemove', dragListener);\n            window.addEventListener('mouseup', dragEndListener);\n            document.addEventListener(\n                'visibilitychange',\n                visibilityChangeListener,\n            );\n            window.addEventListener('resize', resizeListener);\n\n            onSeekListener = (_seek, manual) => {\n                if (manual) {\n                    if (!visualizationData) return;\n                    initVisualization();\n                }\n            };\n            onSeek(onSeekListener);\n        }\n    });\n\n    onCleanup(() => {\n        if (!isServer) {\n            progressBarVisualizer?.removeEventListener(\n                'mousedown',\n                dragStartListener,\n            );\n            window.removeEventListener('mousemove', dragListener);\n            window.removeEventListener('mouseup', dragEndListener);\n            document.removeEventListener(\n                'visibilitychange',\n                visibilityChangeListener,\n            );\n            window.removeEventListener('resize', resizeListener);\n            offSeek(onSeekListener);\n        }\n    });\n\n    createEffect(\n        on(\n            () => currentSeek(),\n            (value) => {\n                animationStart = document.timeline.currentTime as number;\n                if (\n                    waitingForPlayback &&\n                    (value ?? 0) > targetPlaybackPos &&\n                    (targetPlaybackPos === 0 ||\n                        (value ?? 0) <= targetPlaybackPos + 1) &&\n                    playing()\n                ) {\n                    console.debug('playback started');\n                    waitingForPlayback = false;\n                    animationStart = undefined;\n                    startAnimation();\n                }\n            },\n        ),\n    );\n\n    function initVisualization() {\n        if (!visualizationData) {\n            throw new Error('No visualizationData set');\n        }\n\n        setLastDarken(0);\n\n        const ratio = window.devicePixelRatio;\n        canvas.width = window.innerWidth * ratio;\n        canvas.height = VIZ_HEIGHT * ratio;\n\n        const ctx = canvas.getContext('2d')!;\n        ctx.scale(ratio, ratio);\n        ctx.fillStyle = 'white';\n\n        const delta = Math.max(\n            1,\n            (visualizationData.length / window.innerWidth) * 2,\n        );\n\n        const sizedData: number[] = [];\n\n        for (\n            let i = 0;\n            i < visualizationData.length &&\n            sizedData.length < window.innerWidth;\n            i += delta\n        ) {\n            sizedData.push(visualizationData[~~i]!);\n        }\n\n        setData(sizedData);\n\n        const cursor = getProgressBarWidth();\n        ctx.fillStyle = 'white';\n        drawVisualizationPoints(0, data().length);\n        darkenVisualization(cursor);\n        drawVisualization(cursor);\n    }\n\n    function darkenVisualization(cursor: number) {\n        const ctx = canvas.getContext('2d')!;\n        const lastDarkenValue = lastDarken();\n\n        const points = data();\n        const darken = ~~(cursor * points.length);\n\n        if (lastDarkenValue > darken) {\n            ctx.fillStyle = 'white';\n            drawVisualizationPoints(darken + 1, lastDarkenValue);\n        }\n\n        ctx.fillStyle = '#222222';\n        drawVisualizationPoints(Math.max(0, lastDarkenValue - 1), darken + 1);\n        setLastDarken(darken);\n    }\n\n    function clearVisualization(cursor: number) {\n        const ctx = canvas.getContext('2d')!;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        drawVisualization(cursor);\n    }\n\n    function drawVisualization(cursor: number) {\n        const ctx = canvas.getContext('2d')!;\n        const ratio = window.devicePixelRatio;\n        const lastCursorValue = lastCursor();\n\n        if (typeof lastCursorValue === 'number') {\n            const start = lastCursorValue;\n            const end = lastCursorValue;\n            const paintStart = ~~((start * canvas.width) / ratio) - 1;\n            const paintEnd = Math.ceil((end * canvas.width) / ratio) + 3;\n            ctx.clearRect(paintStart, 0, paintEnd - paintStart, canvas.height);\n\n            const points = data();\n            const paintStartI = ~~(start * points.length) - 2;\n            const paintEndI = Math.ceil(end * points.length) + 2;\n\n            darkenVisualization(cursor);\n            const lastDarkenValue = lastDarken();\n            ctx.fillStyle = 'white';\n            drawVisualizationPoints(\n                Math.max(lastDarkenValue + 1, paintStartI),\n                paintEndI,\n            );\n        } else {\n            darkenVisualization(cursor);\n        }\n\n        ctx.fillStyle = 'white';\n        ctx.fillRect(\n            (canvas.width * cursor) / ratio + CURSOR_OFFSET,\n            0,\n            2,\n            VIZ_HEIGHT,\n        );\n        setLastCursor(cursor);\n    }\n\n    function drawVisualizationPoints(start: number, end: number) {\n        if (start >= end) return;\n\n        const ctx = canvas.getContext('2d')!;\n        const points = data();\n\n        ctx.clearRect(\n            start * (BAR_GAP + BAR_WIDTH) - 0.5 + CURSOR_OFFSET,\n            0,\n            (end - start) * (BAR_GAP + BAR_WIDTH) - 0.5,\n            VIZ_HEIGHT,\n        );\n\n        for (let i = start; i < end; i++) {\n            const point = points[i]!;\n            ctx.fillRect(\n                i * (BAR_GAP + BAR_WIDTH) + CURSOR_OFFSET,\n                VIZ_HEIGHT / 2 - point / 2,\n                BAR_WIDTH / 2,\n                point,\n            );\n        }\n    }\n\n    async function loadVisualizationData(track: Track): Promise<void> {\n        const max = window.innerWidth / (BAR_GAP + BAR_WIDTH);\n        const data: number[] = await api.getTrackVisualization(\n            track,\n            track.type,\n            max,\n        );\n        data.forEach((x, i) => {\n            data[i] = Math.max(3, Math.round((x / 255) * VIZ_HEIGHT));\n        });\n        visualizationData = data;\n    }\n\n    createEffect(\n        on(\n            () => playerState.currentTrack,\n            async (track, prev) => {\n                if (prev && track && trackId(prev) === trackId(track)) return;\n                visualizationData = undefined;\n                setData([]);\n                const cursor = getProgressBarWidth();\n                clearVisualization(cursor);\n\n                waitingForPlayback = true;\n                targetPlaybackPos = 0;\n\n                if (track) {\n                    await loadVisualizationData(track);\n                    initVisualization();\n                }\n            },\n        ),\n    );\n\n    createEffect(\n        on(\n            () => currentTrackLength(),\n            () => {\n                setSeekPosition(eventToSeekPosition(progressBarVisualizer!));\n                updateVisualizationBarOpacity();\n            },\n        ),\n    );\n\n    createEffect(\n        on(\n            () => playing(),\n            (playing) => {\n                if (!playing) {\n                    waitingForPlayback = true;\n                }\n                if (dragging()) {\n                    setApplyDrag(false);\n                    progressBar?.classList.remove('no-transition');\n                }\n            },\n        ),\n    );\n\n    let nextTrackListener: () => void;\n    let previousTrackListener: () => void;\n\n    onCleanup(() => {\n        offNextTrack(nextTrackListener);\n        offPreviousTrack(previousTrackListener);\n    });\n\n    const [backToNowPlayingPosition, setBackToNowPlayingPosition] =\n        createSignal(BackToNowPlayingPosition.none);\n\n    let backToNowPlayingTopTimeout: NodeJS.Timeout;\n    let backToNowPlayingBottomTimeout: NodeJS.Timeout;\n    const scrollListener = () => {\n        if (!getCurrentTrack()) return;\n\n        if (\n            getCurrentTrack()!.getBoundingClientRect().top >\n            playlistSlideout!.offsetHeight\n        ) {\n            clearTimeout(backToNowPlayingBottomTimeout);\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.bottom);\n            backToNowPlayingTopRef!.style.opacity = '0';\n            backToNowPlayingBottomRef!.style.display = 'block';\n            setTimeout(() => {\n                backToNowPlayingBottomRef!.style.opacity = '1';\n            }, 0);\n        } else if (getCurrentTrack()!.getBoundingClientRect().bottom < 0) {\n            clearTimeout(backToNowPlayingTopTimeout);\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.top);\n            backToNowPlayingBottomRef!.style.opacity = '0';\n            backToNowPlayingTopRef!.style.display = 'block';\n            setTimeout(() => {\n                backToNowPlayingTopRef!.style.opacity = '1';\n            }, 0);\n        } else {\n            backToNowPlayingTopRef!.style.opacity = '0';\n            backToNowPlayingBottomRef!.style.opacity = '0';\n            if (backToNowPlayingPosition() === BackToNowPlayingPosition.top) {\n                backToNowPlayingTopTimeout = setTimeout(() => {\n                    backToNowPlayingTopRef!.style.display = 'none';\n                }, 300);\n            } else if (\n                backToNowPlayingPosition() === BackToNowPlayingPosition.bottom\n            ) {\n                backToNowPlayingBottomTimeout = setTimeout(() => {\n                    backToNowPlayingBottomRef!.style.display = 'none';\n                }, 300);\n            }\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.none);\n        }\n    };\n\n    onMount(() => {\n        if (isServer) return;\n        playlistSlideoutContentRef?.addEventListener('scroll', scrollListener);\n\n        scrollListener();\n    });\n\n    onCleanup(() => {\n        if (isServer) return;\n        playlistSlideoutContentRef?.removeEventListener(\n            'scroll',\n            scrollListener,\n        );\n    });\n\n    function getCurrentTrack(): Element | null {\n        return (\n            playlistSlideout?.querySelector('.playlist-tracks-track.current') ??\n            null\n        );\n    }\n\n    let animationStart: number | undefined;\n\n    function progressAnimationFrame(ts: number): void {\n        if (!animationStart) animationStart = ts;\n\n        const elapsed = ts - animationStart;\n\n        const duration = getTrackDuration();\n\n        if (\n            typeof currentSeek() !== 'undefined' &&\n            typeof duration !== 'undefined'\n        ) {\n            const offset = (elapsed / 1000) * (1 / duration);\n\n            updateVisualizationBarOpacity(offset);\n        }\n\n        if (!playing() || waitingForPlayback) {\n            animationStart = undefined;\n            console.debug('Stopping animation');\n\n            return;\n        }\n\n        window.requestAnimationFrame(progressAnimationFrame);\n    }\n\n    function startAnimation() {\n        window.requestAnimationFrame((ts) => {\n            animationStart = ts;\n            window.requestAnimationFrame(progressAnimationFrame);\n        });\n    }\n\n    function updateVisualizationBarOpacity(offset: number = 0) {\n        if (waitingForPlayback) {\n            return;\n        }\n\n        const cursor = getProgressBarWidth() + offset;\n        drawVisualization(cursor);\n    }\n\n    return (\n        <>\n            <div ref={containerRef!} class=\"visualization\">\n                <div class=\"visualization-media-controls-seeker-bar\">\n                    <div\n                        ref={progressBarVisualizer!}\n                        class=\"visualization-media-controls-seeker-bar-progress-trigger visualization-media-controls-seeker-bar-visualizer\"\n                        style={{\n                            top: `-${Math.round(VIZ_HEIGHT / 2) - 2}px`,\n                            height: `${VIZ_HEIGHT}px`,\n                        }}\n                    >\n                        <canvas\n                            ref={canvas!}\n                            class=\"visualization-canvas\"\n                            width=\"0\"\n                            height={VIZ_HEIGHT}\n                            style={{ height: `${VIZ_HEIGHT}px` }}\n                        ></canvas>\n                    </div>\n                    <div\n                        class=\"visualization-media-controls-seeker-bar-progress-tooltip\"\n                        style={{\n                            left: `max(30px, min(100vw - 40px, ${\n                                (getSeekPosition() / getTrackDuration()) * 100\n                            }%))`,\n                            display:\n                                applyDrag() && dragging() ? 'block' : undefined,\n                        }}\n                    >\n                        {toTime(Math.round(getSeekPosition()))}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","import {\n    Show,\n    createComputed,\n    createEffect,\n    createSignal,\n    on,\n    onCleanup,\n    onMount,\n} from 'solid-js';\nimport './Player.css';\nimport {\n    currentSeek,\n    currentTrackLength,\n    nextTrack,\n    offNextTrack,\n    offPreviousTrack,\n    onNextTrack,\n    onPreviousTrack,\n    pause,\n    play,\n    playing as playerPlaying,\n    playerState,\n    previousTrack,\n} from '~/services/player';\nimport { toTime } from '~/services/formatting';\nimport { isServer } from 'solid-js/web';\nimport Album from '../Album';\nimport Playlist from '../Playlist';\nimport {\n    showAudioZones,\n    showPlaybackQuality,\n    showPlaybackSessions,\n} from '~/services/app';\nimport Volume from '../Volume';\nimport { albumRoute } from '../Album/Album';\nimport { artistRoute } from '../Artist/Artist';\nimport { clientSignal } from '~/services/util';\nimport Visualization from '../Visualization';\n\nfunction getTrackDuration() {\n    return playerState.currentTrack?.duration ?? currentTrackLength();\n}\n\nlet playlistSlideoutTimeout: NodeJS.Timeout | undefined;\n\nenum BackToNowPlayingPosition {\n    top = 'TOP',\n    bottom = 'BOTTOM',\n    none = 'NONE',\n}\n\nexport default function player() {\n    let playlistSlideout: HTMLDivElement | undefined;\n    let playlistSlideoutContentRef: HTMLDivElement | undefined;\n    let backToNowPlayingTopRef: HTMLDivElement | undefined;\n    let backToNowPlayingBottomRef: HTMLDivElement | undefined;\n    let playerRef: HTMLDivElement | undefined;\n    const [showingPlaylist, setShowingPlaylist] = createSignal(false);\n    const [playing, setPlaying] = createSignal(playerPlaying());\n    const [showTrackOptionsMobile, setShowTrackOptionsMobile] =\n        createSignal(false);\n\n    const [$showAudioZones] = clientSignal(showAudioZones);\n    const [$showPlaybackSessions] = clientSignal(showPlaybackSessions);\n    const [$showPlaybackQuality] = clientSignal(showPlaybackQuality);\n\n    createComputed(() => {\n        setPlaying(playerState.currentPlaybackSession?.playing ?? false);\n    });\n\n    function closePlaylist() {\n        if (!showingPlaylist()) return;\n\n        setShowingPlaylist(false);\n        playlistSlideoutTimeout = setTimeout(() => {\n            playlistSlideout!.style.display = 'none';\n            playlistSlideoutTimeout = undefined;\n        }, 200);\n    }\n\n    function openPlaylist() {\n        if (showingPlaylist()) return;\n\n        if (playlistSlideoutTimeout) {\n            clearTimeout(playlistSlideoutTimeout);\n        }\n        playlistSlideout!.style.display = 'block';\n        scrollPlaylistToNowPlaying(true);\n        setTimeout(() => {\n            setShowingPlaylist(true);\n        }, 0);\n    }\n\n    function togglePlaylist() {\n        if (showingPlaylist()) {\n            closePlaylist();\n        } else {\n            openPlaylist();\n        }\n    }\n\n    function toggleShowTrackOptionsMobile() {\n        setShowTrackOptionsMobile(!showTrackOptionsMobile());\n    }\n\n    function toggleShowPlaybackQuality() {\n        showPlaybackQuality.set(!$showPlaybackQuality());\n    }\n\n    function toggleShowAudioZones() {\n        showAudioZones.set(!$showAudioZones());\n    }\n\n    function toggleShowPlaybackSessions() {\n        showPlaybackSessions.set(!$showPlaybackSessions());\n    }\n\n    createEffect(\n        on(\n            () => location.pathname,\n            () => {\n                closePlaylist();\n            },\n        ),\n    );\n\n    const handleClick = (event: MouseEvent) => {\n        if (\n            !playlistSlideout?.contains(event.target as Node) &&\n            !playerRef?.contains(event.target as Node)\n        ) {\n            closePlaylist();\n        }\n    };\n\n    onMount(() => {\n        if (isServer) return;\n        window.addEventListener('click', handleClick);\n    });\n\n    onCleanup(() => {\n        if (isServer) return;\n        window.removeEventListener('click', handleClick);\n    });\n\n    let nextTrackListener: () => void;\n    let previousTrackListener: () => void;\n\n    onMount(() => {\n        onNextTrack(\n            (nextTrackListener = () => {\n                if (!showingPlaylist()) return;\n                scrollPlaylistToNowPlaying();\n            }),\n        );\n        onPreviousTrack(\n            (previousTrackListener = () => {\n                if (!showingPlaylist()) return;\n                scrollPlaylistToNowPlaying();\n            }),\n        );\n    });\n\n    onCleanup(() => {\n        offNextTrack(nextTrackListener);\n        offPreviousTrack(previousTrackListener);\n    });\n\n    const [backToNowPlayingPosition, setBackToNowPlayingPosition] =\n        createSignal(BackToNowPlayingPosition.none);\n\n    let backToNowPlayingTopTimeout: NodeJS.Timeout;\n    let backToNowPlayingBottomTimeout: NodeJS.Timeout;\n    const scrollListener = () => {\n        if (!getCurrentTrack()) return;\n\n        if (\n            getCurrentTrack()!.getBoundingClientRect().top >\n            playlistSlideout!.offsetHeight\n        ) {\n            clearTimeout(backToNowPlayingBottomTimeout);\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.bottom);\n            backToNowPlayingTopRef!.style.opacity = '0';\n            backToNowPlayingBottomRef!.style.display = 'block';\n            setTimeout(() => {\n                backToNowPlayingBottomRef!.style.opacity = '1';\n            }, 0);\n        } else if (getCurrentTrack()!.getBoundingClientRect().bottom < 0) {\n            clearTimeout(backToNowPlayingTopTimeout);\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.top);\n            backToNowPlayingBottomRef!.style.opacity = '0';\n            backToNowPlayingTopRef!.style.display = 'block';\n            setTimeout(() => {\n                backToNowPlayingTopRef!.style.opacity = '1';\n            }, 0);\n        } else {\n            backToNowPlayingTopRef!.style.opacity = '0';\n            backToNowPlayingBottomRef!.style.opacity = '0';\n            if (backToNowPlayingPosition() === BackToNowPlayingPosition.top) {\n                backToNowPlayingTopTimeout = setTimeout(() => {\n                    backToNowPlayingTopRef!.style.display = 'none';\n                }, 300);\n            } else if (\n                backToNowPlayingPosition() === BackToNowPlayingPosition.bottom\n            ) {\n                backToNowPlayingBottomTimeout = setTimeout(() => {\n                    backToNowPlayingBottomRef!.style.display = 'none';\n                }, 300);\n            }\n            setBackToNowPlayingPosition(BackToNowPlayingPosition.none);\n        }\n    };\n\n    onMount(() => {\n        if (isServer) return;\n        playlistSlideoutContentRef?.addEventListener('scroll', scrollListener);\n\n        scrollListener();\n    });\n\n    onCleanup(() => {\n        if (isServer) return;\n        playlistSlideoutContentRef?.removeEventListener(\n            'scroll',\n            scrollListener,\n        );\n    });\n\n    function getPlayingFrom(): Element | null {\n        return (\n            playlistSlideout?.querySelector('.playlist-tracks-playing-from') ??\n            null\n        );\n    }\n\n    function getCurrentTrack(): Element | null {\n        return (\n            playlistSlideout?.querySelector('.playlist-tracks-track.current') ??\n            null\n        );\n    }\n\n    function scrollPlaylistToNowPlaying(instant = false) {\n        getPlayingFrom()?.scrollIntoView({\n            behavior: instant ? 'instant' : 'smooth',\n        });\n    }\n\n    return (\n        <>\n            <div ref={playerRef!} class=\"player\">\n                <Visualization></Visualization>\n                <div class=\"player-controls\">\n                    <div class=\"player-now-playing\">\n                        <div class=\"player-album-details\">\n                            <Show when={playerState.currentTrack}>\n                                {(currentTrack) => (\n                                    <>\n                                        <div class=\"player-album-details-icon\">\n                                            <Album\n                                                album={currentTrack()}\n                                                size={70}\n                                                artist={false}\n                                                title={false}\n                                            />\n                                        </div>\n                                        <div class=\"player-now-playing-details\">\n                                            <div class=\"player-now-playing-details-title\">\n                                                <a\n                                                    href={albumRoute(\n                                                        currentTrack(),\n                                                    )}\n                                                    title={currentTrack().title}\n                                                >\n                                                    {currentTrack().title}\n                                                </a>\n                                            </div>\n                                            <div class=\"player-now-playing-details-artist\">\n                                                <a\n                                                    href={artistRoute(\n                                                        currentTrack(),\n                                                    )}\n                                                    title={\n                                                        currentTrack().artist\n                                                    }\n                                                >\n                                                    {currentTrack().artist}\n                                                </a>\n                                            </div>\n                                            <div class=\"player-now-playing-details-album\">\n                                                Playing from:{' '}\n                                                <a\n                                                    href={albumRoute(\n                                                        currentTrack(),\n                                                    )}\n                                                    title={currentTrack().album}\n                                                >\n                                                    {currentTrack().album}\n                                                </a>\n                                            </div>\n                                        </div>\n                                    </>\n                                )}\n                            </Show>\n                        </div>\n                    </div>\n                    <div class=\"player-media-controls\">\n                        <div class=\"player-media-controls-track\">\n                            <button\n                                class=\"media-button button\"\n                                onClick={() => previousTrack()}\n                            >\n                                <img\n                                    class=\"previous-track-button\"\n                                    src=\"/img/next-button-white.svg\"\n                                    alt=\"Previous Track\"\n                                />\n                            </button>\n                            <button\n                                class=\"media-button button\"\n                                onClick={() => pause()}\n                                style={{\n                                    display: playing() ? 'initial' : 'none',\n                                }}\n                            >\n                                <img\n                                    class=\"pause-button\"\n                                    src=\"/img/pause-button-white.svg\"\n                                    alt=\"Pause\"\n                                />\n                            </button>\n                            <button\n                                class=\"media-button button\"\n                                onClick={() => play()}\n                                style={{\n                                    display: !playing() ? 'initial' : 'none',\n                                }}\n                            >\n                                <img\n                                    class=\"play-button\"\n                                    src=\"/img/play-button-white.svg\"\n                                    alt=\"Play\"\n                                />\n                            </button>\n                            <button\n                                class=\"media-button button\"\n                                onClick={() => nextTrack()}\n                            >\n                                <img\n                                    class=\"next-track-button\"\n                                    src=\"/img/next-button-white.svg\"\n                                    alt=\"Next Track\"\n                                />\n                            </button>\n                            <img\n                                class=\"show-playback-quality-icon\"\n                                src=\"/img/more-options-white.svg\"\n                                alt=\"Show Playback Quality\"\n                                onClick={() => toggleShowPlaybackQuality()}\n                            />\n                        </div>\n                        <div class=\"player-media-controls-seeker\">\n                            <span class=\"player-media-controls-seeker-current-time\">\n                                {toTime(currentSeek() ?? 0)}\n                            </span>\n                            //\n                            <span class=\"player-media-controls-seeker-total-time\">\n                                {toTime(getTrackDuration())}\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"player-track-options\">\n                        <div class=\"player-track-options-buttons\">\n                            <Volume />\n                            <img\n                                class=\"show-audio-zones-icon\"\n                                src=\"/img/speaker-white.svg\"\n                                alt=\"Configure Audio Outputs\"\n                                onClick={() => toggleShowAudioZones()}\n                            />\n                            <img\n                                class=\"show-playback-sessions-icon\"\n                                src=\"/img/speaker-white.svg\"\n                                alt=\"Show Playback Sessions\"\n                                onClick={() => toggleShowPlaybackSessions()}\n                            />\n                            <img\n                                class=\"show-playlist-icon\"\n                                src=\"/img/playlist-white.svg\"\n                                alt=\"Show Playlist\"\n                                onClick={() => togglePlaylist()}\n                            />\n                        </div>\n                        <div class=\"player-track-options-mobile\">\n                            <img\n                                class=\"mobile-playback-options\"\n                                src=\"/img/more-options-white.svg\"\n                                alt=\"Show Playback Options\"\n                                onClick={() => toggleShowTrackOptionsMobile()}\n                            />\n                            <img\n                                class=\"show-playlist-icon\"\n                                src=\"/img/playlist-white.svg\"\n                                alt=\"Show Playlist\"\n                                onClick={() => togglePlaylist()}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class={`player-track-options-mobile-buttons${\n                        showTrackOptionsMobile() ? ' visible' : ' hidden'\n                    }`}\n                >\n                    <Volume />\n                    <img\n                        class=\"show-audio-zones-icon\"\n                        src=\"/img/speaker-white.svg\"\n                        alt=\"Configure Audio Outputs\"\n                        onClick={() => toggleShowAudioZones()}\n                    />\n                    <img\n                        class=\"show-playback-sessions-icon\"\n                        src=\"/img/speaker-white.svg\"\n                        alt=\"Show Playback Sessions\"\n                        onClick={() => toggleShowPlaybackSessions()}\n                    />\n                    <img\n                        class=\"show-playback-quality-icon\"\n                        src=\"/img/more-options-white.svg\"\n                        alt=\"Show Playback Quality\"\n                        onClick={() => toggleShowPlaybackQuality()}\n                    />\n                </div>\n                <div\n                    class=\"playlist-slideout\"\n                    ref={playlistSlideout!}\n                    style={{\n                        transform: `translateX(${showingPlaylist() ? 0 : 100}%)`,\n                    }}\n                >\n                    <div\n                        ref={playlistSlideoutContentRef!}\n                        class=\"playlist-slideout-content\"\n                    >\n                        <Playlist />\n                    </div>\n                    <div\n                        ref={backToNowPlayingTopRef!}\n                        class=\"playlist-slideout-back-to-now-playing-top\"\n                        onClick={() => scrollPlaylistToNowPlaying()}\n                    >\n                        Back to now playing\n                    </div>\n                    <div\n                        ref={backToNowPlayingBottomRef!}\n                        class=\"playlist-slideout-back-to-now-playing-bottom\"\n                        onClick={() => scrollPlaylistToNowPlaying()}\n                    >\n                        Back to now playing\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n"],"names":["playlist","setPlaylist","createSignal","currentlyPlayingIndex","setCurrentlyPlayingIndex","updateCurrentlyPlayingIndex","findIndex","trackId","track","playerState","currentTrack","createEffect","on","playerPlaylist","value","_el$","_$getNextElement","_tmpl$","_el$2","firstChild","_el$3","_el$4","nextSibling","_el$5","_co$","_$getNextMarker","_$createComponent","For","each","children","index","_$memo","_el$18","_tmpl$3","_el$19","_el$21","album","_$effect","_$setAttribute","albumId","_tmpl$4","_el$6","_tmpl$2","_el$7","_el$8","_el$9","_el$10","_co$2","_el$11","_el$12","_co$3","_el$13","_el$14","_el$15","_el$16","_el$17","_co$4","$$click","playFromPlaylistPosition","Album","size","route","_$insert","_c$","_tmpl$5","_tmpl$6","title","artist","_c$2","_el$25","_tmpl$7","e","removeTrackFromPlaylist","stopImmediatePropagation","_$runHydrationEvents","_$className","playing","_$delegateEvents","mouseEnterListener","mouseLeaveListener","dragStartListener","dragListener","dragEndListener","hideTimeout","mouseY","eventToSeekPosition","element","pos","getBoundingClientRect","percentage","Math","min","max","top","height","round","volumeRender","volumeContainerRef","volumeSliderInnerRef","showVolume","setShowVolume","inside","setInside","sliderHeight","setSliderHeight","dragging","setDragging","applyDrag","setApplyDrag","saveVolume","isNaN","newVolume","currentPlaybackSession","volume","setVolume","onMount","initiateClose","setTimeout","undefined","_event","clearTimeout","event","button","clientY","preventDefault","addEventListener","onCleanup","removeEventListener","_ref$","_$use","_ref$2","_p$","_v$","_v$2","_v$3","style","setProperty","removeProperty","t","a","VIZ_HEIGHT","BAR_WIDTH","BAR_GAP","CURSOR_OFFSET","visualizationData","mouseX","waitingForPlayback","targetPlaybackPos","getTrackDuration","duration","currentTrackLength","debounce","func","timer","left","width","seekTo","seekPos","target","seek","visibilityChangeListener","resizeListener","onSeekListener","player","canvas","progressBarVisualizer","containerRef","seekPosition","setSeekPosition","currentSeek","setPlaying","playerPlaying","data","setData","lastCursor","setLastCursor","lastDarken","setLastDarken","createComputed","getSeekPosition","getCurrentSeekPosition","getProgressBarWidth","clientX","document","visibilityState","loadVisualizationData","initVisualization","_seek","manual","onSeek","offSeek","animationStart","timeline","currentTime","console","debug","startAnimation","Error","ratio","window","devicePixelRatio","innerWidth","ctx","getContext","scale","fillStyle","delta","length","sizedData","i","push","cursor","drawVisualizationPoints","darkenVisualization","drawVisualization","lastDarkenValue","points","darken","clearVisualization","clearRect","lastCursorValue","start","end","paintStart","paintEnd","ceil","paintStartI","paintEndI","fillRect","point","api","getTrackVisualization","type","forEach","x","prev","updateVisualizationBarOpacity","nextTrackListener","previousTrackListener","offNextTrack","offPreviousTrack","BackToNowPlayingPosition","progressAnimationFrame","ts","elapsed","offset","requestAnimationFrame","_ref$3","toTime","playlistSlideoutTimeout","playlistSlideout","playlistSlideoutContentRef","backToNowPlayingTopRef","backToNowPlayingBottomRef","playerRef","showingPlaylist","setShowingPlaylist","showTrackOptionsMobile","setShowTrackOptionsMobile","$showAudioZones","clientSignal","showAudioZones","$showPlaybackSessions","showPlaybackSessions","$showPlaybackQuality","showPlaybackQuality","closePlaylist","display","openPlaylist","scrollPlaylistToNowPlaying","togglePlaylist","toggleShowTrackOptionsMobile","toggleShowPlaybackQuality","set","toggleShowAudioZones","toggleShowPlaybackSessions","location","pathname","handleClick","contains","onNextTrack","onPreviousTrack","backToNowPlayingPosition","setBackToNowPlayingPosition","backToNowPlayingTopTimeout","backToNowPlayingBottomTimeout","scrollListener","getCurrentTrack","offsetHeight","opacity","bottom","getPlayingFrom","querySelector","instant","scrollIntoView","behavior","_el$36","_el$37","_el$22","_el$20","_el$23","_el$24","_el$26","_el$30","_el$31","_el$27","_el$28","_el$29","_el$32","_el$33","_el$34","_el$35","Visualization","Show","when","_el$38","_el$39","_el$40","_el$41","_el$42","_el$43","_el$44","_el$45","_el$47","_v$5","albumRoute","_v$6","_v$7","artistRoute","_v$8","_v$9","_v$10","o","n","previousTrack","pause","play","nextTrack","Volume","Playlist","_ref$4","_ref$5","_v$4"],"mappings":"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"}