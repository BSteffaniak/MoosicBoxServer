{"version":3,"file":"artists.Dhj29Wh4.js","sources":["../../../src/components/pages/artists/artist-page.tsx","../../../src/components/pages/artists/artists-page.tsx","../../../src/routes/artists.tsx"],"sourcesContent":["import './artist-page.css';\nimport { createEffect, createSignal, For, on, Show } from 'solid-js';\nimport Album from '~/components/Album';\nimport Artist from '~/components/Artist';\nimport { Api, api, type Artist as ApiArtist } from '~/services/api';\nimport { historyBack } from '~/services/util';\n\nexport default function artistPage(props: {\n    artistId?: number;\n    tidalArtistId?: number;\n    qobuzArtistId?: number;\n}) {\n    const [libraryArtist, setLibraryArtist] =\n        createSignal<Api.LibraryArtist | null>();\n    const [libraryAlbums, setLibraryAlbums] = createSignal<\n        Api.LibraryAlbum[] | null\n    >();\n\n    const [tidalArtist, setTidalArtist] = createSignal<Api.TidalArtist>();\n    const [tidalAlbums, setTidalAlbums] = createSignal<Api.TidalAlbum[]>();\n    const [tidalEpsAndSingles, setTidalEpsAndSingles] =\n        createSignal<Api.TidalAlbum[]>();\n    const [tidalCompilations, setTidalCompilations] =\n        createSignal<Api.TidalAlbum[]>();\n\n    const [qobuzArtist, setQobuzArtist] = createSignal<Api.QobuzArtist>();\n    const [qobuzAlbums, setQobuzAlbums] = createSignal<Api.QobuzAlbum[]>();\n    const [qobuzEpsAndSingles, setQobuzEpsAndSingles] =\n        createSignal<Api.QobuzAlbum[]>();\n    const [qobuzCompilations, setQobuzCompilations] =\n        createSignal<Api.QobuzAlbum[]>();\n\n    function getArtist(): ApiArtist | null | undefined {\n        return libraryArtist() ?? tidalArtist() ?? qobuzArtist();\n    }\n\n    async function loadQobuzAlbums(qobuzId: number) {\n        await Promise.all([\n            api.getAllQobuzArtistAlbums(qobuzId, setQobuzAlbums, ['LP']),\n            api.getAllQobuzArtistAlbums(qobuzId, setQobuzEpsAndSingles, [\n                'EPS_AND_SINGLES',\n            ]),\n            api.getAllQobuzArtistAlbums(qobuzId, setQobuzCompilations, [\n                'COMPILATIONS',\n            ]),\n        ]);\n    }\n\n    async function loadTidalAlbums(tidalId: number) {\n        await Promise.all([\n            api.getAllTidalArtistAlbums(tidalId, setTidalAlbums, ['LP']),\n            api.getAllTidalArtistAlbums(tidalId, setTidalEpsAndSingles, [\n                'EPS_AND_SINGLES',\n            ]),\n            api.getAllTidalArtistAlbums(tidalId, setTidalCompilations, [\n                'COMPILATIONS',\n            ]),\n        ]);\n    }\n\n    async function loadLibraryArtist(): Promise<Api.LibraryArtist | undefined> {\n        if (props.artistId) {\n            const artist = await api.getArtist(props.artistId);\n            setLibraryArtist(artist);\n            return artist;\n        } else if (props.tidalArtistId) {\n            const artist = await api.getArtistFromTidalArtistId(\n                props.tidalArtistId,\n            );\n            setLibraryArtist(artist);\n\n            if (artist.qobuzId) {\n                loadQobuzAlbums(artist.qobuzId);\n            }\n\n            return artist;\n        } else if (props.qobuzArtistId) {\n            const artist = await api.getArtistFromQobuzArtistId(\n                props.qobuzArtistId,\n            );\n            setLibraryArtist(artist);\n\n            if (artist.tidalId) {\n                loadTidalAlbums(artist.tidalId);\n            }\n\n            return artist;\n        }\n\n        return undefined;\n    }\n\n    async function loadTidalArtist(\n        tidalArtistId: number,\n    ): Promise<Api.TidalArtist | undefined> {\n        const tidalArtist = await api.getTidalArtist(tidalArtistId);\n        setTidalArtist(tidalArtist);\n        return tidalArtist;\n    }\n\n    async function loadQobuzArtist(\n        qobuzArtistId: number,\n    ): Promise<Api.QobuzArtist | undefined> {\n        const qobuzArtist = await api.getQobuzArtist(qobuzArtistId);\n        setQobuzArtist(qobuzArtist);\n        return qobuzArtist;\n    }\n\n    async function loadArtist() {\n        const promises = [];\n        let loadedArtist = false;\n\n        if (props.artistId) {\n            const artist = await loadLibraryArtist();\n            loadedArtist = true;\n\n            if (artist?.tidalId) {\n                promises.push(loadTidalAlbums(artist.tidalId));\n            }\n            if (artist?.qobuzId) {\n                promises.push(loadQobuzAlbums(artist.qobuzId));\n            }\n        }\n        if (props.tidalArtistId) {\n            promises.push(loadTidalArtist(props.tidalArtistId));\n        }\n        if (props.qobuzArtistId) {\n            promises.push(loadQobuzArtist(props.qobuzArtistId));\n        }\n\n        if (!loadedArtist) {\n            promises.push(loadLibraryArtist());\n        }\n\n        await Promise.all(promises);\n    }\n\n    async function loadLibraryAlbums() {\n        try {\n            if (props.artistId) {\n                const albums = await api.getAllAlbums({\n                    artistId: props.artistId,\n                    sort: 'Release-Date-Desc',\n                });\n                setLibraryAlbums(albums);\n            } else if (props.tidalArtistId) {\n                const libraryAlbum = await api.getAllAlbums({\n                    tidalArtistId: props.tidalArtistId,\n                    sort: 'Release-Date-Desc',\n                });\n                setLibraryAlbums(libraryAlbum);\n            } else if (props.qobuzArtistId) {\n                const libraryAlbum = await api.getAllAlbums({\n                    qobuzArtistId: props.qobuzArtistId,\n                    sort: 'Release-Date-Desc',\n                });\n                setLibraryAlbums(libraryAlbum);\n            }\n        } catch {\n            setLibraryAlbums(null);\n        }\n    }\n\n    async function loadAlbums() {\n        if (props.artistId) {\n            await loadLibraryAlbums();\n        }\n        if (props.tidalArtistId) {\n            await Promise.all([\n                loadLibraryAlbums(),\n                loadTidalAlbums(props.tidalArtistId),\n            ]);\n        }\n        if (props.qobuzArtistId) {\n            await Promise.all([\n                loadLibraryAlbums(),\n                loadQobuzAlbums(props.qobuzArtistId),\n            ]);\n        }\n    }\n\n    createEffect(\n        on(\n            () => props.artistId,\n            (value, prev) => {\n                if (value !== prev) loadPage();\n            },\n        ),\n    );\n\n    createEffect(\n        on(\n            () => props.tidalArtistId,\n            (value, prev) => {\n                if (value !== prev) loadPage();\n            },\n        ),\n    );\n\n    createEffect(\n        on(\n            () => props.qobuzArtistId,\n            (value, prev) => {\n                if (value !== prev) loadPage();\n            },\n        ),\n    );\n\n    async function loadPage() {\n        await Promise.all([loadArtist(), loadAlbums()]);\n    }\n\n    return (\n        <>\n            <div class=\"artist-page-container\">\n                <div class=\"artist-page\">\n                    <div class=\"artist-page-breadcrumbs\">\n                        <a\n                            class=\"back-button\"\n                            href=\"#\"\n                            onClick={() => historyBack()}\n                        >\n                            Back\n                        </a>\n                    </div>\n                    <div class=\"artist-page-header\">\n                        <div class=\"artist-page-artist-info\">\n                            <div class=\"artist-page-artist-info-cover\">\n                                <Show when={getArtist()}>\n                                    {(artist) => (\n                                        <Artist\n                                            artist={artist()}\n                                            route={false}\n                                            size={400}\n                                        />\n                                    )}\n                                </Show>\n                            </div>\n                            <div class=\"artist-page-artist-info-details\">\n                                <h1 class=\"artist-page-artist-info-details-artist-title\">\n                                    {getArtist()?.title}\n                                </h1>\n                            </div>\n                        </div>\n                    </div>\n                    <Show when={(libraryAlbums()?.length ?? 0) > 0}>\n                        <h1 class=\"artist-page-albums-header\">\n                            Albums in Library\n                        </h1>\n                        <div class=\"artist-page-albums\">\n                            <For each={libraryAlbums()}>\n                                {(album) => (\n                                    <Album\n                                        album={album}\n                                        artist={true}\n                                        title={true}\n                                        year={true}\n                                        controls={true}\n                                        versionQualities={true}\n                                        size={200}\n                                    />\n                                )}\n                            </For>\n                        </div>\n                    </Show>\n                    <Show when={(tidalAlbums()?.length ?? 0) > 0}>\n                        <h1 class=\"artist-page-albums-header\">\n                            Albums on Tidal\n                        </h1>\n                        <div class=\"artist-page-albums\">\n                            <For each={tidalAlbums()}>\n                                {(album) => (\n                                    <Album\n                                        album={album}\n                                        artist={true}\n                                        title={true}\n                                        year={true}\n                                        controls={true}\n                                        versionQualities={true}\n                                        size={200}\n                                    />\n                                )}\n                            </For>\n                        </div>\n                    </Show>\n                    <Show when={(tidalEpsAndSingles()?.length ?? 0) > 0}>\n                        <h1 class=\"artist-page-albums-header\">\n                            EPs and Singles on Tidal\n                        </h1>\n                        <div class=\"artist-page-albums\">\n                            <For each={tidalEpsAndSingles()}>\n                                {(album) => (\n                                    <Album\n                                        album={album}\n                                        artist={true}\n                                        title={true}\n                                        year={true}\n                                        controls={true}\n                                        versionQualities={true}\n                                        size={200}\n                                    />\n                                )}\n                            </For>\n                        </div>\n                    </Show>\n                    <Show when={(tidalCompilations()?.length ?? 0) > 0}>\n                        <h1 class=\"artist-page-albums-header\">\n                            Compilations on Tidal\n                        </h1>\n                        <div class=\"artist-page-albums\">\n                            <For each={tidalCompilations()}>\n                                {(album) => (\n                                    <Album\n                                        album={album}\n                                        artist={true}\n                                        title={true}\n                                        year={true}\n                                        controls={true}\n                                        versionQualities={true}\n                                        size={200}\n                                    />\n                                )}\n                            </For>\n                        </div>\n                    </Show>\n                    <Show when={(qobuzAlbums()?.length ?? 0) > 0}>\n                        <h1 class=\"artist-page-albums-header\">\n                            Albums on Qobuz\n                        </h1>\n                        <div class=\"artist-page-albums\">\n                            <For each={qobuzAlbums()}>\n                                {(album) => (\n                                    <Album\n                                        album={album}\n                                        artist={true}\n                                        title={true}\n                                        year={true}\n                                        controls={true}\n                                        versionQualities={true}\n                                        size={200}\n                                    />\n                                )}\n                            </For>\n                        </div>\n                    </Show>\n                    <Show when={(qobuzEpsAndSingles()?.length ?? 0) > 0}>\n                        <h1 class=\"artist-page-albums-header\">\n                            EPs and Singles on Qobuz\n                        </h1>\n                        <div class=\"artist-page-albums\">\n                            <For each={qobuzEpsAndSingles()}>\n                                {(album) => (\n                                    <Album\n                                        album={album}\n                                        artist={true}\n                                        title={true}\n                                        year={true}\n                                        controls={true}\n                                        versionQualities={true}\n                                        size={200}\n                                    />\n                                )}\n                            </For>\n                        </div>\n                    </Show>\n                    <Show when={(qobuzCompilations()?.length ?? 0) > 0}>\n                        <h1 class=\"artist-page-albums-header\">\n                            Compilations on Qobuz\n                        </h1>\n                        <div class=\"artist-page-albums\">\n                            <For each={qobuzCompilations()}>\n                                {(album) => (\n                                    <Album\n                                        album={album}\n                                        artist={true}\n                                        title={true}\n                                        year={true}\n                                        controls={true}\n                                        versionQualities={true}\n                                        size={200}\n                                    />\n                                )}\n                            </For>\n                        </div>\n                    </Show>\n                </div>\n            </div>\n        </>\n    );\n}\n","import './artists-page.css';\nimport {\n    createComputed,\n    createSignal,\n    For,\n    onCleanup,\n    onMount,\n    Show,\n} from 'solid-js';\nimport { isServer } from 'solid-js/web';\nimport { debounce } from '@solid-primitives/scheduled';\nimport { api, Api, once } from '~/services/api';\nimport { currentArtistSearch, setCurrentArtistSearch } from '~/services/app';\nimport Artist from '~/components/Artist';\nimport { QueryParams } from '~/services/util';\n\nlet historyListener: () => void;\n\nexport default function artists() {\n    let backToTopRef: HTMLDivElement;\n    let artistSortControlsRef: HTMLDivElement | undefined;\n    let artistsHeaderContainerRef: HTMLDivElement;\n\n    const [loading, setLoading] = createSignal(false);\n    const [artists, setArtists] = createSignal<Api.LibraryArtist[]>();\n    const [searchFilterValue, setSearchFilterValue] = createSignal<string>();\n    const [currentArtistSort, setCurrentArtistSort] =\n        createSignal<Api.ArtistSort>('Name');\n    const [showArtistSortControls, setShowArtistSortControls] =\n        createSignal(false);\n    const searchParams = new QueryParams(\n        isServer ? {} : window.location.search,\n    );\n\n    createComputed(() => {\n        if (searchParams.has('sort')) {\n            setCurrentArtistSort(searchParams.get('sort') as Api.ArtistSort);\n        }\n    });\n\n    function setSearchParam(name: string, value: string) {\n        searchParams.set(name, value);\n        const newRelativePathQuery = `${window.location.pathname}?${searchParams}`;\n        history.pushState(null, '', newRelativePathQuery);\n\n        if (name === 'sort') {\n            setCurrentArtistSort(value as Api.ArtistSort);\n        }\n    }\n\n    function removeSearchParam(name: string) {\n        searchParams.delete(name);\n        const newRelativePathQuery = `${window.location.pathname}?${searchParams}`;\n        history.pushState(null, '', newRelativePathQuery);\n    }\n\n    function getArtistSources(): Api.AlbumSource[] | undefined {\n        return searchParams.get('sources')?.split(',') as\n            | Api.AlbumSource[]\n            | undefined;\n    }\n\n    function getArtistSort(): Api.ArtistSort | undefined {\n        return searchParams.get('sort') as Api.ArtistSort | undefined;\n    }\n\n    function getSearchFilter(): string | undefined {\n        return searchParams.get('search') as string | undefined;\n    }\n\n    function setArtistSources(sources: Api.AlbumSource[]) {\n        setSearchParam('sources', sources.join(','));\n    }\n\n    function setArtistSort(sort: Api.ArtistSort) {\n        setSearchParam('sort', sort);\n    }\n\n    function setSearchFilter(search: string) {\n        if (search.trim().length === 0) {\n            removeSearchParam('search');\n        } else {\n            setSearchParam('search', search);\n        }\n        setSearchFilterValue(search);\n    }\n\n    async function loadArtists(\n        request: Api.ArtistsRequest | undefined = undefined,\n    ) {\n        const query = searchParams.toString();\n        if (!artists()) {\n            const current = currentArtistSearch();\n            if (current && current.query === query) {\n                setArtists(current.results);\n                return;\n            }\n        }\n        if (request?.sources) setArtistSources(request.sources);\n        if (request?.sort) setArtistSort(request.sort);\n        if (typeof request?.filters?.search === 'string')\n            setSearchFilter(request.filters.search);\n\n        try {\n            setLoading(true);\n            setArtists(\n                await once('artists', (signal) =>\n                    api.getArtists(\n                        {\n                            sources: getArtistSources(),\n                            sort: getArtistSort(),\n                            filters: {\n                                search: getSearchFilter(),\n                            },\n                        },\n                        signal,\n                    ),\n                ),\n            );\n        } catch (e) {\n            console.error('Failed to fetch artists', e);\n            setArtists(undefined);\n        } finally {\n            setLoading(false);\n        }\n\n        const results = artists();\n\n        if (results) {\n            setCurrentArtistSearch({ query, results });\n        }\n    }\n\n    if (!isServer) {\n        if (historyListener) {\n            window.removeEventListener('popstate', historyListener);\n        }\n\n        historyListener = () => {\n            const newSearchParams = new QueryParams(window.location.search);\n\n            let wasChange = false;\n\n            searchParams.forEach((_value, key) => {\n                if (!newSearchParams.has(key)) {\n                    switch (key) {\n                        case 'sources':\n                            wasChange = true;\n                            break;\n                        case 'sort':\n                            wasChange = true;\n                            break;\n                        case 'search':\n                            searchParams.delete(key);\n                            setSearchFilterValue('');\n                            wasChange = true;\n                            break;\n                    }\n                }\n            });\n\n            newSearchParams.forEach((value, key) => {\n                if (searchParams.get(key) !== value) {\n                    searchParams.set(key, value);\n\n                    switch (key) {\n                        case 'sources':\n                            wasChange = true;\n                            break;\n                        case 'sort':\n                            wasChange = true;\n                            break;\n                        case 'search':\n                            setSearchFilterValue(value);\n                            wasChange = true;\n                            break;\n                    }\n                }\n            });\n\n            if (wasChange) {\n                loadArtists();\n            }\n        };\n\n        window.addEventListener('popstate', historyListener);\n    }\n\n    onCleanup(() => {\n        if (historyListener) {\n            window.removeEventListener('popstate', historyListener);\n        }\n    });\n\n    const handleArtistSortClick = (_event: MouseEvent) => {\n        if (!showArtistSortControls()) return;\n        setShowArtistSortControls(false);\n    };\n\n    onMount(() => {\n        if (isServer) return;\n        window.addEventListener('click', handleArtistSortClick);\n    });\n\n    onCleanup(() => {\n        if (isServer) return;\n        window.removeEventListener('click', handleArtistSortClick);\n    });\n\n    function showBackToTop() {\n        if (backToTopRef.style.display === 'block') return;\n        clearTimeout(backToTopTimeout);\n        backToTopRef.style.opacity = '0';\n        backToTopRef.style.display = 'block';\n        backToTopTimeout = setTimeout(() => {\n            backToTopRef.style.opacity = '1';\n        }, 0);\n    }\n\n    function hideBackToTop() {\n        if (backToTopRef.style.opacity === '0') return;\n        clearTimeout(backToTopTimeout);\n        backToTopRef.style.opacity = '0';\n        backToTopTimeout = setTimeout(() => {\n            backToTopRef.style.display = 'none';\n        }, 300);\n    }\n\n    let backToTopTimeout: NodeJS.Timeout;\n    const scrollListener = () => {\n        if (\n            (document.querySelector('main')?.scrollTop ?? 0) >\n            artistsHeaderContainerRef.getBoundingClientRect().bottom\n        ) {\n            showBackToTop();\n        } else {\n            hideBackToTop();\n        }\n    };\n\n    onMount(() => {\n        if (isServer) return;\n        document\n            .querySelector('main')\n            ?.addEventListener('scroll', scrollListener);\n\n        scrollListener();\n    });\n\n    onCleanup(() => {\n        if (isServer) return;\n        document\n            .querySelector('main')\n            ?.removeEventListener('scroll', scrollListener);\n    });\n\n    onMount(async () => {\n        if (isServer) return;\n        setSearchFilterValue(getSearchFilter() ?? '');\n        await loadArtists();\n    });\n\n    return (\n        <>\n            <div class=\"artists-back-to-top-container main-content-back-to-top\">\n                <div\n                    onClick={() =>\n                        document.querySelector('main')?.scroll({\n                            top: 0,\n                            behavior: 'smooth',\n                        })\n                    }\n                    class=\"artists-back-to-top\"\n                    ref={backToTopRef!}\n                >\n                    <div class=\"artists-back-to-top-content\">\n                        <img\n                            class=\"artists-back-to-top-chevron\"\n                            src=\"/img/chevron-up-white.svg\"\n                        />\n                        Back to top\n                        <img\n                            class=\"artists-back-to-top-chevron\"\n                            src=\"/img/chevron-up-white.svg\"\n                        />\n                    </div>\n                </div>\n            </div>\n            <header\n                class=\"artists-header-container\"\n                ref={artistsHeaderContainerRef!}\n            >\n                <div class=\"artists-header-backdrop\"></div>\n                <div class=\"artists-header-text-container\">\n                    <h1 class=\"artists-header-text\">\n                        Artists{' '}\n                        <img\n                            class=\"artists-header-sort-icon\"\n                            src=\"/img/more-options-white.svg\"\n                            onClick={(event) => {\n                                setShowArtistSortControls(\n                                    !showArtistSortControls(),\n                                );\n                                event.stopPropagation();\n                            }}\n                        />\n                    </h1>\n                    {showArtistSortControls() && (\n                        <div\n                            class=\"artists-sort-controls\"\n                            ref={artistSortControlsRef!}\n                        >\n                            <div\n                                onClick={() =>\n                                    loadArtists({\n                                        sort:\n                                            getArtistSort() === 'Name-Desc'\n                                                ? 'Name'\n                                                : 'Name-Desc',\n                                    })\n                                }\n                            >\n                                Artist Name\n                                {currentArtistSort() === 'Name' && (\n                                    <img\n                                        class=\"sort-chevron-icon\"\n                                        src=\"/img/chevron-up-white.svg\"\n                                    />\n                                )}\n                                {currentArtistSort() === 'Name-Desc' && (\n                                    <img\n                                        class=\"sort-chevron-icon\"\n                                        src=\"/img/chevron-down-white.svg\"\n                                    />\n                                )}\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <input\n                    class=\"filter-artists\"\n                    type=\"text\"\n                    placeholder=\"Filter...\"\n                    value={searchFilterValue() ?? ''}\n                    onInput={debounce(async (e) => {\n                        await loadArtists({\n                            filters: {\n                                search: e.target.value ?? undefined,\n                            },\n                        });\n                        document.querySelector('main')?.scroll({\n                            top: 0,\n                            behavior: 'instant',\n                        });\n                    }, 200)}\n                />\n            </header>\n            <div class=\"artists-page\">\n                <Show when={artists()}>\n                    {(artists) => (\n                        <div\n                            class={`artists-container${\n                                loading() ? ' loading' : ' loaded'\n                            }`}\n                        >\n                            <p class=\"artists-header-artist-count\">\n                                Showing {artists()?.length} artist\n                                {artists()?.length === 1 ? '' : 's'}\n                            </p>\n                            <div class=\"artists\">\n                                <For each={artists()}>\n                                    {(artist) => (\n                                        <Artist\n                                            artist={artist}\n                                            size={200}\n                                            title={true}\n                                        />\n                                    )}\n                                </For>\n                            </div>\n                        </div>\n                    )}\n                </Show>\n            </div>\n        </>\n    );\n}\n","import ArtistPage from '~/components/pages/artists/artist-page';\nimport ArtistsPage from '~/components/pages/artists/artists-page';\nimport { getQueryParam } from '~/services/util';\n\nexport default function artistPage() {\n    const artistId = getQueryParam('artistId');\n    const tidalArtistId = getQueryParam('tidalArtistId');\n    const qobuzArtistId = getQueryParam('qobuzArtistId');\n\n    return (\n        <>\n            {artistId ? (\n                <ArtistPage artistId={parseInt(artistId!)} />\n            ) : tidalArtistId ? (\n                <ArtistPage tidalArtistId={parseInt(tidalArtistId!)} />\n            ) : qobuzArtistId ? (\n                <ArtistPage qobuzArtistId={parseInt(qobuzArtistId!)} />\n            ) : (\n                <ArtistsPage />\n            )}\n        </>\n    );\n}\n"],"names":["artistPage","props","libraryArtist","setLibraryArtist","createSignal","libraryAlbums","setLibraryAlbums","tidalArtist","setTidalArtist","tidalAlbums","setTidalAlbums","tidalEpsAndSingles","setTidalEpsAndSingles","tidalCompilations","setTidalCompilations","qobuzArtist","setQobuzArtist","qobuzAlbums","setQobuzAlbums","qobuzEpsAndSingles","setQobuzEpsAndSingles","qobuzCompilations","setQobuzCompilations","getArtist","loadQobuzAlbums","qobuzId","Promise","all","api","getAllQobuzArtistAlbums","loadTidalAlbums","tidalId","getAllTidalArtistAlbums","loadLibraryArtist","artistId","artist","tidalArtistId","getArtistFromTidalArtistId","qobuzArtistId","getArtistFromQobuzArtistId","loadTidalArtist","getTidalArtist","loadQobuzArtist","getQobuzArtist","loadArtist","promises","loadedArtist","push","loadLibraryAlbums","albums","getAllAlbums","sort","libraryAlbum","loadAlbums","createEffect","on","value","prev","loadPage","_el$","_$getNextElement","_tmpl$9","_el$2","firstChild","_el$3","_el$4","_el$5","nextSibling","_el$6","_el$7","_el$8","_el$9","_el$24","_el$25","_co$","_$getNextMarker","_el$26","_el$27","_co$2","_el$28","_el$29","_co$3","_el$30","_el$31","_co$4","_el$32","_el$33","_co$5","_el$34","_el$35","_co$6","_el$36","_el$37","_co$7","$$click","historyBack","_$createComponent","Show","when","children","Artist","route","size","_$insert","title","length","_tmpl$","_el$11","_tmpl$2","For","each","Album","album","year","controls","versionQualities","_tmpl$3","_el$13","_tmpl$4","_el$15","_tmpl$5","_el$17","_tmpl$6","_el$19","_tmpl$7","_el$21","_tmpl$8","_el$23","_$runHydrationEvents","_$delegateEvents","historyListener","artists","backToTopRef","artistSortControlsRef","artistsHeaderContainerRef","loading","setLoading","setArtists","searchFilterValue","setSearchFilterValue","currentArtistSort","setCurrentArtistSort","showArtistSortControls","setShowArtistSortControls","searchParams","QueryParams","window","location","search","createComputed","has","get","setSearchParam","name","set","newRelativePathQuery","pathname","pushState","removeSearchParam","delete","getArtistSources","split","getArtistSort","getSearchFilter","setArtistSources","sources","join","setArtistSort","setSearchFilter","trim","loadArtists","request","undefined","query","toString","current","currentArtistSearch","results","filters","once","signal","getArtists","e","error","setCurrentArtistSearch","removeEventListener","newSearchParams","wasChange","forEach","_value","key","addEventListener","onCleanup","handleArtistSortClick","_event","onMount","showBackToTop","style","display","clearTimeout","backToTopTimeout","opacity","setTimeout","hideBackToTop","scrollListener","document","querySelector","scrollTop","getBoundingClientRect","bottom","_ref$","_$use","scroll","top","behavior","_el$10","_el$12","_ref$2","event","stopPropagation","_c$","_$memo","_el$14","_el$16","_el$18","_el$20","_ref$3","_c$2","_c$3","_$addEventListener","debounce","target","_$effect","_$setProperty","_$className","getQueryParam","ArtistPage","parseInt","ArtistsPage"],"mappings":"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"}