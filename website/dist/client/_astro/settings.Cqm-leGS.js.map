{"version":3,"file":"settings.Cqm-leGS.js","sources":["../../../src/routes/settings.tsx"],"sourcesContent":["import { createSignal, For, Show } from 'solid-js';\nimport './settings.css';\nimport {\n    api,\n    connection,\n    type Connection,\n    setConnection as apiSetConnection,\n    getNewConnectionId,\n    connections,\n    setActiveConnection,\n} from '~/services/api';\nimport { clientSignal } from '~/services/util';\nimport { connectionName } from '~/services/ws';\n\nexport default function settingsPage() {\n    const [$connections, _setConnections] = clientSignal(connections);\n    const [$connection, setConnection] = clientSignal(connection);\n    const [$connectionName, setConnectionName] = clientSignal(connectionName);\n\n    const [status, setStatus] = createSignal<string>();\n    const [loading, setLoading] = createSignal(false);\n\n    let clientIdInput: HTMLInputElement;\n    let apiUrlInput: HTMLInputElement;\n    let nameInput: HTMLInputElement;\n\n    function newConnection() {\n        const id = getNewConnectionId();\n        setConnection({\n            id,\n            name: 'New connection',\n            apiUrl: '',\n            clientId: '',\n            token: '',\n            staticToken: '',\n        });\n        apiSetConnection(id, { name: 'New connection' });\n    }\n\n    function saveConnection(values: Partial<Connection>) {\n        const con = $connection();\n        const id = con?.id ?? getNewConnectionId();\n        setConnection({\n            id,\n            name: values.name ?? con?.name ?? '',\n            apiUrl: values.apiUrl ?? con?.apiUrl ?? '',\n            clientId: values.clientId ?? con?.clientId ?? '',\n            token: values.token ?? con?.token ?? '',\n            staticToken: values.staticToken ?? con?.staticToken ?? '',\n        });\n        apiSetConnection(id, values);\n    }\n\n    function saveName() {\n        saveConnection({\n            name: nameInput.value,\n        });\n    }\n\n    function saveApiUrl() {\n        const con = $connection();\n        saveConnection({\n            apiUrl: apiUrlInput.value,\n            staticToken: con?.staticToken ?? '',\n        });\n    }\n\n    let connectionNameInput: HTMLInputElement;\n\n    function saveConnectionName() {\n        setConnectionName(connectionNameInput.value);\n    }\n\n    function saveClientId() {\n        saveConnection({\n            clientId: clientIdInput.value,\n        });\n    }\n\n    let tokenInput: HTMLInputElement;\n\n    function saveToken() {\n        saveConnection({\n            token: tokenInput.value,\n        });\n    }\n\n    let staticTokenInput: HTMLInputElement;\n\n    function saveStaticToken() {\n        saveConnection({\n            staticToken: staticTokenInput.value,\n        });\n    }\n\n    let magicTokenInput: HTMLInputElement;\n\n    async function saveMagicToken() {\n        const resp = await api.magicToken(magicTokenInput.value);\n        setLoading(false);\n\n        if (resp) {\n            const con = $connection();\n            saveConnection({\n                name: con?.name ?? 'New connection',\n                apiUrl: con?.apiUrl ?? '',\n                clientId: resp.clientId,\n                token: resp.accessToken,\n            });\n            magicTokenInput.value = '';\n            setStatus('Successfully set values');\n        } else {\n            setStatus('Failed to authenticate with magic token');\n        }\n    }\n\n    return (\n        <div>\n            <section>\n                <ul>\n                    <li>\n                        Name:{' '}\n                        <input\n                            ref={connectionNameInput!}\n                            type=\"text\"\n                            value={$connectionName()}\n                            onKeyUp={(e) =>\n                                e.key === 'Enter' && saveConnectionName()\n                            }\n                        />\n                        <button onClick={saveConnectionName}>save</button>\n                    </li>\n                </ul>\n\n                <Show when={$connections()}>\n                    {(connections) => (\n                        <select\n                            name=\"connections\"\n                            id=\"connections-dropdown\"\n                            onChange={(e) => {\n                                setActiveConnection(\n                                    parseInt(e.currentTarget.value),\n                                );\n                            }}\n                        >\n                            <For each={connections()}>\n                                {(con) => (\n                                    <option\n                                        value={con.id}\n                                        selected={con.id === $connection()?.id}\n                                    >\n                                        {con.name}\n                                    </option>\n                                )}\n                            </For>\n                        </select>\n                    )}\n                </Show>\n\n                <button type=\"button\" onClick={newConnection}>\n                    New connection\n                </button>\n\n                <ul>\n                    <li>\n                        Name:{' '}\n                        <input\n                            ref={nameInput!}\n                            type=\"text\"\n                            value={$connection()?.name ?? 'New connection'}\n                            onKeyUp={(e) => e.key === 'Enter' && saveName()}\n                        />\n                        <button onClick={saveName}>save</button>\n                    </li>\n                    <li>\n                        API Url:{' '}\n                        <input\n                            ref={apiUrlInput!}\n                            type=\"text\"\n                            value={$connection()?.apiUrl ?? ''}\n                            onKeyUp={(e) => e.key === 'Enter' && saveApiUrl()}\n                        />\n                        <button onClick={saveApiUrl}>save</button>\n                    </li>\n                    <li>\n                        Client ID:{' '}\n                        <input\n                            ref={clientIdInput!}\n                            type=\"text\"\n                            value={$connection()?.clientId ?? ''}\n                            onKeyUp={(e) => e.key === 'Enter' && saveClientId()}\n                        />\n                        <button onClick={saveClientId}>save</button>\n                    </li>\n                    <li>\n                        Token:{' '}\n                        <input\n                            ref={tokenInput!}\n                            type=\"text\"\n                            value={$connection()?.token ?? ''}\n                            onKeyUp={(e) => e.key === 'Enter' && saveToken()}\n                        />\n                        <button onClick={saveToken}>save</button>\n                    </li>\n                    <li>\n                        Static Token:{' '}\n                        <input\n                            ref={staticTokenInput!}\n                            type=\"text\"\n                            value={$connection()?.staticToken ?? ''}\n                            onKeyUp={(e) =>\n                                e.key === 'Enter' && saveStaticToken()\n                            }\n                        />\n                        <button onClick={saveStaticToken}>save</button>\n                    </li>\n                    <li>\n                        Magic Token:{' '}\n                        <input\n                            ref={magicTokenInput!}\n                            type=\"text\"\n                            onKeyUp={(e) =>\n                                e.key === 'Enter' && saveMagicToken()\n                            }\n                        />\n                        <button onClick={saveMagicToken}>save</button>\n                    </li>\n                </ul>\n                {status() && status()}\n                {loading() && 'loading...'}\n            </section>\n            <hr />\n            <section>\n                <button\n                    onClick={async () => api.startScan(['LOCAL'])}\n                    type=\"button\"\n                    class=\"remove-button-styles moosicbox-button\"\n                >\n                    Scan\n                </button>\n            </section>\n        </div>\n    );\n}\n"],"names":["settingsPage","$connections","_setConnections","clientSignal","connections","$connection","setConnection","connection","$connectionName","setConnectionName","connectionName","status","setStatus","createSignal","loading","setLoading","clientIdInput","apiUrlInput","nameInput","newConnection","id","getNewConnectionId","name","apiUrl","clientId","token","staticToken","apiSetConnection","saveConnection","values","con","saveName","value","saveApiUrl","connectionNameInput","saveConnectionName","saveClientId","tokenInput","saveToken","staticTokenInput","saveStaticToken","magicTokenInput","saveMagicToken","resp","api","magicToken","accessToken","_el$","_$getNextElement","_tmpl$","_el$2","firstChild","_el$3","_el$4","_el$5","_el$7","nextSibling","_el$8","_el$41","_el$42","_co$","_$getNextMarker","_el$9","_el$10","_el$11","_el$12","_el$14","_el$15","_el$16","_el$17","_el$19","_el$20","_el$21","_el$22","_el$24","_el$25","_el$26","_el$27","_el$29","_el$30","_el$31","_el$32","_el$34","_el$35","_el$36","_el$37","_el$39","_el$40","_el$43","_el$44","_co$2","_el$45","_el$46","_co$3","_el$47","_el$48","_el$49","$$keyup","e","key","_ref$","_$use","$$click","_$createComponent","Show","when","children","_el$50","_tmpl$2","addEventListener","setActiveConnection","parseInt","currentTarget","For","each","_el$51","_tmpl$3","_$setProperty","_$effect","_ref$2","_ref$3","_ref$4","_ref$5","_ref$6","_ref$7","_$insert","_c$","_$memo","startScan","_$runHydrationEvents","_$delegateEvents"],"mappings":"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"}