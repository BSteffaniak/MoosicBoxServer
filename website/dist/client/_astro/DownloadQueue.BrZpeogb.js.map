{"version":3,"file":"DownloadQueue.BrZpeogb.js","sources":["../../../src/components/DownloadQueue/DownloadQueue.tsx"],"sourcesContent":["import Album from '~/components/Album';\nimport {\n    For,\n    Show,\n    createComputed,\n    createEffect,\n    createSignal,\n    on,\n} from 'solid-js';\nimport type { JSXElement } from 'solid-js';\nimport { api, Api } from '~/services/api';\nimport type {\n    ApiSource,\n    Track as ApiTrack,\n    Album as ApiAlbum,\n    Artist as ApiArtist,\n} from '~/services/api';\nimport { downloadsState } from '~/services/downloads';\nimport {\n    displayApiSource,\n    displayDownloadTaskState,\n    downloadTaskStateClassName,\n} from '~/services/formatting';\nimport Artist from '~/components/Artist';\n\nfunction downloadTaskProgress(task: Api.DownloadTask): JSXElement {\n    return (\n        <>\n            <div class=\"downloads-download-task-progress-details\">\n                {typeof task.bytes === 'number' &&\n                typeof task.totalBytes === 'number'\n                    ? `${(task.bytes / 1024 / 1024).toFixed(2)}/${(\n                          task.totalBytes /\n                          1024 /\n                          1024\n                      ).toFixed(2)} MiB - `\n                    : ''}\n                {~~task.progress}%\n                {task.speed ? ` - ${(task.speed / 1024).toFixed(2)} KiB/s` : ''}\n            </div>\n            <div class=\"downloads-download-task-progress-bar\">\n                <div\n                    class=\"downloads-download-task-progress-bar-progress\"\n                    style={{\n                        width: `${task.progress}%`,\n                    }}\n                ></div>\n                <div class=\"downloads-download-task-progress-bar-progress-trigger\"></div>\n            </div>\n        </>\n    );\n}\n\nfunction downloadTask(task: Api.DownloadTask): JSXElement {\n    const id = task.id;\n    const item = task.item;\n    const taskType = item.type;\n\n    switch (taskType) {\n        case 'TRACK': {\n            return (\n                <>\n                    <div class=\"downloads-download-task-cover\">\n                        <Album\n                            album={\n                                {\n                                    ...task.item,\n                                    type: item.source,\n                                } as unknown as ApiTrack\n                            }\n                            size={80}\n                        />\n                    </div>\n                    <div class=\"downloads-download-task-details\">\n                        <div class=\"downloads-download-task-header-details\">\n                            Track ({item.trackId}) - {item.title} -{' '}\n                            {displayDownloadTaskState(task.state)} -{' '}\n                            {displayApiSource(item.source as ApiSource)}\n                            <Show when={task.state === 'ERROR'}>\n                                <button onClick={() => api.retryDownload(id)}>\n                                    Retry\n                                </button>\n                            </Show>\n                        </div>\n                        <div class=\"downloads-download-task-location-details\">\n                            {task.filePath}\n                        </div>\n                        <div class=\"downloads-download-task-progress\">\n                            <Show when={task.state === 'STARTED'}>\n                                {downloadTaskProgress(task)}\n                            </Show>\n                        </div>\n                    </div>\n                </>\n            );\n        }\n        case 'ALBUM_COVER': {\n            return (\n                <>\n                    <div class=\"downloads-download-task-cover\">\n                        <Album\n                            album={\n                                {\n                                    ...task.item,\n                                    type: item.source,\n                                } as unknown as ApiAlbum\n                            }\n                            size={80}\n                        />\n                    </div>\n                    <div class=\"downloads-download-task-details\">\n                        <div class=\"downloads-download-task-header-details\">\n                            Album ({item.albumId}) cover - {item.title} -{' '}\n                            {displayDownloadTaskState(task.state)}\n                        </div>\n                        <div class=\"downloads-download-task-location-details\">\n                            {task.filePath}\n                        </div>\n                        <div class=\"downloads-download-task-progress\">\n                            <Show when={task.state === 'STARTED'}>\n                                {downloadTaskProgress(task)}\n                            </Show>\n                        </div>\n                    </div>\n                </>\n            );\n        }\n        case 'ARTIST_COVER': {\n            return (\n                <>\n                    <div class=\"downloads-download-task-cover\">\n                        <Artist\n                            artist={\n                                {\n                                    ...task.item,\n                                    type: item.source,\n                                } as unknown as ApiArtist\n                            }\n                            size={80}\n                        />\n                    </div>\n                    <div class=\"downloads-download-task-details\">\n                        <div class=\"downloads-download-task-header-details\">\n                            Artist ({item.artistId}) (album_id: {item.albumId})\n                            cover - {item.title} -{' '}\n                            {displayDownloadTaskState(task.state)}\n                        </div>\n                        <div class=\"downloads-download-task-location-details\">\n                            {task.filePath}\n                        </div>\n                        <div class=\"downloads-download-task-progress\">\n                            <Show when={task.state === 'STARTED'}>\n                                {downloadTaskProgress(task)}\n                            </Show>\n                        </div>\n                    </div>\n                </>\n            );\n        }\n        default:\n            taskType satisfies never;\n            throw new Error(`Invalid taskType: '${taskType}'`);\n    }\n}\n\nexport type DownloadQueueState = 'QUEUED' | 'HISTORY';\n\nexport default function downloadsPage(props: { state: DownloadQueueState }) {\n    const [tasks, setTasks] = createSignal<Api.DownloadTask[]>([]);\n\n    function initTasks() {\n        const state = props.state;\n\n        switch (state) {\n            case 'QUEUED':\n                setTasks(downloadsState.currentTasks);\n                break;\n            case 'HISTORY':\n                setTasks(downloadsState.historyTasks);\n                break;\n            default:\n                state satisfies never;\n                throw new Error(`Invalid DownloadQueueState '${state}'`);\n        }\n    }\n\n    createComputed(initTasks);\n    createEffect(on(() => downloadsState.tasks, initTasks));\n\n    return (\n        <>\n            {tasks().length === 0 ? (\n                <div class=\"downloads-download-tasks\">\n                    No {props.state === 'QUEUED' ? 'queued' : 'history'} tasks\n                </div>\n            ) : (\n                <div class=\"downloads-download-tasks\">\n                    <For each={tasks()}>\n                        {(task) => (\n                            <div\n                                class={`downloads-download-task ${downloadTaskStateClassName(task.state)}`}\n                            >\n                                {downloadTask(task)}\n                            </div>\n                        )}\n                    </For>\n                </div>\n            )}\n        </>\n    );\n}\n"],"names":["downloadTaskProgress","task","_el$","_$getNextElement","_tmpl$","_el$3","firstChild","_el$4","_co$","_$getNextMarker","nextSibling","_el$5","_el$6","_co$2","_el$2","_el$7","_el$8","_co$3","_$insert","_c$","_$memo","bytes","totalBytes","toFixed","progress","_c$2","speed","_el$9","_tmpl$2","_el$10","_$effect","_$p","style","setProperty","removeProperty","downloadTask","id","item","taskType","type","_el$11","_tmpl$3","_$createComponent","Album","album","source","size","_el$12","_tmpl$5","_el$13","_el$14","_el$21","_el$22","_co$4","_el$15","_el$23","_el$24","_co$5","_el$16","_el$25","_el$26","_co$6","_el$18","_el$27","_el$28","_co$7","_el$29","_el$30","_co$8","_el$31","_el$32","trackId","title","displayDownloadTaskState","state","displayApiSource","Show","when","children","_el$20","_tmpl$4","$$click","api","retryDownload","_$runHydrationEvents","filePath","_el$33","_el$34","_tmpl$6","_el$35","_el$36","_el$40","_el$41","_co$9","_el$37","_el$42","_el$43","_co$10","_el$38","_el$44","_el$45","_co$11","_el$46","_el$47","albumId","_el$48","Artist","artist","_el$49","_tmpl$7","_el$50","_el$51","_el$56","_el$57","_co$12","_el$52","_el$58","_el$59","_co$13","_el$53","_el$60","_el$61","_co$14","_el$54","_el$62","_el$63","_co$15","_el$64","_el$65","artistId","Error","downloadsPage","props","tasks","setTasks","createSignal","initTasks","downloadsState","currentTasks","historyTasks","createComputed","createEffect","on","length","_el$66","_tmpl$8","_el$67","_el$69","_el$70","_co$16","_el$71","_tmpl$9","For","each","_el$72","_tmpl$10","_$className","downloadTaskStateClassName","_$delegateEvents"],"mappings":"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"}