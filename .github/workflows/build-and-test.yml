name: Build and Test

on:
    push:
        branches: ['master']
    pull_request:
        branches: ['master']

env:
    CARGO_TERM_COLOR: always

jobs:
    build:
        runs-on: ${{ matrix.package.os }}

        strategy:
            fail-fast: false

            matrix:
                package:
                    - name: core
                      path: packages/core
                      os: ubuntu-latest

                    - name: files
                      path: packages/files
                      os: ubuntu-latest

                    - name: menu
                      path: packages/menu
                      os: ubuntu-latest

                    - name: player
                      path: packages/player
                      os: ubuntu-latest
                      dependencies: sudo apt-get install libasound2-dev
                      features: cpal

                    - name: ws
                      path: packages/ws
                      os: ubuntu-latest

                    - name: server
                      path: server
                      os: ubuntu-latest
                      dependencies: sudo apt-get install libasound2-dev
                      features: cpal

                    - name: symphonia_player-cpal-windows
                      path: players/symphonia_player
                      os: windows-latest
                      features: cpal

                    - name: symphonia_player-cpal-ubuntu
                      path: players/symphonia_player
                      os: ubuntu-latest
                      dependencies: sudo apt-get install libasound2-dev
                      features: cpal

                    - name: symphonia_player-pulseaudio-standard-ubuntu
                      path: players/symphonia_player
                      os: ubuntu-latest
                      dependencies: sudo apt-get install pulseaudio
                      features: pulseaudio-standard

                    - name: symphonia_player-pulseaudio-simple-ubuntu
                      path: players/symphonia_player
                      os: ubuntu-latest
                      dependencies: sudo apt-get install pulseaudio
                      features: pulseaudio-simple

                    - name: symphonia_player-cpal-macos
                      path: players/symphonia_player
                      os: macos-latest
                      features: cpal

                    - name: symphonia_player-pulseaudio-standard-macos
                      path: players/symphonia_player
                      os: macos-latest
                      dependencies: brew install pulseaudio
                      features: pulseaudio-standard

                    - name: symphonia_player-pulseaudio-simple-macos
                      path: players/symphonia_player
                      os: macos-latest
                      dependencies: brew install pulseaudio
                      features: pulseaudio-simple

        steps:
            - name: Checkout audiotags
              uses: actions/checkout@master
              with:
                  repository: BSteffaniak/audiotags
                  ref: feat/add-full-date-capabilities
                  path: audiotags

            - uses: actions/checkout@v3
              with:
                  path: MoosicBoxServer

            - name: âš¡ Cache cargo
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-${{ matrix.package.name }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Install dependencies
              if: ${{ matrix.package.dependencies }}
              run: ${{ matrix.package.dependencies }}

            - name: Build ${{ matrix.package.name }}
              shell: bash
              working-directory: MoosicBoxServer
              run: |
                  cargo build \
                        --manifest-path=${{ matrix.package.path }}/Cargo.toml \
                        --verbose \
                        --features=fail-on-warnings${{ matrix.package.features && format(',{0}', matrix.package.features) || '' }}

            - name: Run ${{ matrix.package.name }} tests
              shell: bash
              working-directory: MoosicBoxServer
              run: |
                  cargo test \
                        --manifest-path=${{ matrix.package.path }}/Cargo.toml \
                        --verbose \
                        --features=fail-on-warnings${{ matrix.package.features && format(',{0}', matrix.package.features) || '' }}
